/*
 PlayCanvas Engine v0.211.0 revision d46f277
 http://playcanvas.com
 Copyright 2011-2017 PlayCanvas Ltd. All rights reserved.
*/
var pc={version:"0.211.0",revision:"d46f277",config:{},common:{},apps:{},data:{},unpack:function(){console.warn("pc.unpack has been deprecated and will be removed shortly. Please update your code.")},makeArray:function(e){var a,b=[],c=e.length;for(a=0;a<c;++a)b.push(e[a]);return b},type:function(e){if(null===e)return"null";var a=typeof e;return"undefined"==a||"number"==a||"string"==a||"boolean"==a?a:_typeLookup[Object.prototype.toString.call(e)]},extend:function(e,a){var b,c;
for(b in a)c=a[b],"object"==pc.type(c)?e[b]=pc.extend({},c):"array"==pc.type(c)?e[b]=pc.extend([],c):e[b]=c;return e},isDefined:function(e){return void 0!==e}},_typeLookup=function(){for(var e={},a="Array Object Function Date RegExp Float32Array".split(" "),b=0;b<a.length;b++)e["[object "+a[b]+"]"]=a[b].toLowerCase();return e}();"undefined"!==typeof exports&&(exports.pc=pc);(function(){for(var e=0,a=["ms","moz","webkit","o"],b=0;b<a.length&&!window.requestAnimationFrame;++b)window.requestAnimationFrame=window[a[b]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[a[b]+"CancelAnimationFrame"]||window[a[b]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,b){var c=(new Date).getTime(),d=Math.max(0,16-(c-e)),k=window.setTimeout(function(){a(c+d)},d);e=c+d;return k});window.cancelAnimationFrame||(window.cancelAnimationFrame=
function(a){clearTimeout(a)})})();String.prototype.startsWith||Object.defineProperty(String.prototype,"startsWith",{enumerable:!1,configurable:!0,writable:!0,value:function(e){for(var a=0,b=e.length;a<b;a++)if(this[a]!==e[a])return!1;return!0}});String.prototype.endsWith||Object.defineProperty(String.prototype,"endsWith",{enumerable:!1,configurable:!0,writable:!0,value:function(e){for(var a=0,b=e.length;a<b;a++)if(this[a+this.length-b]!==e[a])return!1;return!0}});
String.prototype.includes||(String.prototype.includes=function(e,a){"number"!==typeof a&&(a=0);return a+e.length>this.length?!1:-1!==this.indexOf(e,a)});(function(){if("undefined"!==typeof document){var e=function(a){var b=document.createEvent("CustomEvent");b.initCustomEvent("fullscreenchange",!0,!1,null);a.target.dispatchEvent(b)},a=function(a){var b=document.createEvent("CustomEvent");b.initCustomEvent("fullscreenerror",!0,!1,null);a.target.dispatchEvent(b)};document.addEventListener("webkitfullscreenchange",e,!1);document.addEventListener("mozfullscreenchange",e,!1);document.addEventListener("MSFullscreenChange",e,!1);document.addEventListener("webkitfullscreenerror",
a,!1);document.addEventListener("mozfullscreenerror",a,!1);document.addEventListener("MSFullscreenError",a,!1);Element.prototype.requestFullscreen=Element.prototype.mozRequestFullScreen?function(){this.mozRequestFullScreen()}:Element.prototype.requestFullscreen||Element.prototype.webkitRequestFullscreen||Element.prototype.msRequestFullscreen;document.exitFullscreen=document.exitFullscreen||document.webkitExitFullscreen||document.mozCancelFullScreen||document.msExitFullscreen;document.hasOwnProperty("fullscreenElement")||
Object.defineProperty(document,"fullscreenElement",{enumerable:!0,configurable:!1,get:function(){return document.webkitCurrentFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement}});document.hasOwnProperty("fullscreenEnabled")||Object.defineProperty(document,"fullscreenEnabled",{enumerable:!0,configurable:!1,get:function(){return document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled}})}})();pc.extend(pc,function(){var e=function(a,b,c,d){this.buffer=new ArrayBuffer(16);this.data=new Float32Array(this.buffer,0,4);this.data3=new Float32Array(this.buffer,0,3);var f=a&&a.length;3===f||4===f?(this.data[0]=a[0],this.data[1]=a[1],this.data[2]=a[2],this.data[3]=void 0!==a[3]?a[3]:1):(this.data[0]=a||0,this.data[1]=b||0,this.data[2]=c||0,this.data[3]=void 0!==d?d:1)};e.prototype={clone:function(){return new pc.Color(this.data[0],this.data[1],this.data[2],this.data[3])},copy:function(a){var b=
this.data;a=a.data;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return this},set:function(a,b,c,d){var f=this.data;f[0]=a;f[1]=b;f[2]=c;f[3]=void 0===d?1:d;return this},fromString:function(a){var b=parseInt(a.replace("#","0x"));7<a.length?a=pc.math.intToBytes32(b):(a=pc.math.intToBytes24(b),a[3]=255);this.set(a[0]/255,a[1]/255,a[2]/255,a[3]/255);return this},toString:function(a){var b="#"+(16777216+(parseInt(255*this.r)<<16)+(parseInt(255*this.g)<<8)+parseInt(255*this.b)).toString(16).slice(1);!0===a&&
(a=parseInt(255*this.a).toString(16),b=this.a<16/255?b+("0"+a):b+a);return b}};Object.defineProperty(e.prototype,"r",{get:function(){return this.data[0]},set:function(a){this.data[0]=a}});Object.defineProperty(e.prototype,"g",{get:function(){return this.data[1]},set:function(a){this.data[1]=a}});Object.defineProperty(e.prototype,"b",{get:function(){return this.data[2]},set:function(a){this.data[2]=a}});Object.defineProperty(e.prototype,"a",{get:function(){return this.data[3]},set:function(a){this.data[3]=
a}});return{Color:e}}());pc.guid=function(){return{create:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var a=16*Math.random()|0;return("x"==e?a:a&3|8).toString(16)})}}}();pc.extend(pc,function(){var e=function(){this._isRunning=!1;this._b=this._a=0};e.prototype={start:function(){this._isRunning=!0;this._a=(new Date).getTime()},stop:function(){this._isRunning=!1;this._b=(new Date).getTime()},getMilliseconds:function(){return this._b-this._a}};return{Timer:e,now:window.performance&&window.performance.now&&window.performance.timing?function(){return window.performance.now()}:Date.now}}());pc.extend(pc,function(){return{createURI:function(e){var a="";if((e.authority||e.scheme)&&(e.host||e.hostpath))throw Error("Can't have 'scheme' or 'authority' and 'host' or 'hostpath' option");if(e.host&&e.hostpath)throw Error("Can't have 'host' and 'hostpath' option");if(e.path&&e.hostpath)throw Error("Can't have 'path' and 'hostpath' option");e.scheme&&(a+=e.scheme+":");e.authority&&(a+="//"+e.authority);e.host&&(a+=e.host);e.path&&(a+=e.path);e.hostpath&&(a+=e.hostpath);e.query&&(a+="?"+e.query);
e.fragment&&(a+="#"+e.fragment);return a},URI:function(e){e=e.match(/^(([^:\/?\#]+):)?(\/\/([^\/?\#]*))?([^?\#]*)(\?([^\#]*))?(\#(.*))?/);this.scheme=e[2];this.authority=e[4];this.path=e[5];this.query=e[7];this.fragment=e[9];this.toString=function(){var a="";this.scheme&&(a+=this.scheme+":");this.authority&&(a+="//"+this.authority);a+=this.path;this.query&&(a+="?"+this.query);this.fragment&&(a+="#"+this.fragment);return a};this.getQuery=function(){var a,b,c={};this.query&&(a=decodeURIComponent(this.query).split("&"),
a.forEach(function(a,f,g){b=a.split("=");c[b[0]]=b[1]},this));return c};this.setQuery=function(a){var b="",c;for(c in a)a.hasOwnProperty(c)&&(""!==b&&(b+="&"),b+=encodeURIComponent(c)+"="+encodeURIComponent(a[c]));this.query=b}}}}());pc.extend(pc,function(){return{log:{write:function(e){console.log(e)},open:function(e){pc.log.write("Powered by PlayCanvas "+pc.version+" "+pc.revision)},info:function(e){console.info("INFO:    "+e)},debug:function(e){console.debug("DEBUG:   "+e)},error:function(e){console.error("ERROR:   "+e)},warning:function(e){console.warn("WARNING: "+e)},alert:function(e){pc.log.write("ALERT:   "+e);alert(e)},assert:function(e,a){!1===e&&(pc.log.write("ASSERT:  "+a),alert("ASSERT failed: "+a))}}}}());
var logINFO=pc.log.info,logDEBUG=pc.log.debug,logWARNING=pc.log.warning,logERROR=pc.log.error,logALERT=pc.log.alert,logASSERT=pc.log.assert;Function.prototype.extendsFrom=function(e){var a,b,c=function(){};a=this;b=function(){e.apply(this,arguments);a.apply(this,arguments);this.constructor=a};b._super=e.prototype;c.prototype=e.prototype;b.prototype=new c;return b};pc.extend(pc,function(){return{inherits:function(e,a){var b=function(){},c=function(b,c,g,k,l,p,h,m){a.call(this,b,c,g,k,l,p,h,m);e.call(this,b,c,g,k,l,p,h,m)};c._super=a.prototype;b.prototype=a.prototype;c.prototype=new b;return c}}}());pc.path=function(){return{delimiter:"/",join:function(){var e,a=arguments.length,b=arguments[0];for(e=0;e<a-1;++e){var c=arguments[e],d=arguments[e+1];if(!pc.isDefined(c)||!pc.isDefined(d))throw Error("undefined argument to pc.path.join");b=d[0]===pc.path.delimiter?d:c&&d&&c[c.length-1]!==pc.path.delimiter&&d[0]!==pc.path.delimiter?b+(pc.path.delimiter+d):b+d}return b},split:function(e){e=e.split(pc.path.delimiter);var a=e.slice(e.length-1)[0];return[e.slice(0,e.length-1).join(pc.path.delimiter),
a]},getBasename:function(e){return pc.path.split(e)[1]},getDirectory:function(e){e=e.split(pc.path.delimiter);return e.slice(0,e.length-1).join(pc.path.delimiter)},getExtension:function(e){var a=e.split("?")[0].split(".").pop();return a!==e?"."+a:""},isRelativePath:function(e){return"/"!==e.charAt(0)&&null===e.match(/:\/\//)},extractPath:function(e){var a=".",b=e.split("/");if(1<b.length)for(!1===pc.path.isRelativePath(e)&&(a=""),e=0;e<b.length-1;++e)a+="/"+b[e];return a}}}();pc.string=function(){return{ASCII_LOWERCASE:"abcdefghijklmnopqrstuvwxyz",ASCII_UPPERCASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",ASCII_LETTERS:this.ASCII_LOWERCASE+this.ASCII_UPPERCASE,format:function(e){var a,b,c=pc.makeArray(arguments);c.shift();for(a=0;a<c.length;a++)b=new RegExp("\\{"+a+"\\}","gi"),e=e.replace(b,c[a]);return e},startsWith:function(e,a){console.warn("WARNING: startsWith: Function is deprecated. Use String.startsWith instead.");return e.startsWith(a)},endsWith:function(e,a){console.warn("WARNING: endsWith: Function is deprecated. Use String.endsWith instead.");
return e.endsWith(a)},toBool:function(e,a){if("true"===e)return!0;if(a){if("false"===e)return!1;throw Error("Not a boolean string");}return!1}}}();pc.debug=function(){var e=null,a=null,b=null,c=null;return{display:function(d){e||(e=document.createElement("table"),a=document.createElement("tr"),b=document.createElement("td"),c=document.createElement("td"),e.style.cssText="position:absolute;font-family:sans-serif;font-size:12px;color:#cccccc",e.style.top="0px",e.style.left="0px",e.style.border="thin solid #cccccc",document.body.appendChild(e));e.innerHTML="";for(var f in d){var g=a.cloneNode(),k=b.cloneNode(),l=c.cloneNode();k.textContent=f;l.textContent=
d[f];g.appendChild(k);g.appendChild(l);e.appendChild(g)}}}}();pc.events={attach:function(e){var a=pc.events;e.on=a.on;e.off=a.off;e.fire=a.fire;e.once=a.once;e.hasEvent=a.hasEvent;e._callbackActive={};return e},on:function(e,a,b){if(!e||"string"!==typeof e||!a)return this;this._callbacks||(this._callbacks={});this._callbacks[e]||(this._callbacks[e]=[]);this._callbackActive||(this._callbackActive={});this._callbackActive[e]&&this._callbackActive[e]===this._callbacks[e]&&(this._callbackActive[e]=this._callbackActive[e].slice());this._callbacks[e].push({callback:a,
scope:b||this});return this},off:function(e,a,b){if(!this._callbacks)return this;if(this._callbackActive)if(e)this._callbackActive[e]&&this._callbackActive[e]===this._callbacks[e]&&(this._callbackActive[e]=this._callbackActive[e].slice());else for(var c in this._callbackActive)this._callbacks[c]&&this._callbacks[c]===this._callbackActive[c]&&(this._callbackActive[c]=this._callbackActive[c].slice());if(e)if(a){e=this._callbacks[e];if(!e)return this;for(c=e.length;c--;)e[c].callback===a&&(b&&e[c].scope!==
b||e.splice(c,1))}else this._callbacks[e]&&delete this._callbacks[e];else this._callbacks=null;return this},fire:function(e,a,b,c,d,f,g,k,l){if(!e||!this._callbacks||!this._callbacks[e])return this;var p;this._callbackActive||(this._callbackActive={});this._callbackActive[e]?(this._callbackActive[e]===this._callbacks[e]&&(this._callbackActive[e]=this._callbackActive[e].slice()),p=this._callbacks[e].slice()):this._callbackActive[e]=this._callbacks[e];for(var h=0;h<(p||this._callbackActive[e]).length;h++){var m=
(p||this._callbackActive[e])[h];m.callback.call(m.scope,a,b,c,d,f,g,k,l);m.callback.once&&(m=this._callbacks[e].indexOf(m),-1!==m&&(this._callbackActive[e]===this._callbacks[e]&&(this._callbackActive[e]=this._callbackActive[e].slice()),this._callbacks[e].splice(m,1)))}p||(this._callbackActive[e]=null);return this},once:function(e,a,b){a.once=!0;this.on(e,a,b);return this},hasEvent:function(e){return this._callbacks&&this._callbacks[e]&&0!==this._callbacks[e].length}};pc.extend(pc,function(){var e=function(a){this._index={};this._key=a||null};e.prototype={addItem:function(a){for(var b=a.tags._list,d=0;d<b.length;d++)this.add(b[d],a)},removeItem:function(a){for(var b=a.tags._list,d=0;d<b.length;d++)this.remove(b[d],a)},add:function(a,c){this._index[a]&&-1!==this._index[a].list.indexOf(c)||(this._index[a]||(this._index[a]={list:[]},this._key&&(this._index[a].keys={})),this._index[a].list.push(c),this._key&&(this._index[a].keys[c[this._key]]=c))},remove:function(a,
c){if(this._index[a]&&(!this._key||this._index[a].keys[c[this._key]])){var b=this._index[a].indexOf(c);-1!==b&&(this._index[a].list.splice(b,1),this._key&&delete this._index[a].keys[c[this._key]],0===this._index[a].list.length&&delete this._index[a])}},find:function(a){var b=this,d={},f=[],g,k,e,p,h,m=function(a,c){return b._index[a].list.length-b._index[c].list.length};for(g=0;g<a.length;g++){p=a[g];if(p instanceof Array){if(0===p.length)continue;if(1===p.length)p=p[0];else{e=!1;for(k=0;k<p.length;k++)if(!this._index[p[k]]){e=
!0;break}if(e)continue;p=p.slice(0).sort(m);h=p.slice(1);1===h.length&&(h=h[0]);for(k=0;k<this._index[p[0]].list.length;k++)e=this._index[p[0]].list[k],(this._key?!d[e[this._key]]:-1===f.indexOf(e))&&e.tags.has(h)&&(this._key&&(d[e[this._key]]=!0),f.push(e));continue}}if(p&&"string"===typeof p&&this._index[p])for(k=0;k<this._index[p].list.length;k++)e=this._index[p].list[k],this._key?d[e[this._key]]||(d[e[this._key]]=!0,f.push(e)):-1===f.indexOf(e)&&f.push(e)}return f}};var a=function(a){this._index=
{};this._list=[];this._parent=a;pc.events.attach(this)};a.prototype={add:function(){var a=!1,c=this._processArguments(arguments,!0);if(!c.length)return a;for(var d=0;d<c.length;d++)this._index[c[d]]||(a=!0,this._index[c[d]]=!0,this._list.push(c[d]),this.fire("add",c[d],this._parent));a&&this.fire("change",this._parent);return a},remove:function(){var a=!1;if(!this._list.length)return a;var c=this._processArguments(arguments,!0);if(!c.length)return a;for(var d=0;d<c.length;d++)this._index[c[d]]&&(a=
!0,delete this._index[c[d]],this._list.splice(this._list.indexOf(c[d]),1),this.fire("remove",c[d],this._parent));a&&this.fire("change",this._parent);return a},clear:function(){if(this._list.length){var a=this._list.slice(0);this._list=[];this._index={};for(var c=0;c<a.length;c++)this.fire("remove",a[c],this._parent);this.fire("change",this._parent)}},has:function(){return this._list.length?this._has(this._processArguments(arguments)):!1},_has:function(a){if(!this._list.length||!a.length)return!1;
for(var b=0;b<a.length;b++)if(1===a[b].length){if(this._index[a[b][0]])return!0}else{for(var d=!0,f=0;f<a[b].length;f++)if(!this._index[a[b][f]]){d=!1;break}if(d)return!0}return!1},list:function(){return this._list.slice(0)},_processArguments:function(a,c){var b=[],f=[];if(!a||!a.length)return b;for(var g=0;g<a.length;g++)if(a[g]instanceof Array){c||(f=[]);for(var e=0;e<a[g].length;e++)"string"===typeof a[g][e]&&(c?b.push(a[g][e]):f.push(a[g][e]));!c&&f.length&&b.push(f)}else"string"===typeof a[g]&&
(c?b.push(a[g]):b.push([a[g]]));return b}};Object.defineProperty(a.prototype,"size",{get:function(){return this._list.length}});return{TagsCache:e,Tags:a}}());pc.extend(pc,function(){var e=function(a,b){this._constructor=a;this._pool=[];this._count=0;this._resize(b)};e.prototype={_resize:function(a){if(a>this._pool.length)for(var b=this._pool.length;b<a;b++)this._pool[b]=new this._constructor},allocate:function(){this._count>=this._pool.length&&this._resize(2*this._pool.length);return this._pool[this._count++]},freeAll:function(){this._count=0}};return{AllocatePool:e}}());pc.extend(pc,function(){var e={desktop:!1,mobile:!1,ios:!1,android:!1,windows:!1,cocoonjs:!1,xbox:!1,gamepads:!1,touch:!1},a=navigator.userAgent;/(windows|mac os|linux|cros)/i.test(a)&&(e.desktop=!0);/xbox/i.test(a)&&(e.xbox=!0);/(windows phone|iemobile|wpdesktop)/i.test(a)?(e.desktop=!1,e.mobile=!0,e.windows=!0):/android/i.test(a)?(e.desktop=!1,e.mobile=!0,e.android=!0):/ip([ao]d|hone)/i.test(a)&&(e.desktop=!1,e.mobile=!0,e.ios=!0);navigator.isCocoonJS&&(e.cocoonjs=!0);e.touch="ontouchstart"in window;
e.gamepads="getGamepads"in navigator;return{platform:e}}());pc.math={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,INV_LOG2:1/Math.log(2),clamp:function(e,a,b){return e>=b?b:e<=a?a:e},intToBytes24:function(e){return[e>>16&255,e>>8&255,e&255]},intToBytes32:function(e){return[e>>24&255,e>>16&255,e>>8&255,e&255]},bytesToInt24:function(e,a,b){e.length&&(b=e[2],a=e[1],e=e[0]);return e<<16|a<<8|b},bytesToInt32:function(e,a,b,c){e.length&&(c=e[3],b=e[2],a=e[1],e=e[0]);return(e<<24|a<<16|b<<8|c)>>>32},lerp:function(e,a,b){return e+(a-e)*pc.math.clamp(b,0,1)},lerpAngle:function(e,
a,b){180<a-e&&(a-=360);-180>a-e&&(a+=360);return pc.math.lerp(e,a,pc.math.clamp(b,0,1))},powerOfTwo:function(e){return 0!==e&&!(e&e-1)},nextPowerOfTwo:function(e){e--;e|=e>>1;e|=e>>2;e|=e>>4;e|=e>>8;e|=e>>16;e++;return e},random:function(e,a){return Math.random()*(a-e)+e},smoothstep:function(e,a,b){if(b<=e)return 0;if(b>=a)return 1;b=(b-e)/(a-e);return b*b*(3-2*b)},smootherstep:function(e,a,b){if(b<=e)return 0;if(b>=a)return 1;b=(b-e)/(a-e);return b*b*b*(b*(6*b-15)+10)}};pc.math.intToBytes=pc.math.intToBytes32;
pc.math.bytesToInt=pc.math.bytesToInt32;Math.log2||(Math.log2=function(e){return Math.log(e)*pc.math.INV_LOG2});pc.extend(pc,function(){var e=function(a,b){a&&2===a.length?this.data=new Float32Array(a):(this.data=new Float32Array(2),this.data[0]=a||0,this.data[1]=b||0)};e.prototype={add:function(a){var b=this.data;a=a.data;b[0]+=a[0];b[1]+=a[1];return this},add2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]+d[0];f[1]=c[1]+d[1];return this},clone:function(){return(new e).copy(this)},copy:function(a){var b=this.data;a=a.data;b[0]=a[0];b[1]=a[1];return this},dot:function(a){var b=this.data;a=a.data;
return b[0]*a[0]+b[1]*a[1]},equals:function(a){var b=this.data;a=a.data;return b[0]===a[0]&&b[1]===a[1]},length:function(){var a=this.data;return Math.sqrt(a[0]*a[0]+a[1]*a[1])},lengthSq:function(){var a=this.data;return a[0]*a[0]+a[1]*a[1]},lerp:function(a,b,c){a=a.data;b=b.data;var d=this.data;d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);return this},mul:function(a){var b=this.data;a=a.data;b[0]*=a[0];b[1]*=a[1];return this},mul2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]*d[0];
f[1]=c[1]*d[1];return this},normalize:function(){var a=this.data,b=a[0]*a[0]+a[1]*a[1];0<b&&(b=1/Math.sqrt(b),a[0]*=b,a[1]*=b);return this},scale:function(a){var b=this.data;b[0]*=a;b[1]*=a;return this},set:function(a,b){var c=this.data;c[0]=a;c[1]=b;return this},sub:function(a){var b=this.data;a=a.data;b[0]-=a[0];b[1]-=a[1];return this},sub2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]-d[0];f[1]=c[1]-d[1];return this},toString:function(){return"["+this.data[0]+", "+this.data[1]+"]"}};
Object.defineProperty(e.prototype,"x",{get:function(){return this.data[0]},set:function(a){this.data[0]=a}});Object.defineProperty(e.prototype,"y",{get:function(){return this.data[1]},set:function(a){this.data[1]=a}});Object.defineProperty(e,"ONE",{get:function(){var a=new e(1,1);return function(){return a}}()});Object.defineProperty(e,"RIGHT",{get:function(){var a=new e(1,0);return function(){return a}}()});Object.defineProperty(e,"UP",{get:function(){var a=new e(0,1);return function(){return a}}()});
Object.defineProperty(e,"ZERO",{get:function(){var a=new e(0,0);return function(){return a}}()});return{Vec2:e}}());pc.extend(pc,function(){var e=function(a,b,c){a&&3===a.length?this.data=new Float32Array(a):(this.data=new Float32Array(3),this.data[0]=a||0,this.data[1]=b||0,this.data[2]=c||0)};e.prototype={add:function(a){var b=this.data;a=a.data;b[0]+=a[0];b[1]+=a[1];b[2]+=a[2];return this},add2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]+d[0];f[1]=c[1]+d[1];f[2]=c[2]+d[2];return this},clone:function(){return(new e).copy(this)},copy:function(a){var b=this.data;a=a.data;b[0]=a[0];b[1]=a[1];b[2]=a[2];
return this},cross:function(a,b){var c,d,f,g,e,l,p;c=a.data;d=b.data;f=this.data;g=c[0];e=c[1];c=c[2];l=d[0];p=d[1];d=d[2];f[0]=e*d-p*c;f[1]=c*l-d*g;f[2]=g*p-l*e;return this},dot:function(a){var b=this.data;a=a.data;return b[0]*a[0]+b[1]*a[1]+b[2]*a[2]},equals:function(a){var b=this.data;a=a.data;return b[0]===a[0]&&b[1]===a[1]&&b[2]===a[2]},length:function(){var a=this.data;return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])},lengthSq:function(){var a=this.data;return a[0]*a[0]+a[1]*a[1]+a[2]*a[2]},
lerp:function(a,b,c){a=a.data;b=b.data;var d=this.data;d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return this},mul:function(a){var b=this.data;a=a.data;b[0]*=a[0];b[1]*=a[1];b[2]*=a[2];return this},mul2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]*d[0];f[1]=c[1]*d[1];f[2]=c[2]*d[2];return this},normalize:function(){var a=this.data,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2];0<b&&(b=1/Math.sqrt(b),a[0]*=b,a[1]*=b,a[2]*=b);return this},project:function(a){var b=this.data;
a=a.data;var c=(b[0]*a[0]+b[1]*a[1]+b[2]*a[2])/(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);b[0]=a[0]*c;b[1]=a[1]*c;b[2]=a[2]*c;return this},scale:function(a){var b=this.data;b[0]*=a;b[1]*=a;b[2]*=a;return this},set:function(a,b,c){var d=this.data;d[0]=a;d[1]=b;d[2]=c;return this},sub:function(a){var b=this.data;a=a.data;b[0]-=a[0];b[1]-=a[1];b[2]-=a[2];return this},sub2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]-d[0];f[1]=c[1]-d[1];f[2]=c[2]-d[2];return this},toString:function(){return"["+this.data[0]+
", "+this.data[1]+", "+this.data[2]+"]"}};Object.defineProperty(e.prototype,"x",{get:function(){return this.data[0]},set:function(a){this.data[0]=a}});Object.defineProperty(e.prototype,"y",{get:function(){return this.data[1]},set:function(a){this.data[1]=a}});Object.defineProperty(e.prototype,"z",{get:function(){return this.data[2]},set:function(a){this.data[2]=a}});Object.defineProperty(e,"BACK",{get:function(){var a=new e(0,0,1);return function(){return a}}()});Object.defineProperty(e,"DOWN",{get:function(){var a=
new e(0,-1,0);return function(){return a}}()});Object.defineProperty(e,"FORWARD",{get:function(){var a=new e(0,0,-1);return function(){return a}}()});Object.defineProperty(e,"LEFT",{get:function(){var a=new e(-1,0,0);return function(){return a}}()});Object.defineProperty(e,"ONE",{get:function(){var a=new e(1,1,1);return function(){return a}}()});Object.defineProperty(e,"RIGHT",{get:function(){var a=new e(1,0,0);return function(){return a}}()});Object.defineProperty(e,"UP",{get:function(){var a=new e(0,
1,0);return function(){return a}}()});Object.defineProperty(e,"ZERO",{get:function(){var a=new e(0,0,0);return function(){return a}}()});return{Vec3:e}}());pc.extend(pc,function(){var e=function(a,b,c,d){a&&4===a.length?this.data=new Float32Array(a):(this.data=new Float32Array(4),this.data[0]=a||0,this.data[1]=b||0,this.data[2]=c||0,this.data[3]=d||0)};e.prototype={add:function(a){var b=this.data;a=a.data;b[0]+=a[0];b[1]+=a[1];b[2]+=a[2];b[3]+=a[3];return this},add2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]+d[0];f[1]=c[1]+d[1];f[2]=c[2]+d[2];f[3]=c[3]+d[3];return this},clone:function(){return(new e).copy(this)},copy:function(a){var b=
this.data;a=a.data;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return this},dot:function(a){var b=this.data;a=a.data;return b[0]*a[0]+b[1]*a[1]+b[2]*a[2]+b[3]*a[3]},equals:function(a){var b=this.data;a=a.data;return b[0]===a[0]&&b[1]===a[1]&&b[2]===a[2]&&b[3]===a[3]},length:function(){var a=this.data;return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3])},lengthSq:function(){var a=this.data;return a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3]},lerp:function(a,b,c){a=a.data;b=b.data;var d=this.data;d[0]=
a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);d[3]=a[3]+c*(b[3]-a[3]);return this},mul:function(a){var b=this.data;a=a.data;b[0]*=a[0];b[1]*=a[1];b[2]*=a[2];b[3]*=a[3];return this},mul2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]*d[0];f[1]=c[1]*d[1];f[2]=c[2]*d[2];f[3]=c[3]*d[3];return this},normalize:function(){var a=this.data,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2]+a[3]*a[3];0<b&&(b=1/Math.sqrt(b),a[0]*=b,a[1]*=b,a[2]*=b,a[3]*=b);return this},scale:function(a){var b=this.data;
b[0]*=a;b[1]*=a;b[2]*=a;b[3]*=a;return this},set:function(a,b,c,d){var f=this.data;f[0]=a;f[1]=b;f[2]=c;f[3]=d;return this},sub:function(a){var b=this.data;a=a.data;b[0]-=a[0];b[1]-=a[1];b[2]-=a[2];b[3]-=a[3];return this},sub2:function(a,b){var c=a.data,d=b.data,f=this.data;f[0]=c[0]-d[0];f[1]=c[1]-d[1];f[2]=c[2]-d[2];f[3]=c[3]-d[3];return this},toString:function(){return"["+this.data[0]+", "+this.data[1]+", "+this.data[2]+", "+this.data[3]+"]"}};Object.defineProperty(e.prototype,"x",{get:function(){return this.data[0]},
set:function(a){this.data[0]=a}});Object.defineProperty(e.prototype,"y",{get:function(){return this.data[1]},set:function(a){this.data[1]=a}});Object.defineProperty(e.prototype,"z",{get:function(){return this.data[2]},set:function(a){this.data[2]=a}});Object.defineProperty(e.prototype,"w",{get:function(){return this.data[3]},set:function(a){this.data[3]=a}});Object.defineProperty(e,"ONE",{get:function(){var a=new e(1,1,1,1);return function(){return a}}()});Object.defineProperty(e,"ZERO",{get:function(){var a=
new e(0,0,0,0);return function(){return a}}()});return{Vec4:e}}());pc.extend(pc,function(){var e=function(a,b,c,d,f,g,e,l,p){a&&9===a.length?this.data=new Float32Array(a):(this.data=new Float32Array(9),"number"===typeof a?(this.data[0]=a,this.data[1]=b,this.data[2]=c,this.data[3]=d,this.data[4]=f,this.data[5]=g,this.data[6]=e,this.data[7]=l,this.data[8]=p):this.setIdentity())};e.prototype={clone:function(){return(new pc.Mat3).copy(this)},copy:function(a){a=a.data;var b=this.data;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=
a[8];return this},equals:function(a){var b=this.data;a=a.data;return b[0]===a[0]&&b[1]===a[1]&&b[2]===a[2]&&b[3]===a[3]&&b[4]===a[4]&&b[5]===a[5]&&b[6]===a[6]&&b[7]===a[7]&&b[8]===a[8]},isIdentity:function(){var a=this.data;return 1===a[0]&&0===a[1]&&0===a[2]&&0===a[3]&&1===a[4]&&0===a[5]&&0===a[6]&&0===a[7]&&1===a[8]},setIdentity:function(){var a=this.data;a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return this},toString:function(){for(var a="[",b=0;9>b;b++)a+=this.data[b],a+=
9!==b?", ":"";return a+"]"},transpose:function(){var a=this.data,b;b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this}};Object.defineProperty(e,"IDENTITY",{get:function(){var a=new e;return function(){return a}}()});Object.defineProperty(e,"ZERO",{get:function(){var a=new e(0,0,0,0,0,0,0,0,0);return function(){return a}}()});return{Mat3:e}}());pc.extend(pc,function(){var e=function(a,b,c,d,f,g,e,l,p,h,m,q,n,r,u,v){a&&16===a.length?this.data=new Float32Array(a):(this.data=new Float32Array(16),"number"===typeof a?(this.data[0]=a,this.data[1]=b,this.data[2]=c,this.data[3]=d,this.data[4]=f,this.data[5]=g,this.data[6]=e,this.data[7]=l,this.data[8]=p,this.data[9]=h,this.data[10]=m,this.data[11]=q,this.data[12]=n,this.data[13]=r,this.data[14]=u,this.data[15]=v):this.setIdentity())};e.prototype={add2:function(a,b){var c=a.data,d=b.data,f=this.data;
f[0]=c[0]+d[0];f[1]=c[1]+d[1];f[2]=c[2]+d[2];f[3]=c[3]+d[3];f[4]=c[4]+d[4];f[5]=c[5]+d[5];f[6]=c[6]+d[6];f[7]=c[7]+d[7];f[8]=c[8]+d[8];f[9]=c[9]+d[9];f[10]=c[10]+d[10];f[11]=c[11]+d[11];f[12]=c[12]+d[12];f[13]=c[13]+d[13];f[14]=c[14]+d[14];f[15]=c[15]+d[15];return this},add:function(a){return this.add2(this,a)},clone:function(){return(new pc.Mat4).copy(this)},copy:function(a){a=a.data;var b=this.data;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];
b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return this},equals:function(a){var b=this.data;a=a.data;return b[0]===a[0]&&b[1]===a[1]&&b[2]===a[2]&&b[3]===a[3]&&b[4]===a[4]&&b[5]===a[5]&&b[6]===a[6]&&b[7]===a[7]&&b[8]===a[8]&&b[9]===a[9]&&b[10]===a[10]&&b[11]===a[11]&&b[12]===a[12]&&b[13]===a[13]&&b[14]===a[14]&&b[15]===a[15]},isIdentity:function(){var a=this.data;return 1===a[0]&&0===a[1]&&0===a[2]&&0===a[3]&&0===a[4]&&1===a[5]&&0===a[6]&&0===a[7]&&0===a[8]&&0===a[9]&&
1===a[10]&&0===a[11]&&0===a[12]&&0===a[13]&&0===a[14]&&1===a[15]},mul2:function(a,b){var c,d,f,g,e,l,p,h,m,q,n,r,u,v,B,z,t,w,y,A;z=a.data;var x=b.data,C=this.data;c=z[0];d=z[1];f=z[2];g=z[3];e=z[4];l=z[5];p=z[6];h=z[7];m=z[8];q=z[9];n=z[10];r=z[11];u=z[12];v=z[13];B=z[14];z=z[15];t=x[0];w=x[1];y=x[2];A=x[3];C[0]=c*t+e*w+m*y+u*A;C[1]=d*t+l*w+q*y+v*A;C[2]=f*t+p*w+n*y+B*A;C[3]=g*t+h*w+r*y+z*A;t=x[4];w=x[5];y=x[6];A=x[7];C[4]=c*t+e*w+m*y+u*A;C[5]=d*t+l*w+q*y+v*A;C[6]=f*t+p*w+n*y+B*A;C[7]=g*t+h*w+r*y+
z*A;t=x[8];w=x[9];y=x[10];A=x[11];C[8]=c*t+e*w+m*y+u*A;C[9]=d*t+l*w+q*y+v*A;C[10]=f*t+p*w+n*y+B*A;C[11]=g*t+h*w+r*y+z*A;t=x[12];w=x[13];y=x[14];A=x[15];C[12]=c*t+e*w+m*y+u*A;C[13]=d*t+l*w+q*y+v*A;C[14]=f*t+p*w+n*y+B*A;C[15]=g*t+h*w+r*y+z*A;return this},mul:function(a){return this.mul2(this,a)},transformPoint:function(a,b){var c=this.data,d=a.data;b=void 0===b?new pc.Vec3:b;return b.set(d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+c[12],d[0]*c[1]+d[1]*c[5]+d[2]*c[9]+c[13],d[0]*c[2]+d[1]*c[6]+d[2]*c[10]+c[14])},transformVector:function(a,
b){var c=this.data,d=a.data;b=void 0===b?new pc.Vec3:b;return b.set(d[0]*c[0]+d[1]*c[4]+d[2]*c[8],d[0]*c[1]+d[1]*c[5]+d[2]*c[9],d[0]*c[2]+d[1]*c[6]+d[2]*c[10])},transformVec4:function(a,b){var c=this.data,d=a.data;b=void 0===b?new pc.Vec4:b;return b.set(d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+d[3]*c[12],d[0]*c[1]+d[1]*c[5]+d[2]*c[9]+d[3]*c[13],d[0]*c[2]+d[1]*c[6]+d[2]*c[10]+d[3]*c[14],d[0]*c[3]+d[1]*c[7]+d[2]*c[11]+d[3]*c[15])},setLookAt:function(){var a,b,c;a=new pc.Vec3;b=new pc.Vec3;c=new pc.Vec3;return function(d,
f,g){c.sub2(d,f).normalize();b.copy(g).normalize();a.cross(b,c).normalize();b.cross(c,a);f=this.data;f[0]=a.x;f[1]=a.y;f[2]=a.z;f[3]=0;f[4]=b.x;f[5]=b.y;f[6]=b.z;f[7]=0;f[8]=c.x;f[9]=c.y;f[10]=c.z;f[11]=0;f[12]=d.x;f[13]=d.y;f[14]=d.z;f[15]=1;return this}}(),setFrustum:function(a,b,c,d,f,g){var e,l,p,h,m;e=2*f;l=b-a;p=d-c;h=g-f;m=this.data;m[0]=e/l;m[1]=0;m[2]=0;m[3]=0;m[4]=0;m[5]=e/p;m[6]=0;m[7]=0;m[8]=(b+a)/l;m[9]=(d+c)/p;m[10]=(-g-f)/h;m[11]=-1;m[12]=0;m[13]=0;m[14]=-e*g/h;m[15]=0;return this},
setPerspective:function(a,b,c,d,f){f?(a=c*Math.tan(a*Math.PI/360),f=a/b):(f=c*Math.tan(a*Math.PI/360),a=f*b);return this.setFrustum(-a,a,-f,f,c,d)},setOrtho:function(a,b,c,d,f,g){var e=this.data;e[0]=2/(b-a);e[1]=0;e[2]=0;e[3]=0;e[4]=0;e[5]=2/(d-c);e[6]=0;e[7]=0;e[8]=0;e[9]=0;e[10]=-2/(g-f);e[11]=0;e[12]=-(b+a)/(b-a);e[13]=-(d+c)/(d-c);e[14]=-(g+f)/(g-f);e[15]=1;return this},setFromAxisAngle:function(a,b){var c,d,f,g,e,l,p,h,m;b*=pc.math.DEG_TO_RAD;c=a.x;d=a.y;f=a.z;g=Math.cos(b);e=Math.sin(b);l=
1-g;p=l*c;h=l*d;m=this.data;m[0]=p*c+g;m[1]=p*d+e*f;m[2]=p*f-e*d;m[3]=0;m[4]=p*d-e*f;m[5]=h*d+g;m[6]=h*f+e*c;m[7]=0;m[8]=p*f+e*d;m[9]=h*f-c*e;m[10]=l*f*f+g;m[11]=0;m[12]=0;m[13]=0;m[14]=0;m[15]=1;return this},setTranslate:function(a,b,c){var d=this.data;d[0]=1;d[1]=0;d[2]=0;d[3]=0;d[4]=0;d[5]=1;d[6]=0;d[7]=0;d[8]=0;d[9]=0;d[10]=1;d[11]=0;d[12]=a;d[13]=b;d[14]=c;d[15]=1;return this},setScale:function(a,b,c){var d=this.data;d[0]=a;d[1]=0;d[2]=0;d[3]=0;d[4]=0;d[5]=b;d[6]=0;d[7]=0;d[8]=0;d[9]=0;d[10]=
c;d[11]=0;d[12]=0;d[13]=0;d[14]=0;d[15]=1;return this},invert:function(){var a,b,c,d,f,g,e,l,p,h,m,q,n,r,u,v,B,z,t,w,y,A,x,C,I,M,K,H,F,D;D=this.data;a=D[0];b=D[1];c=D[2];d=D[3];f=D[4];g=D[5];e=D[6];l=D[7];p=D[8];h=D[9];m=D[10];q=D[11];n=D[12];r=D[13];u=D[14];v=D[15];B=a*g-b*f;z=a*e-c*f;t=a*l-d*f;w=b*e-c*g;y=b*l-d*g;A=c*l-d*e;x=p*r-h*n;C=p*u-m*n;I=p*v-q*n;M=h*u-m*r;K=h*v-q*r;H=m*v-q*u;F=B*H-z*K+t*M+w*I-y*C+A*x;0===F?this.setIdentity():(F=1/F,D[0]=(g*H-e*K+l*M)*F,D[1]=(-b*H+c*K-d*M)*F,D[2]=(r*A-u*y+
v*w)*F,D[3]=(-h*A+m*y-q*w)*F,D[4]=(-f*H+e*I-l*C)*F,D[5]=(a*H-c*I+d*C)*F,D[6]=(-n*A+u*t-v*z)*F,D[7]=(p*A-m*t+q*z)*F,D[8]=(f*K-g*I+l*x)*F,D[9]=(-a*K+b*I-d*x)*F,D[10]=(n*y-r*t+v*B)*F,D[11]=(-p*y+h*t-q*B)*F,D[12]=(-f*M+g*C-e*x)*F,D[13]=(a*M-b*C+c*x)*F,D[14]=(-n*w+r*z-u*B)*F,D[15]=(p*w-h*z+m*B)*F);return this},set:function(a){var b=this.data;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=
a[15];return this},setIdentity:function(){var a=this.data;a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return this},setTRS:function(a,b,c){var d,f,g,e,l,p,h,m,q,n,r,u,v;d=a.x;f=a.y;a=a.z;g=b.x;e=b.y;l=b.z;p=b.w;b=c.x;h=c.y;c=c.z;m=g+g;q=e+e;n=l+l;r=g*m;u=g*q;g*=n;v=e*q;e*=n;l*=n;m*=p;q*=p;p*=n;n=this.data;n[0]=(1-(v+l))*b;n[1]=(u+p)*b;n[2]=(g-q)*b;n[3]=0;n[4]=(u-p)*h;n[5]=(1-(r+l))*h;n[6]=(e+m)*h;n[7]=0;n[8]=(g+q)*c;n[9]=(e-
m)*c;n[10]=(1-(r+v))*c;n[11]=0;n[12]=d;n[13]=f;n[14]=a;n[15]=1;return this},transpose:function(){var a,b=this.data;a=b[1];b[1]=b[4];b[4]=a;a=b[2];b[2]=b[8];b[8]=a;a=b[3];b[3]=b[12];b[12]=a;a=b[6];b[6]=b[9];b[9]=a;a=b[7];b[7]=b[13];b[13]=a;a=b[11];b[11]=b[14];b[14]=a;return this},invertTo3x3:function(a){var b,c,d,f,g,e,l,p,h,m;b=this.data;a=a.data;m=b[0];var q=b[1],n=b[2];h=b[4];var r=b[5];e=b[6];p=b[8];var u=b[9];g=b[10];b=g*r-e*u;c=-g*q+n*u;d=e*q-n*r;f=-g*h+e*p;g=g*m-n*p;e=-e*m+n*h;l=u*h-r*p;p=-u*
m+q*p;h=r*m-q*h;m=m*b+q*f+n*l;if(0===m)return console.warn("pc.Mat4#invertTo3x3: Matrix not invertible"),this;m=1/m;a[0]=m*b;a[1]=m*c;a[2]=m*d;a[3]=m*f;a[4]=m*g;a[5]=m*e;a[6]=m*l;a[7]=m*p;a[8]=m*h;return this},getTranslation:function(a){a=void 0===a?new pc.Vec3:a;return a.set(this.data[12],this.data[13],this.data[14])},getX:function(a){a=void 0===a?new pc.Vec3:a;return a.set(this.data[0],this.data[1],this.data[2])},getY:function(a){a=void 0===a?new pc.Vec3:a;return a.set(this.data[4],this.data[5],
this.data[6])},getZ:function(a){a=void 0===a?new pc.Vec3:a;return a.set(this.data[8],this.data[9],this.data[10])},getScale:function(){var a,b,c;a=new pc.Vec3;b=new pc.Vec3;c=new pc.Vec3;return function(d){d=void 0===d?new pc.Vec3:d;this.getX(a);this.getY(b);this.getZ(c);d.set(a.length(),b.length(),c.length());return d}}(),setFromEulerAngles:function(a,b,c){var d,f,g,e;a*=pc.math.DEG_TO_RAD;b*=pc.math.DEG_TO_RAD;c*=pc.math.DEG_TO_RAD;d=Math.sin(-a);a=Math.cos(-a);f=Math.sin(-b);b=Math.cos(-b);g=Math.sin(-c);
c=Math.cos(-c);e=this.data;e[0]=b*c;e[1]=-b*g;e[2]=f;e[3]=0;e[4]=a*g+c*d*f;e[5]=a*c-d*f*g;e[6]=-b*d;e[7]=0;e[8]=d*g-a*c*f;e[9]=c*d+a*f*g;e[10]=a*b;e[11]=0;e[12]=0;e[13]=0;e[14]=0;e[15]=1;return this},getEulerAngles:function(){var a=new pc.Vec3;return function(b){var c,d,f,g,e,l;b=void 0===b?new pc.Vec3:b;this.getScale(a);f=a.x;c=a.y;g=a.z;e=this.data;d=Math.asin(-e[2]/f);l=.5*Math.PI;d<l?d>-l?(c=Math.atan2(e[6]/c,e[10]/g),f=Math.atan2(e[1]/f,e[0]/f)):(f=0,c=-Math.atan2(e[4]/c,e[5]/c)):(f=0,c=Math.atan2(e[4]/
c,e[5]/c));return b.set(c,d,f).scale(pc.math.RAD_TO_DEG)}}(),toString:function(){var a,b;b="[";for(a=0;16>a;a+=1)b+=this.data[a],b+=15!==a?", ":"";return b+"]"}};Object.defineProperty(e,"IDENTITY",{get:function(){var a=new e;return function(){return a}}()});Object.defineProperty(e,"ZERO",{get:function(){var a=new e(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return function(){return a}}()});return{Mat4:e}}());pc.extend(pc,function(){var e=function(a,b,c,d){a&&4===a.length?(this.x=a[0],this.y=a[1],this.z=a[2],this.w=a[3]):(this.x=void 0===a?0:a,this.y=void 0===b?0:b,this.z=void 0===c?0:c,this.w=void 0===d?1:d)};e.prototype={clone:function(){return new pc.Quat(this.x,this.y,this.z,this.w)},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},equals:function(a){return this.x===a.x&&this.y===a.y&&this.z===a.z&&this.w===
a.w},getEulerAngles:function(a){var b,c,d,f,g,e;a=void 0===a?new pc.Vec3:a;d=this.x;f=this.y;g=this.z;e=this.w;c=2*(e*f-d*g);-.99999>=c?(b=2*Math.atan2(d,e),c=-Math.PI/2,d=0):.99999<=c?(b=2*Math.atan2(d,e),c=Math.PI/2,d=0):(b=Math.atan2(2*(e*d+f*g),1-2*(d*d+f*f)),c=Math.asin(c),d=Math.atan2(2*(e*g+d*f),1-2*(f*f+g*g)));return a.set(b,c,d).scale(pc.math.RAD_TO_DEG)},invert:function(){return this.conjugate().normalize()},length:function(){var a,b,c,d;a=this.x;b=this.y;c=this.z;d=this.w;return Math.sqrt(a*
a+b*b+c*c+d*d)},lengthSq:function(){return NaN},mul:function(a){var b,c,d,f,g,e,l;b=this.x;c=this.y;d=this.z;f=this.w;g=a.x;e=a.y;l=a.z;a=a.w;this.x=f*g+b*a+c*l-d*e;this.y=f*e+c*a+d*g-b*l;this.z=f*l+d*a+b*e-c*g;this.w=f*a-b*g-c*e-d*l;return this},mul2:function(a,b){var c,d,f,g,e,l,p,h;c=a.x;d=a.y;f=a.z;g=a.w;e=b.x;l=b.y;p=b.z;h=b.w;this.x=g*e+c*h+d*p-f*l;this.y=g*l+d*h+f*e-c*p;this.z=g*p+f*h+c*l-d*e;this.w=g*h-c*e-d*l-f*p;return this},normalize:function(){var a=this.length();0===a?(this.x=this.y=
this.z=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setFromAxisAngle:function(a,b){var c,d;b*=.5*pc.math.DEG_TO_RAD;c=Math.sin(b);d=Math.cos(b);this.x=c*a.x;this.y=c*a.y;this.z=c*a.z;this.w=d;return this},setFromEulerAngles:function(a,b,c){var d,f,g;d=.5*pc.math.DEG_TO_RAD;a*=d;b*=d;c*=d;d=Math.sin(a);a=Math.cos(a);f=Math.sin(b);b=Math.cos(b);g=Math.sin(c);c=Math.cos(c);this.x=d*b*c-a*f*g;this.y=a*f*
c+d*b*g;this.z=a*b*g-d*f*c;this.w=a*b*c+d*f*g;return this},setFromMat4:function(a){var b,c,d,f,g,e,l,p,h,m,q;a=a.data;b=a[0];c=a[1];d=a[2];f=a[4];g=a[5];e=a[6];l=a[8];p=a[9];a=a[10];h=1/Math.sqrt(b*b+c*c+d*d);m=1/Math.sqrt(f*f+g*g+e*e);q=1/Math.sqrt(l*l+p*p+a*a);b*=h;c*=h;d*=h;f*=m;g*=m;e*=m;l*=q;p*=q;a*=q;h=b+g+a;0<=h?(b=Math.sqrt(h+1),this.w=.5*b,b=.5/b,this.x=(e-p)*b,this.y=(l-d)*b,this.z=(c-f)*b):b>g?b>a?(b=Math.sqrt(b-(g+a)+1),this.x=.5*b,b=.5/b,this.w=(e-p)*b,this.y=(c+f)*b,this.z=(d+l)*b):
(b=Math.sqrt(a-(b+g)+1),this.z=.5*b,b=.5/b,this.w=(c-f)*b,this.x=(l+d)*b,this.y=(p+e)*b):g>a?(b=Math.sqrt(g-(a+b)+1),this.y=.5*b,b=.5/b,this.w=(l-d)*b,this.z=(e+p)*b,this.x=(f+c)*b):(b=Math.sqrt(a-(b+g)+1),this.z=.5*b,b=.5/b,this.w=(c-f)*b,this.x=(l+d)*b,this.y=(p+e)*b);return this},slerp:function(a,b,c){var d,f,g,e,l,p;d=a.x;f=a.y;g=a.z;a=a.w;e=b.x;l=b.y;p=b.z;b=b.w;var h=a*b+d*e+f*l+g*p;0>h&&(b=-b,e=-e,l=-l,p=-p,h=-h);if(1<=Math.abs(h))return this.w=a,this.x=d,this.y=f,this.z=g,this;var m=Math.acos(h),
q=Math.sqrt(1-h*h);if(.001>Math.abs(q))return this.w=.5*a+.5*b,this.x=.5*d+.5*e,this.y=.5*f+.5*l,this.z=.5*g+.5*p,this;h=Math.sin((1-c)*m)/q;c=Math.sin(c*m)/q;this.w=a*h+b*c;this.x=d*h+e*c;this.y=f*h+l*c;this.z=g*h+p*c;return this},transformVector:function(a,b){void 0===b&&(b=new pc.Vec3);var c=a.x,d=a.y,f=a.z,g=this.x,e=this.y,l=this.z,p=this.w,h=p*c+e*f-l*d,m=p*d+l*c-g*f,q=p*f+g*d-e*c,c=-g*c-e*d-l*f;b.x=h*p+c*-g+m*-l-q*-e;b.y=m*p+c*-e+q*-g-h*-l;b.z=q*p+c*-l+h*-e-m*-g;return b},toString:function(){return"["+
this.x+", "+this.y+", "+this.z+", "+this.w+"]"}};Object.defineProperty(e,"IDENTITY",{get:function(){var a=new e;return function(){return a}}()});Object.defineProperty(e,"ZERO",{get:function(){var a=new e(0,0,0,0);return function(){return a}}()});return{Quat:e}}());pc.extend(pc,function(){var e=function(a){this.keys=[];this.type=1;this.tension=.5;if(a)for(var b=0;b<a.length-1;b+=2)this.keys.push([a[b],a[b+1]]);this.sort()};e.prototype={add:function(a,b){for(var c=this.keys,d=c.length,f=0;f<d&&!(c[f][0]>a);f++);c=[a,b];this.keys.splice(f,0,c);return c},get:function(a){return this.keys[a]},sort:function(){this.keys.sort(function(a,b){return a[0]-b[0]})},value:function(a){var b=this.keys;if(!b.length)return 0;if(a<b[0][0])return b[0][1];if(a>b[b.length-1][0])return b[b.length-
1][1];for(var c=0,d=b.length?b[0][1]:0,f=1,g=0,e=0,l=b.length;e<l;e++){if(b[e][0]===a)return b[e][1];g=b[e][1];if(a<b[e][0]){f=b[e][0];break}c=b[e][0];d=b[e][1]}l=f-c;a=0===l?0:(a-c)/l;if(1===this.type)a*=a*(3-2*a);else if(2===this.type||3===this.type){var l=d+(d-g),p=g+(g-d),h=f=c=f-c;0<e&&--e;0<e&&(l=b[e-1][1],f=b[e][0]-b[e-1][0]);b.length>e+1&&(c=b[e+1][0]-b[e][0]);b.length>e+2&&(h=b[e+2][0]-b[e+1][0],p=b[e+2][1]);l=d+(l-d)*c/f;p=g+(p-g)*c/h;return 2===this.type?this._interpolateCatmullRom(l,d,
g,p,a):this._interpolateCardinal(l,d,g,p,a,this.tension)}return pc.math.lerp(d,g,a)},_interpolateHermite:function(a,b,c,d,f){var g=f*f,e=f*f*f;return a*(2*e-3*g+1)+b*(-2*e+3*g)+c*(e-2*g+f)+d*(e-g)},_interpolateCardinal:function(a,b,c,d,f,g){return this._interpolateHermite(b,c,g*(c-a),g*(d-b),f)},_interpolateCatmullRom:function(a,b,c,d,f){return this._interpolateCardinal(a,b,c,d,f,.5)},closest:function(a){for(var b=this.keys,c=b.length,d=2,f=null,g=0;g<c;g++){var e=Math.abs(a-b[g][0]);if(d>=e)d=e,
f=b[g];else break}return f},clone:function(){var a=new pc.Curve;a.keys=pc.extend(a.keys,this.keys);a.type=this.type;return a},quantize:function(a){a=Math.max(a,2);for(var b=new Float32Array(a),c=1/(a-1),d=0;d<a;d++){var f=this.value(c*d);b[d]=f}return b}};Object.defineProperty(e.prototype,"length",{get:function(){return this.keys.length}});return{Curve:e,CURVE_LINEAR:0,CURVE_SMOOTHSTEP:1,CURVE_CATMULL:2,CURVE_CARDINAL:3}}());pc.extend(pc,function(){var e=function(){var a;this.curves=[];this._type=pc.CURVE_SMOOTHSTEP;if(1<arguments.length)for(a=0;a<arguments.length;a++)this.curves.push(new pc.Curve(arguments[a]));else if(0===arguments.length)this.curves.push(new pc.Curve);else{var b=arguments[0];if("number"===pc.type(b))for(a=0;a<b;a++)this.curves.push(new pc.Curve);else for(a=0;a<b.length;a++)this.curves.push(new pc.Curve(b[a]))}};e.prototype={get:function(a){return this.curves[a]},value:function(a,b){var c=this.curves.length;
b=b||[];b.length=c;for(var d=0;d<c;d++)b[d]=this.curves[d].value(a);return b},clone:function(){var a=new pc.CurveSet;a.curves=[];for(var b=0;b<this.curves.length;b++)a.curves.push(this.curves[b].clone());a._type=this._type;return a},quantize:function(a){a=Math.max(a,2);for(var b=this.curves.length,c=new Float32Array(a*b),d=1/(a-1),f=[],g=0;g<a;g++){var e=this.value(d*g,f);if(1==b)c[g]=e[0];else for(var l=0;l<b;l++)c[g*b+l]=e[l]}return c}};Object.defineProperty(e.prototype,"length",{get:function(){return this.curves.length}});
Object.defineProperty(e.prototype,"type",{get:function(){return this._type},set:function(a){this._type=a;for(var b=0;b<this.curves.length;b++)this.curves[b].type=a}});return{CurveSet:e}}());pc.extend(pc,function(){var e=new pc.Vec3,a=new pc.Vec3,b=new pc.Vec3,c=new pc.Vec3,d=new pc.Vec3;new pc.Vec3;var f=function(a,b){this.center=a||new pc.Vec3(0,0,0);this.halfExtents=b||new pc.Vec3(.5,.5,.5);this._min=new pc.Vec3;this._max=new pc.Vec3};f.prototype={add:function(a){var b=this.center.data,c=b[0],d=b[1],f=b[2],g=this.halfExtents.data,e=g[0],n=g[1],r=g[2],u=c-e,c=c+e,e=d-n,d=d+n,n=f-r,f=f+r,r=a.center.data,v=r[0],B=r[1],r=r[2];a=a.halfExtents.data;var z=a[0],t=a[1],w=a[2];a=v-z;v+=z;z=
B-t;B+=t;t=r-w;r+=w;a<u&&(u=a);v>c&&(c=v);z<e&&(e=z);B>d&&(d=B);t<n&&(n=t);r>f&&(f=r);b[0]=.5*(u+c);b[1]=.5*(e+d);b[2]=.5*(n+f);g[0]=.5*(c-u);g[1]=.5*(d-e);g[2]=.5*(f-n)},copy:function(a){this.center.copy(a.center);this.halfExtents.copy(a.halfExtents);this.type=a.type},clone:function(){return new pc.BoundingBox(this.center.clone(),this.halfExtents.clone())},intersects:function(a){var b=this.getMax(),c=this.getMin(),d=a.getMax();a=a.getMin();return c.x<=d.x&&b.x>=a.x&&c.y<=d.y&&b.y>=a.y&&c.z<=d.z&&
b.z>=a.z},_intersectsRay:function(d,f){for(var g=e.copy(this.getMin()).sub(d.origin).data,k=a.copy(this.getMax()).sub(d.origin).data,h=d.direction.data,m=0;3>m;m++)0===h[m]?(g[m]=0>g[m]?-Number.MAX_VALUE:Number.MAX_VALUE,k[m]=0>k[m]?-Number.MAX_VALUE:Number.MAX_VALUE):(g[m]/=h[m],k[m]/=h[m]);h=b.set(Math.min(g[0],k[0]),Math.min(g[1],k[1]),Math.min(g[2],k[2])).data;g=c.set(Math.max(g[0],k[0]),Math.max(g[1],k[1]),Math.max(g[2],k[2])).data;k=Math.max(Math.max(h[0],h[1]),h[2]);(g=Math.min(Math.min(g[0],
g[1]),g[2])>=k&&0<=k)&&f.copy(d.direction).scale(k).add(d.origin);return g},_fastIntersectsRay:function(f){var g=f.direction;e.sub2(f.origin,this.center);c.set(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z));b.mul2(e,g);if(c.x>this.halfExtents.x&&0<=b.x||c.y>this.halfExtents.y&&0<=b.y||c.z>this.halfExtents.z&&0<=b.z)return!1;d.set(Math.abs(g.x),Math.abs(g.y),Math.abs(g.z));a.cross(g,e);a.set(Math.abs(a.x),Math.abs(a.y),Math.abs(a.z));return a.x>this.halfExtents.y*d.z+this.halfExtents.z*d.y||a.y>this.halfExtents.x*
d.z+this.halfExtents.z*d.x||a.z>this.halfExtents.x*d.y+this.halfExtents.y*d.x?!1:!0},intersectsRay:function(a,b){return b?this._intersectsRay(a,b):this._fastIntersectsRay(a)},setMinMax:function(a,b){this.center.add2(b,a).scale(.5);this.halfExtents.sub2(b,a).scale(.5)},getMin:function(){return this._min.copy(this.center).sub(this.halfExtents)},getMax:function(){return this._max.copy(this.center).add(this.halfExtents)},containsPoint:function(a){var b=this.getMin(),c=this.getMax(),d;for(d=0;3>d;++d)if(a.data[d]<
b.data[d]||a.data[d]>c.data[d])return!1;return!0},setFromTransformedAabb:function(a,b){var c=this.center,d=this.halfExtents,f=a.center.data,g=a.halfExtents.data;b=b.data;var e=b[0],k=b[4],r=b[8],u=b[1],v=b[5],B=b[9],z=b[2],t=b[6],w=b[10],y=Math.abs(e),A=Math.abs(k),x=Math.abs(r),C=Math.abs(u),I=Math.abs(v),M=Math.abs(B),K=Math.abs(z),H=Math.abs(t),F=Math.abs(w);c.set(b[12]+e*f[0]+k*f[1]+r*f[2],b[13]+u*f[0]+v*f[1]+B*f[2],b[14]+z*f[0]+t*f[1]+w*f[2]);d.set(y*g[0]+A*g[1]+x*g[2],C*g[0]+I*g[1]+M*g[2],K*
g[0]+H*g[1]+F*g[2])},compute:function(b){for(var c=e.set(b[0],b[1],b[2]),d=a.set(b[0],b[1],b[2]),f=b.length/3,g=1;g<f;g++){var m=b[3*g+0],q=b[3*g+1],n=b[3*g+2];m<c.x&&(c.x=m);q<c.y&&(c.y=q);n<c.z&&(c.z=n);m>d.x&&(d.x=m);q>d.y&&(d.y=q);n>d.z&&(d.z=n)}this.setMinMax(c,d)},intersectsBoundingSphere:function(a){return this._distanceToBoundingSphereSq(a)<=a.radius*a.radius?!0:!1},_distanceToBoundingSphereSq:function(a){for(var b=this.getMin(),c=this.getMax(),d=0,f=0;3>f;++f){var g=0,e=a.center.data[f],
n=b.data[f],r=c.data[f];e<n&&(n-=e,g+=n*n);e>r&&(n=e-r,g+=n*n);d+=g}return d}};return{BoundingBox:f}}());pc.extend(pc,function(){function e(a,b){this.center=a||new pc.Vec3(0,0,0);this.radius=void 0===b?.5:b}var a=new pc.Vec3,b=new pc.Vec3,c=new pc.Vec3,d=new pc.Vec3;new pc.Vec3;e.prototype={containsPoint:function(b){b=a.sub2(b,this.center).lengthSq();var c=this.radius;return b<c*c},compute:function(f){var g,e=f.length/3;for(g=0;g<e;g++)a.set(f[3*g],f[3*g+1],f[3*g+2]),c.addSelf(a),0===g%100&&(c.scale(1/e),b.add(c),c.set(0,0,0));c.scale(1/e);b.add(c);this.center.copy(b);var l=0;for(g=0;g<e;g++)a.set(f[3*
g],f[3*g+1],f[3*g+2]),d.sub2(a,this.center),l=Math.max(d.lengthSq(),l);this.radius=Math.sqrt(l)},intersectsRay:function(c,d){var f=a.copy(c.origin).sub(this.center),g=f.dot(b.copy(c.direction).normalize()),f=f.dot(f)-this.radius*this.radius;if(0<f&&0<g)return null;f=g*g-f;if(0>f)return!1;g=Math.abs(-g-Math.sqrt(f));d&&d.copy(c.direction).scale(g).add(c.origin);return!0},intersectsBoundingSphere:function(b){a.sub2(b.center,this.center);b=b.radius+this.radius;return a.lengthSq()<=b*b?!0:!1}};return{BoundingSphere:e}}());pc.extend(pc,function(){var e=new pc.Mat4,a=function(a,c){a=a||(new pc.Mat4).setPerspective(90,16/9,.1,1E3);c=c||new pc.Mat4;this.planes=[];for(var b=0;6>b;b++)this.planes[b]=[];this.update(a,c)};a.prototype={update:function(a,c){e.mul2(a,c);var b=e.data;this.planes[0][0]=b[3]-b[0];this.planes[0][1]=b[7]-b[4];this.planes[0][2]=b[11]-b[8];this.planes[0][3]=b[15]-b[12];var f=Math.sqrt(this.planes[0][0]*this.planes[0][0]+this.planes[0][1]*this.planes[0][1]+this.planes[0][2]*this.planes[0][2]);this.planes[0][0]/=
f;this.planes[0][1]/=f;this.planes[0][2]/=f;this.planes[0][3]/=f;this.planes[1][0]=b[3]+b[0];this.planes[1][1]=b[7]+b[4];this.planes[1][2]=b[11]+b[8];this.planes[1][3]=b[15]+b[12];f=Math.sqrt(this.planes[1][0]*this.planes[1][0]+this.planes[1][1]*this.planes[1][1]+this.planes[1][2]*this.planes[1][2]);this.planes[1][0]/=f;this.planes[1][1]/=f;this.planes[1][2]/=f;this.planes[1][3]/=f;this.planes[2][0]=b[3]+b[1];this.planes[2][1]=b[7]+b[5];this.planes[2][2]=b[11]+b[9];this.planes[2][3]=b[15]+b[13];f=
Math.sqrt(this.planes[2][0]*this.planes[2][0]+this.planes[2][1]*this.planes[2][1]+this.planes[2][2]*this.planes[2][2]);this.planes[2][0]/=f;this.planes[2][1]/=f;this.planes[2][2]/=f;this.planes[2][3]/=f;this.planes[3][0]=b[3]-b[1];this.planes[3][1]=b[7]-b[5];this.planes[3][2]=b[11]-b[9];this.planes[3][3]=b[15]-b[13];f=Math.sqrt(this.planes[3][0]*this.planes[3][0]+this.planes[3][1]*this.planes[3][1]+this.planes[3][2]*this.planes[3][2]);this.planes[3][0]/=f;this.planes[3][1]/=f;this.planes[3][2]/=f;
this.planes[3][3]/=f;this.planes[4][0]=b[3]-b[2];this.planes[4][1]=b[7]-b[6];this.planes[4][2]=b[11]-b[10];this.planes[4][3]=b[15]-b[14];f=Math.sqrt(this.planes[4][0]*this.planes[4][0]+this.planes[4][1]*this.planes[4][1]+this.planes[4][2]*this.planes[4][2]);this.planes[4][0]/=f;this.planes[4][1]/=f;this.planes[4][2]/=f;this.planes[4][3]/=f;this.planes[5][0]=b[3]+b[2];this.planes[5][1]=b[7]+b[6];this.planes[5][2]=b[11]+b[10];this.planes[5][3]=b[15]+b[14];f=Math.sqrt(this.planes[5][0]*this.planes[5][0]+
this.planes[5][1]*this.planes[5][1]+this.planes[5][2]*this.planes[5][2]);this.planes[5][0]/=f;this.planes[5][1]/=f;this.planes[5][2]/=f;this.planes[5][3]/=f},containsPoint:function(a){for(var b=0;6>b;b++)if(0>=this.planes[b][0]*a.x+this.planes[b][1]*a.y+this.planes[b][2]*a.z+this.planes[b][3])return!1;return!0},containsSphere:function(a){var b=0,d,f,g=a.radius;f=a.center.data;a=f[0];var e=f[1],l=f[2],p=this.planes;for(f=0;6>f;f++){d=p[f];d=d[0]*a+d[1]*e+d[2]*l+d[3];if(d<=-g)return 0;d>g&&b++}return 6===
b?2:1}};return{Frustum:a}}());pc.extend(pc,function(){var e=new pc.Vec3,a=function(a,c){this.normal=c||new pc.Vec3(0,0,1);this.point=a||new pc.Vec3(0,0,0)};a.prototype={intersectsLine:function(a,c,d){var b=-this.normal.dot(this.point),g=this.normal.dot(a)+b,b=this.normal.dot(c)+b,g=g/(g-b);(b=0<=g&&1>=g)&&d&&d.lerp(a,c,g);return b},intersectsRay:function(a,c){var b=e.sub2(this.point,a.origin),b=this.normal.dot(b)/this.normal.dot(a.direction),f=0<=b;f&&c&&c.copy(a.direction).scale(b).add(a.origin);return f}};return{Plane:a}}());pc.extend(pc,function(){return{Ray:function(e,a){this.origin=e||new pc.Vec3(0,0,0);this.direction=a||new pc.Vec3(0,0,-1)}}}());pc.extend(pc,function(){var e=new pc.Ray,a=new pc.Vec3,b=new pc.BoundingSphere,c=new pc.Mat4,d=function(a,b){this.halfExtents=b||new pc.Vec3(.5,.5,.5);a=a||c.setIdentity();this._modelTransform=a.clone().invert();this._aabb=new pc.BoundingBox(new pc.Vec3,this.halfExtents)};d.prototype={intersectsRay:function(a,b){this._modelTransform.transformPoint(a.origin,e.origin);this._modelTransform.transformVector(a.direction,e.direction);if(b){var d=this._aabb._intersectsRay(e,b);c.copy(this._modelTransform).invert().transformPoint(b,
b);return d}return this._aabb._fastIntersectsRay(e)},containsPoint:function(b){this._modelTransform.transformPoint(b,a);return this._aabb.containsPoint(a)},intersectsBoundingSphere:function(a){this._modelTransform.transformPoint(a.center,b.center);b.radius=a.radius;return this._aabb.intersectsBoundingSphere(b)?!0:!1}};Object.defineProperty(d.prototype,"worldTransform",{set:function(a){this._modelTransform.copy(a).invert()}});return{OrientedBox:d}}());(function(){var e={ADDRESS_REPEAT:0,ADDRESS_CLAMP_TO_EDGE:1,ADDRESS_MIRRORED_REPEAT:2,BLENDMODE_ZERO:0,BLENDMODE_ONE:1,BLENDMODE_SRC_COLOR:2,BLENDMODE_ONE_MINUS_SRC_COLOR:3,BLENDMODE_DST_COLOR:4,BLENDMODE_ONE_MINUS_DST_COLOR:5,BLENDMODE_SRC_ALPHA:6,BLENDMODE_SRC_ALPHA_SATURATE:7,BLENDMODE_ONE_MINUS_SRC_ALPHA:8,BLENDMODE_DST_ALPHA:9,BLENDMODE_ONE_MINUS_DST_ALPHA:10,BLENDEQUATION_ADD:0,BLENDEQUATION_SUBTRACT:1,BLENDEQUATION_REVERSE_SUBTRACT:2,BLENDEQUATION_MIN:3,BLENDEQUATION_MAX:4,BUFFER_STATIC:0,
BUFFER_DYNAMIC:1,BUFFER_STREAM:2,BUFFER_GPUDYNAMIC:3,CLEARFLAG_COLOR:1,CLEARFLAG_DEPTH:2,CLEARFLAG_STENCIL:4,CUBEFACE_POSX:0,CUBEFACE_NEGX:1,CUBEFACE_POSY:2,CUBEFACE_NEGY:3,CUBEFACE_POSZ:4,CUBEFACE_NEGZ:5,CULLFACE_NONE:0,CULLFACE_BACK:1,CULLFACE_FRONT:2,CULLFACE_FRONTANDBACK:3,ELEMENTTYPE_INT8:0,ELEMENTTYPE_UINT8:1,ELEMENTTYPE_INT16:2,ELEMENTTYPE_UINT16:3,ELEMENTTYPE_INT32:4,ELEMENTTYPE_UINT32:5,ELEMENTTYPE_FLOAT32:6,FILTER_NEAREST:0,FILTER_LINEAR:1,FILTER_NEAREST_MIPMAP_NEAREST:2,FILTER_NEAREST_MIPMAP_LINEAR:3,
FILTER_LINEAR_MIPMAP_NEAREST:4,FILTER_LINEAR_MIPMAP_LINEAR:5,FUNC_NEVER:0,FUNC_LESS:1,FUNC_EQUAL:2,FUNC_LESSEQUAL:3,FUNC_GREATER:4,FUNC_NOTEQUAL:5,FUNC_GREATEREQUAL:6,FUNC_ALWAYS:7,INDEXFORMAT_UINT8:0,INDEXFORMAT_UINT16:1,INDEXFORMAT_UINT32:2,PIXELFORMAT_A8:0,PIXELFORMAT_L8:1,PIXELFORMAT_L8_A8:2,PIXELFORMAT_R5_G6_B5:3,PIXELFORMAT_R5_G5_B5_A1:4,PIXELFORMAT_R4_G4_B4_A4:5,PIXELFORMAT_R8_G8_B8:6,PIXELFORMAT_R8_G8_B8_A8:7,PIXELFORMAT_DXT1:8,PIXELFORMAT_DXT3:9,PIXELFORMAT_DXT5:10,PIXELFORMAT_RGB16F:11,
PIXELFORMAT_RGBA16F:12,PIXELFORMAT_RGB32F:13,PIXELFORMAT_RGBA32F:14,PIXELFORMAT_R32F:15,PIXELFORMAT_DEPTH:16,PIXELFORMAT_DEPTHSTENCIL:17,PIXELFORMAT_111110F:18,PIXELFORMAT_SRGB:19,PIXELFORMAT_SRGBA:20,PIXELFORMAT_ETC1:21,PIXELFORMAT_PVRTC_2BPP_RGB_1:22,PIXELFORMAT_PVRTC_2BPP_RGBA_1:23,PIXELFORMAT_PVRTC_4BPP_RGB_1:24,PIXELFORMAT_PVRTC_4BPP_RGBA_1:25,PRIMITIVE_POINTS:0,PRIMITIVE_LINES:1,PRIMITIVE_LINELOOP:2,PRIMITIVE_LINESTRIP:3,PRIMITIVE_TRIANGLES:4,PRIMITIVE_TRISTRIP:5,PRIMITIVE_TRIFAN:6,SEMANTIC_POSITION:"POSITION",
SEMANTIC_NORMAL:"NORMAL",SEMANTIC_TANGENT:"TANGENT",SEMANTIC_BLENDWEIGHT:"BLENDWEIGHT",SEMANTIC_BLENDINDICES:"BLENDINDICES",SEMANTIC_COLOR:"COLOR",SEMANTIC_TEXCOORD0:"TEXCOORD0",SEMANTIC_TEXCOORD1:"TEXCOORD1",SEMANTIC_TEXCOORD2:"TEXCOORD2",SEMANTIC_TEXCOORD3:"TEXCOORD3",SEMANTIC_TEXCOORD4:"TEXCOORD4",SEMANTIC_TEXCOORD5:"TEXCOORD5",SEMANTIC_TEXCOORD6:"TEXCOORD6",SEMANTIC_TEXCOORD7:"TEXCOORD7",SEMANTIC_ATTR0:"ATTR0",SEMANTIC_ATTR1:"ATTR1",SEMANTIC_ATTR2:"ATTR2",SEMANTIC_ATTR3:"ATTR3",SEMANTIC_ATTR4:"ATTR4",
SEMANTIC_ATTR5:"ATTR5",SEMANTIC_ATTR6:"ATTR6",SEMANTIC_ATTR7:"ATTR7",SEMANTIC_ATTR8:"ATTR8",SEMANTIC_ATTR9:"ATTR9",SEMANTIC_ATTR10:"ATTR10",SEMANTIC_ATTR11:"ATTR11",SEMANTIC_ATTR12:"ATTR12",SEMANTIC_ATTR13:"ATTR13",SEMANTIC_ATTR14:"ATTR14",SEMANTIC_ATTR15:"ATTR15",SHADERTAG_MATERIAL:1,STENCILOP_KEEP:0,STENCILOP_ZERO:1,STENCILOP_REPLACE:2,STENCILOP_INCREMENT:3,STENCILOP_INCREMENTWRAP:4,STENCILOP_DECREMENT:5,STENCILOP_DECREMENTWRAP:6,STENCILOP_INVERT:7,TEXTURELOCK_READ:1,TEXTURELOCK_WRITE:2,TEXHINT_NONE:0,
TEXHINT_SHADOWMAP:1,TEXHINT_ASSET:2,TEXHINT_LIGHTMAP:3,UNIFORMTYPE_BOOL:0,UNIFORMTYPE_INT:1,UNIFORMTYPE_FLOAT:2,UNIFORMTYPE_VEC2:3,UNIFORMTYPE_VEC3:4,UNIFORMTYPE_VEC4:5,UNIFORMTYPE_IVEC2:6,UNIFORMTYPE_IVEC3:7,UNIFORMTYPE_IVEC4:8,UNIFORMTYPE_BVEC2:9,UNIFORMTYPE_BVEC3:10,UNIFORMTYPE_BVEC4:11,UNIFORMTYPE_MAT2:12,UNIFORMTYPE_MAT3:13,UNIFORMTYPE_MAT4:14,UNIFORMTYPE_TEXTURE2D:15,UNIFORMTYPE_TEXTURECUBE:16,UNIFORMTYPE_FLOATARRAY:17,UNIFORMTYPE_TEXTURE2D_SHADOW:18,UNIFORMTYPE_TEXTURECUBE_SHADOW:19,UNIFORMTYPE_TEXTURE3D:20};
pc.extend(pc,e);pc.gfx={};pc.extend(pc.gfx,e)})();pc.extend(pc,function(){var e=function(a){this.name=a;this.value=null;this.versionObject=new pc.VersionedObject};e.prototype={setValue:function(a){this.value=a;this.versionObject.increment()},getValue:function(a){return this.value}};return{ScopeId:e}}());pc.extend(pc,function(){var e=function(a){this.name=a;this.variables={};this.namespaces={}};e.prototype={resolve:function(a){!1===this.variables.hasOwnProperty(a)&&(this.variables[a]=new pc.ScopeId(a));return this.variables[a]},getSubSpace:function(a){!1===this.namespaces.hasOwnProperty(a)&&(this.namespaces[a]=new pc.ScopeSpace(a),logDEBUG("Added ScopeSpace: "+a));return this.namespaces[a]}};return{ScopeSpace:e}}());pc.extend(pc,function(){var e=function(){this.revision=this.globalId=0};e.prototype={equals:function(a){return this.globalId===a.globalId&&this.revision===a.revision},notequals:function(a){return this.globalId!==a.globalId||this.revision!==a.revision},copy:function(a){this.globalId=a.globalId;this.revision=a.revision},reset:function(){this.revision=this.globalId=0}};return{Version:e}}());pc.extend(pc,function(){var e=0,a=function(){e++;this.version=new pc.Version;this.version.globalId=e};a.prototype={increment:function(){this.version.revision++}};return{VersionedObject:a}}());pc.extend(pc,function(){function e(f,e){this.index=0;switch(e.dataType){case pc.ELEMENTTYPE_INT8:this.array=new Int8Array(f,e.offset);break;case pc.ELEMENTTYPE_UINT8:this.array=new Uint8Array(f,e.offset);break;case pc.ELEMENTTYPE_INT16:this.array=new Int16Array(f,e.offset);break;case pc.ELEMENTTYPE_UINT16:this.array=new Uint16Array(f,e.offset);break;case pc.ELEMENTTYPE_INT32:this.array=new Int32Array(f,e.offset);break;case pc.ELEMENTTYPE_UINT32:this.array=new Uint32Array(f,e.offset);break;case pc.ELEMENTTYPE_FLOAT32:this.array=
new Float32Array(f,e.offset)}switch(e.numComponents){case 1:this.set=a;break;case 2:this.set=b;break;case 3:this.set=c;break;case 4:this.set=d}}function a(a){this.array[this.index]=a}function b(a,b){this.array[this.index]=a;this.array[this.index+1]=b}function c(a,b,c){this.array[this.index]=a;this.array[this.index+1]=b;this.array[this.index+2]=c}function d(a,b,c,d){this.array[this.index]=a;this.array[this.index+1]=b;this.array[this.index+2]=c;this.array[this.index+3]=d}function f(a){this.vertexBuffer=
a;this.buffer=this.vertexBuffer.lock();this.setters=[];this.element={};a=this.vertexBuffer.getFormat();for(var b=0;b<a.elements.length;b++){var c=a.elements[b];this.setters[b]=new e(this.buffer,c);this.element[c.name]=this.setters[b]}}f.prototype={next:function(){for(var a=0,b=this.setters,c=this.setters.length,d=this.vertexBuffer.getFormat();a<c;){var f=b[a++];f.index+=d.size/f.array.constructor.BYTES_PER_ELEMENT}},end:function(){this.vertexBuffer.unlock()}};return{VertexIterator:f}}());pc.extend(pc,function(){var e=[];e[pc.ELEMENTTYPE_INT8]=1;e[pc.ELEMENTTYPE_UINT8]=1;e[pc.ELEMENTTYPE_INT16]=2;e[pc.ELEMENTTYPE_UINT16]=2;e[pc.ELEMENTTYPE_INT32]=4;e[pc.ELEMENTTYPE_UINT32]=4;e[pc.ELEMENTTYPE_FLOAT32]=4;return{VertexFormat:function(a,b){var c,d,f;this.elements=[];this.hasColor=this.hasUv1=this.hasUv0=!1;c=this.size=0;for(d=b.length;c<d;c++){var g=b[c];f={name:g.semantic,offset:0,stride:0,stream:-1,scopeId:a.scope.resolve(g.semantic),dataType:g.type,numComponents:g.components,normalize:void 0===
g.normalize?!1:g.normalize,size:g.components*e[g.type]};this.elements.push(f);this.size+=f.size;g.semantic===pc.SEMANTIC_TEXCOORD0?this.hasUv0=!0:g.semantic===pc.SEMANTIC_TEXCOORD1?this.hasUv1=!0:g.semantic===pc.SEMANTIC_COLOR&&(this.hasColor=!0)}c=g=0;for(d=this.elements.length;c<d;c++)f=this.elements[c],f.offset=g,f.stride=this.size,g+=f.size}}}());pc.extend(pc,function(){var e=function(a,b,c,d,f){this.usage=d||pc.BUFFER_STATIC;this.format=b;this.numVertices=c;this.numBytes=b.size*c;a._vram.vb+=this.numBytes;this.device=a;this.bufferId=this.device.gl.createBuffer();f&&this.setData(f)||(this.storage=new ArrayBuffer(this.numBytes))};e.prototype={destroy:function(){this.bufferId&&(this.device.gl.deleteBuffer(this.bufferId),this.device._vram.vb-=this.storage.byteLength,this.bufferId=null)},getFormat:function(){return this.format},getUsage:function(){return this.usage},
getNumVertices:function(){return this.numVertices},lock:function(){return this.storage},unlock:function(){var a=this.device.gl,b;switch(this.usage){case pc.BUFFER_STATIC:b=a.STATIC_DRAW;break;case pc.BUFFER_DYNAMIC:b=a.DYNAMIC_DRAW;break;case pc.BUFFER_STREAM:b=a.STREAM_DRAW;break;case pc.BUFFER_GPUDYNAMIC:b=this.device.webgl2?a.DYNAMIC_COPY:a.STATIC_DRAW}a.bindBuffer(a.ARRAY_BUFFER,this.bufferId);a.bufferData(a.ARRAY_BUFFER,this.storage,b)},setData:function(a){if(a.byteLength!==this.numBytes)return console.error("VertexBuffer: wrong initial data size: expected "+
this.numBytes+", got "+a.byteLength),!1;this.storage=a;this.unlock();return!0}};return{VertexBuffer:e}}());pc.extend(pc,function(){var e=function(a,b,c,d){this.usage=d||pc.BUFFER_STATIC;this.format=b;this.numIndices=c;this.device=a;c=this.device.gl;this.bufferId=c.createBuffer();var f;b===pc.INDEXFORMAT_UINT8?(f=1,this.glFormat=c.UNSIGNED_BYTE):b===pc.INDEXFORMAT_UINT16?(f=2,this.glFormat=c.UNSIGNED_SHORT):b===pc.INDEXFORMAT_UINT32&&(f=4,this.glFormat=c.UNSIGNED_INT);this.bytesPerIndex=f;b=this.numIndices*f;this.storage=new ArrayBuffer(b);a._vram.ib+=b};e.prototype={destroy:function(){this.bufferId&&(this.device.gl.deleteBuffer(this.bufferId),
this.device._vram.ib-=this.storage.byteLength,this.bufferId=null)},getFormat:function(){return this.format},getNumIndices:function(){return this.numIndices},lock:function(){return this.storage},unlock:function(){var a=this.device.gl,b;switch(this.usage){case pc.BUFFER_STATIC:b=a.STATIC_DRAW;break;case pc.BUFFER_DYNAMIC:b=a.DYNAMIC_DRAW;break;case pc.BUFFER_STREAM:b=a.STREAM_DRAW;break;case pc.BUFFER_GPUDYNAMIC:b=this.device.webgl2?a.DYNAMIC_COPY:a.STATIC_DRAW}a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.bufferId);
a.bufferData(a.ELEMENT_ARRAY_BUFFER,this.storage,b)}};return{IndexBuffer:e}}());pc.extend(pc,function(){var e=function(a,b){b=b||pc.BUFFER_GPUDYNAMIC;this.device=a.device;var c=this.device.gl;this._inputBuffer=a;b===pc.BUFFER_GPUDYNAMIC&&a.usage!==b&&(c.bindBuffer(c.ARRAY_BUFFER,a.bufferId),c.bufferData(c.ARRAY_BUFFER,a.storage,c.DYNAMIC_COPY));this._outputBuffer=new pc.VertexBuffer(a.device,a.format,a.numVertices,b,a.storage)};e.createShader=function(a,b,c){return pc.shaderChunks.createShaderFromCode(a,b,null,c,!0)};e.prototype={destroy:function(){this._outputBuffer.destroy()},
process:function(a,b){void 0===b&&(b=!0);var c=this.device;c.setRenderTarget(null);c.updateBegin();c.setVertexBuffer(this._inputBuffer,0);c.setRaster(!1);c.setTransformFeedbackBuffer(this._outputBuffer);c.setShader(a);c.draw({type:pc.PRIMITIVE_POINTS,base:0,count:this._inputBuffer.numVertices,indexed:!1});c.setTransformFeedbackBuffer(null);c.setRaster(!0);c.updateEnd();b&&(c=this._inputBuffer.bufferId,this._inputBuffer.bufferId=this._outputBuffer.bufferId,this._outputBuffer.bufferId=c)}};Object.defineProperty(e.prototype,
"inputBuffer",{get:function(){return this._inputBuffer}});Object.defineProperty(e.prototype,"outputBuffer",{get:function(){return this._outputBuffer}});return{TransformFeedback:e}}());pc.extend(pc,function(){var e=function(a,b){this.device=a;this.name=null;this._height=this._width=4;this._depth=1;this._pot=!0;this._format=pc.PIXELFORMAT_R8_G8_B8_A8;this.fixCubemapSeams=this._volume=this._cubemap=this.rgbm=!1;this._mipmaps=!0;this._minFilter=pc.FILTER_LINEAR_MIPMAP_LINEAR;this._magFilter=pc.FILTER_LINEAR;this._anisotropy=1;this._addressW=this._addressV=this._addressU=pc.ADDRESS_REPEAT;this._compareOnRead=!1;this._compareFunc=pc.FUNC_LESS;void 0!==b&&(this._width=void 0!==b.width?
b.width:this._width,this._height=void 0!==b.height?b.height:this._height,this._pot=pc.math.powerOfTwo(this._width)&&pc.math.powerOfTwo(this._height),this._format=void 0!==b.format?b.format:this._format,this.rgbm=void 0!==b.rgbm?b.rgbm:this.rgbm,this._mipmaps=void 0!==b.mipmaps?b.mipmaps:void 0!==b.autoMipmap?b.autoMipmap:this._mipmaps,this._cubemap=void 0!==b.cubemap?b.cubemap:this._cubemap,this.fixCubemapSeams=void 0!==b.fixCubemapSeams?b.fixCubemapSeams:this.fixCubemapSeams,this._minFilter=void 0!==
b.minFilter?b.minFilter:this._minFilter,this._magFilter=void 0!==b.magFilter?b.magFilter:this._magFilter,this._anisotropy=void 0!==b.anisotropy?b.anisotropy:this._anisotropy,this._addressU=void 0!==b.addressU?b.addressU:this._addressU,this._addressV=void 0!==b.addressV?b.addressV:this._addressV,this._compareOnRead=void 0!==b.compareOnRead?b.compareOnRead:this._compareOnRead,this._compareFunc=void 0!==b._compareFunc?b._compareFunc:this._compareFunc,a.webgl2&&(this._depth=void 0!==b.depth?b.depth:this._depth,
this._volume=void 0!==b.volume?b.volume:this._volume,this._addressW=void 0!==b.addressW?b.addressW:this._addressW));this._compressed=this._format===pc.PIXELFORMAT_DXT1||this._format===pc.PIXELFORMAT_DXT3||this._format===pc.PIXELFORMAT_DXT5||this._format>=pc.PIXELFORMAT_ETC1;this._invalid=!1;this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null];this._levelsUpdated=this._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0];this._lockedLevel=-1;this._needsUpload=!0;this._needsMipmapsUpload=this._mipmaps;
this._mipmapsUploaded=!1;this._addressVDirty=this._addressUDirty=this._magFilterDirty=this._minFilterDirty=!0;this._addressWDirty=this._volume;this._compareModeDirty=this._anisotropyDirty=!0;this._gpuSize=0};Object.defineProperty(e.prototype,"minFilter",{get:function(){return this._minFilter},set:function(a){this._minFilter!==a&&(this._minFilter=a,this._minFilterDirty=!0)}});Object.defineProperty(e.prototype,"magFilter",{get:function(){return this._magFilter},set:function(a){this._magFilter!==a&&
(this._magFilter=a,this._magFilterDirty=!0)}});Object.defineProperty(e.prototype,"addressU",{get:function(){return this._addressU},set:function(a){this._addressU!==a&&(this._addressU=a,this._addressUDirty=!0)}});Object.defineProperty(e.prototype,"addressV",{get:function(){return this._addressV},set:function(a){this._addressV!==a&&(this._addressV=a,this._addressVDirty=!0)}});Object.defineProperty(e.prototype,"addressW",{get:function(){return this._addressW},set:function(a){this.device.webgl2&&(this._volume?
a!==this._addressW&&(this._addressW=a,this._addressWDirty=!0):logWARNING("Can't set W addressing mode for a non-3D texture."))}});Object.defineProperty(e.prototype,"compareOnRead",{get:function(){return this._compareOnRead},set:function(a){this._compareOnRead!==a&&(this._compareOnRead=a,this._compareModeDirty=!0)}});Object.defineProperty(e.prototype,"compareFunc",{get:function(){return this._compareFunc},set:function(a){this._compareFunc!==a&&(this._compareFunc=a,this._compareModeDirty=!0)}});Object.defineProperty(e.prototype,
"autoMipmap",{get:function(){return this._mipmaps},set:function(a){this._mipmaps=a}});Object.defineProperty(e.prototype,"mipmaps",{get:function(){return this._mipmaps},set:function(a){this._mipmaps!==a&&(this._mipmaps=a,this._minFilterDirty=!0,a&&(this._needsMipmapsUpload=!0))}});Object.defineProperty(e.prototype,"anisotropy",{get:function(){return this._anisotropy},set:function(a){this._anisotropy!==a&&(this._anisotropy=a,this._anisotropyDirty=!0)}});Object.defineProperty(e.prototype,"width",{get:function(){return this._width}});
Object.defineProperty(e.prototype,"height",{get:function(){return this._height}});Object.defineProperty(e.prototype,"depth",{get:function(){return this._depth}});Object.defineProperty(e.prototype,"format",{get:function(){return this._format}});Object.defineProperty(e.prototype,"cubemap",{get:function(){return this._cubemap}});Object.defineProperty(e.prototype,"volume",{get:function(){return this._volume}});pc.extend(e.prototype,{bind:function(){},destroy:function(){this._glTextureId&&(this.device.gl.deleteTexture(this._glTextureId),
this.device._vram.tex-=this._gpuSize,this._glTextureId=null)},lock:function(a){a=a||{level:0,face:0,mode:pc.TEXTURELOCK_WRITE};void 0===a.level&&(a.level=0);void 0===a.face&&(a.face=0);void 0===a.mode&&(a.mode=pc.TEXTURELOCK_WRITE);this._lockedLevel=a.level;if(null===this._levels[a.level])switch(this._format){case pc.PIXELFORMAT_A8:case pc.PIXELFORMAT_L8:this._levels[a.level]=new Uint8Array(this._width*this._height*this._depth);break;case pc.PIXELFORMAT_L8_A8:this._levels[a.level]=new Uint8Array(this._width*
this._height*this._depth*2);break;case pc.PIXELFORMAT_R5_G6_B5:case pc.PIXELFORMAT_R5_G5_B5_A1:case pc.PIXELFORMAT_R4_G4_B4_A4:this._levels[a.level]=new Uint16Array(this._width*this._height*this._depth);break;case pc.PIXELFORMAT_R8_G8_B8:this._levels[a.level]=new Uint8Array(this._width*this._height*this._depth*3);break;case pc.PIXELFORMAT_R8_G8_B8_A8:this._levels[a.level]=new Uint8Array(this._width*this._height*this._depth*4);break;case pc.PIXELFORMAT_DXT1:this._levels[a.level]=new Uint8Array(Math.floor((this._width+
3)/4)*Math.floor((this._height+3)/4)*8*this._depth);break;case pc.PIXELFORMAT_DXT3:case pc.PIXELFORMAT_DXT5:this._levels[a.level]=new Uint8Array(Math.floor((this._width+3)/4)*Math.floor((this._height+3)/4)*16*this._depth);break;case pc.PIXELFORMAT_RGB16F:this._levels[a.level]=new Uint16Array(this._width*this._height*this._depth*3);break;case pc.PIXELFORMAT_RGB32F:this._levels[a.level]=new Float32Array(this._width*this._height*this._depth*3);break;case pc.PIXELFORMAT_RGBA16F:this._levels[a.level]=
new Uint16Array(this._width*this._height*this._depth*4);break;case pc.PIXELFORMAT_RGBA32F:this._levels[a.level]=new Float32Array(this._width*this._height*this._depth*4)}return this._levels[a.level]},recover:function(){},setSource:function(a){var b,c=!1,d,f;if(this._cubemap){d=a[0]&&a[0].width||0;f=a[0]&&a[0].height||0;if(a[0])for(b=0;6>b;b++)a[b]&&a[b].width===d&&a[b].height===f&&(a[b]instanceof HTMLImageElement||a[b]instanceof HTMLCanvasElement||a[b]instanceof HTMLVideoElement)||(c=!0);else c=!0;
for(b=0;6>b;b++)if(c||this._levels[0][b]!==a[b])this._levelsUpdated[0][b]=!0}else{a instanceof HTMLImageElement||a instanceof HTMLCanvasElement||a instanceof HTMLVideoElement||(c=!0);if(c||a!==this._levels[0])this._levelsUpdated[0]=!0;d=a.width;f=a.height}if(c)if(this._height=this._width=4,this._pot=!0,this._cubemap)for(b=0;6>b;b++)this._levels[0][b]=null,this._levelsUpdated[0][b]=!0;else this._levels[0]=null,this._levelsUpdated[0]=!0;else this._width=d,this._height=f,this._pot=pc.math.powerOfTwo(this._width)&&
pc.math.powerOfTwo(this._height),this._levels[0]=a;this._invalid===c&&c||(this._invalid=c,this.upload())},getSource:function(){return this._levels[0]},unlock:function(){logASSERT(-1!==this._lockedLevel,"Attempting to unlock a texture that is not locked");this.upload();this._lockedLevel=-1},upload:function(){this._needsUpload=!0;this._needsMipmapsUpload=this._mipmaps},getDds:function(){this.format!==pc.PIXELFORMAT_R8_G8_B8_A8&&console.error("This format is not implemented yet");for(var a=128,b=0,c,
d;this._levels[b];){if(this.cubemap)for(d=0;6>d;d++){if(!this._levels[b][d]){console.error("No level data for mip "+b+", face "+d);return}c=this._levels[b][d].length;if(!c){console.error("No byte array for mip "+b+", face "+d);return}a+=c}else{c=this._levels[b].length;if(!c){console.error("No byte array for mip "+b);return}a+=c}a+=this._levels[b].length;b++}a=new ArrayBuffer(a);d=new Uint32Array(a,0,32);b=528391;1<this._levels.length&&(b|=131072);c=4096;1<this._levels.length&&(c|=4194304);if(1<this._levels.length||
this.cubemap)c|=8;var f=this.cubemap?65024:0;d[0]=542327876;d[1]=124;d[2]=b;d[3]=this.height;d[4]=this.width;d[5]=this.width*this.height*4;d[6]=0;d[7]=this._levels.length;for(b=0;11>b;b++)d[8+b]=0;d[19]=32;d[20]=65;d[21]=0;d[22]=32;d[23]=16711680;d[24]=65280;d[25]=255;d[26]=4278190080;d[27]=c;d[28]=f;d[29]=0;d[30]=0;d[31]=0;var f=128,g,e;if(this.cubemap)for(d=0;6>d;d++)for(b=0;b<this._levels.length;b++){g=this._levels[b][d];e=new Uint8Array(a,f,g.length);for(c=0;c<g.length;c++)e[c]=g[c];f+=g.length}else for(b=
0;b<this._levels.length;b++){g=this._levels[b];e=new Uint8Array(a,f,g.length);for(c=0;c<g.length;c++)e[c]=g[c];f+=g.length}return a}});return{Texture:e}}());pc.extend(pc,function(){var e={depth:!0,face:0},a=function(a,c,d){a instanceof pc.GraphicsDevice?(this._colorBuffer=c,a=d):this._colorBuffer=a.colorBuffer;this._glDepthBuffer=this._glFrameBuffer=null;a=void 0!==a?a:e;this._depthBuffer=a.depthBuffer;this._face=void 0!==a.face?a.face:0;this._depthBuffer?(c=this._depthBuffer._format,c===pc.PIXELFORMAT_DEPTH?(this._depth=!0,this._stencil=!1):this._stencil=c===pc.PIXELFORMAT_DEPTHSTENCIL?this._depth=!0:this._depth=!1):(this._depth=void 0!==a.depth?a.depth:
!0,this._stencil=void 0!==a.stencil?a.stencil:!1);this._samples=void 0!==a.samples?a.samples:1;this.autoResolve=void 0!==a.autoResolve?a.autoResolve:!0;this._glMsaaDepthBuffer=this._glMsaaColorBuffer=this._glResolveFrameBuffer=null};a.prototype={destroy:function(){if(this._device){var a=this._device.gl;this._glFrameBuffer&&(a.deleteFramebuffer(this._glFrameBuffer),this._glFrameBuffer=null);this._glDepthBuffer&&(a.deleteRenderbuffer(this._glDepthBuffer),this._glDepthBuffer=null);this._glResolveFrameBuffer&&
(a.deleteFramebuffer(this._glResolveFrameBuffer),this._glResolveFrameBuffer=null);this._glMsaaColorBuffer&&(a.deleteRenderbuffer(this._glMsaaColorBuffer),this._glMsaaColorBuffer=null);this._glMsaaDepthBuffer&&(a.deleteRenderbuffer(this._glMsaaDepthBuffer),this._glMsaaDepthBuffer=null)}},resolve:function(a,c){if(this._device&&this._device.webgl2){var b=this._device.gl;void 0===a&&(a=!0);void 0===c&&this._depthBuffer&&(c=!0);b.bindFramebuffer(b.READ_FRAMEBUFFER,this._glFrameBuffer);b.bindFramebuffer(b.DRAW_FRAMEBUFFER,
this._glResolveFrameBuffer);b.blitFramebuffer(0,0,this.width,this.height,0,0,this.width,this.height,(a?b.COLOR_BUFFER_BIT:0)|(c?b.DEPTH_BUFFER_BIT:0),b.NEAREST)}}};Object.defineProperty(a.prototype,"colorBuffer",{get:function(){return this._colorBuffer}});Object.defineProperty(a.prototype,"depthBuffer",{get:function(){return this._depthBuffer}});Object.defineProperty(a.prototype,"face",{get:function(){return this._face}});Object.defineProperty(a.prototype,"width",{get:function(){return this._colorBuffer?
this._colorBuffer.width:this._depthBuffer.width}});Object.defineProperty(a.prototype,"height",{get:function(){return this._colorBuffer?this._colorBuffer.height:this._depthBuffer.height}});return{RenderTarget:a}}());pc.extend(pc,function(){return{ShaderInput:function(e,a,b,c){this.locationId=c;this.scopeId=e.scope.resolve(a);this.version=new pc.Version;b===pc.UNIFORMTYPE_FLOAT&&"[0]"===a.substr(a.length-3)&&(b=pc.UNIFORMTYPE_FLOATARRAY);this.dataType=b;this.value=[null,null,null,null];this.array=[]}}}());pc.extend(pc,function(){function e(a){a=a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+":\t"+a[b];return a.join("\n")}function a(a,b,f){b=a.createShader(b);a.shaderSource(b,f);a.compileShader(b);return b}var b=function(b,d){this._refCount=0;this.device=b;this.definition=d;this.ready=!1;var c=this.device.gl;this.vshader=a(c,c.VERTEX_SHADER,d.vshader);this.fshader=a(c,c.FRAGMENT_SHADER,d.fshader);var e=this.vshader,k=this.fshader,l=c.createProgram();c.attachShader(l,e);c.attachShader(l,k);this.program=
l;b._shaderStats.vsCompiled++;b._shaderStats.fsCompiled++;b._shaderStats.linked++;d.tag===pc.SHADERTAG_MATERIAL&&b._shaderStats.materialShaders++};b.prototype={link:function(){var a=this.device.gl,b=!0;if(this.device.webgl2&&this.definition.useTransformFeedback){var f=this.definition.attributes,g=[],k;for(k in f)f.hasOwnProperty(k)&&g.push("out_"+k);a.transformFeedbackVaryings(this.program,g,a.INTERLEAVED_ATTRIBS)}a.linkProgram(this.program);a.getShaderParameter(this.vshader,a.COMPILE_STATUS)||(logERROR("Failed to compile vertex shader:\n\n"+
e(this.definition.vshader)+"\n\n"+a.getShaderInfoLog(this.vshader)),b=!1);a.getShaderParameter(this.fshader,a.COMPILE_STATUS)||(logERROR("Failed to compile fragment shader:\n\n"+e(this.definition.fshader)+"\n\n"+a.getShaderInfoLog(this.fshader)),b=!1);a.getProgramParameter(this.program,a.LINK_STATUS)||(logERROR("Failed to link shader program. Error: "+a.getProgramInfoLog(this.program)),b=!1);a.deleteShader(this.vshader);a.deleteShader(this.fshader);this.attributes=[];this.uniforms=[];this.samplers=
[];var f=0,l,g={};g[a.BOOL]=pc.UNIFORMTYPE_BOOL;g[a.INT]=pc.UNIFORMTYPE_INT;g[a.FLOAT]=pc.UNIFORMTYPE_FLOAT;g[a.FLOAT_VEC2]=pc.UNIFORMTYPE_VEC2;g[a.FLOAT_VEC3]=pc.UNIFORMTYPE_VEC3;g[a.FLOAT_VEC4]=pc.UNIFORMTYPE_VEC4;g[a.INT_VEC2]=pc.UNIFORMTYPE_IVEC2;g[a.INT_VEC3]=pc.UNIFORMTYPE_IVEC3;g[a.INT_VEC4]=pc.UNIFORMTYPE_IVEC4;g[a.BOOL_VEC2]=pc.UNIFORMTYPE_BVEC2;g[a.BOOL_VEC3]=pc.UNIFORMTYPE_BVEC3;g[a.BOOL_VEC4]=pc.UNIFORMTYPE_BVEC4;g[a.FLOAT_MAT2]=pc.UNIFORMTYPE_MAT2;g[a.FLOAT_MAT3]=pc.UNIFORMTYPE_MAT3;
g[a.FLOAT_MAT4]=pc.UNIFORMTYPE_MAT4;g[a.SAMPLER_2D]=pc.UNIFORMTYPE_TEXTURE2D;g[a.SAMPLER_CUBE]=pc.UNIFORMTYPE_TEXTURECUBE;this.device.webgl2&&(g[a.SAMPLER_2D_SHADOW]=pc.UNIFORMTYPE_TEXTURE2D_SHADOW,g[a.SAMPLER_CUBE_SHADOW]=pc.UNIFORMTYPE_TEXTURECUBE_SHADOW,g[a.SAMPLER_3D]=pc.UNIFORMTYPE_TEXTURE3D);for(var p=a.getProgramParameter(this.program,a.ACTIVE_ATTRIBUTES);f<p;)k=a.getActiveAttrib(this.program,f++),l=a.getAttribLocation(this.program,k.name),void 0===this.definition.attributes[k.name]&&console.error('Vertex shader attribute "'+
k.name+'" is not mapped to a semantic in shader definition.'),k=new pc.ShaderInput(this.device,this.definition.attributes[k.name],g[k.type],l),this.attributes.push(k);f=0;for(p=a.getProgramParameter(this.program,a.ACTIVE_UNIFORMS);f<p;)k=a.getActiveUniform(this.program,f++),l=a.getUniformLocation(this.program,k.name),k.type===a.SAMPLER_2D||k.type===a.SAMPLER_CUBE||this.device.webgl2&&(k.type===a.SAMPLER_2D_SHADOW||k.type===a.SAMPLER_CUBE_SHADOW||k.type===a.SAMPLER_3D)?this.samplers.push(new pc.ShaderInput(this.device,
k.name,g[k.type],l)):this.uniforms.push(new pc.ShaderInput(this.device,k.name,g[k.type],l));this.ready=!0;return b},destroy:function(){this.program&&(this.device.gl.deleteProgram(this.program),this.program=null,this.device.removeShaderFromCache(this))}};return{Shader:b}}());pc.extend(pc,function(){var e=function(a){this._device=a;this._cache={};this._generators={};this._isClearingCache=!1};e.prototype.register=function(a,b){this.isRegistered(a)||(this._generators[a]=b)};e.prototype.unregister=function(a){this.isRegistered(a)&&delete this._generators[a]};e.prototype.isRegistered=function(a){return void 0!==this._generators[a]};e.prototype.getProgram=function(a,b){var c=this._generators[a];if(void 0===c)return logERROR("No program library functions registered for: "+a),
null;var d=this._device,f=c.generateKey(d,b),e=this._cache[f];e||(c=c.createShaderDefinition(d,b),e=this._cache[f]=new pc.Shader(d,c));return e};e.prototype.clearCache=function(){var a=this._cache;this._isClearingCache=!0;for(var b in a)a.hasOwnProperty(b)&&a[b].destroy();this._cache={};this._isClearingCache=!1};e.prototype.removeFromCache=function(a){if(!this._isClearingCache){var b=this._cache,c;for(c in b)if(b.hasOwnProperty(c)&&b[c]===a){delete b[c];break}}};return{ProgramLibrary:e}}());pc.extend(pc,function(){function e(a){this.name="UnsupportedBrowserError";this.message=a||""}function a(a){this.name="ContextCreationError";this.message=a||""}function b(){var a=window.navigator.userAgent.indexOf("MSIE "),b=navigator.userAgent.match(/Trident.*rv\:11\./);return 0<a||!!b}function c(a,b,c){b=a.createTexture();a.bindTexture(a.TEXTURE_2D,b);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,
a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,2,2,0,a.RGBA,c,null);c=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,c);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,b,0);a.bindTexture(a.TEXTURE_2D,null);if(a.checkFramebufferStatus(a.FRAMEBUFFER)!=a.FRAMEBUFFER_COMPLETE)return a.deleteTexture(b),!1;a.deleteTexture(b);a.bindFramebuffer(a.FRAMEBUFFER,null);return!0}var d,f,g,k,l;e.prototype=
Error.prototype;a.prototype=Error.prototype;var p=function(){logWARNING("Context lost.")},h=function(){logINFO("Context restored.")},m=function(a,b){var c=a.width,d=a.height;if(c>b||d>b){var f=b/Math.max(c,d),e=Math.floor(c*f),f=Math.floor(d*f);console.warn("Image dimensions larger than max supported texture size of "+b+". Resizing from "+c+", "+d+" to "+e+", "+f+".");var g=document.createElement("canvas");g.width=e;g.height=f;g.getContext("2d").drawImage(a,0,0,c,d,0,0,e,f);return g}return a},q=null,
n=function(a,e){this.gl=void 0;this.canvas=a;this.indexBuffer=this.shader=null;this.vertexBuffers=[];this.vbOffsets=[];this.precision="highp";this._enableAutoInstancing=!1;this.autoInstancingMaxObjects=16384;this.attributesInvalidated=!0;this.boundBuffer=null;this.instancedAttribs={};this.enabledAttributes={};this.textureUnits=[];this.commitFunction={};this._maxPixelRatio=1;this._height=this._width=0;this.updateClientRect();if(!window.WebGLRenderingContext)throw new pc.UnsupportedBrowserError;if(a)var r=
e&&void 0!==e.preferWebGl2?e.preferWebGl2:!0;var m=r?["webgl2","experimental-webgl2","webgl","experimental-webgl"]:["webgl","experimental-webgl"],u=null;e=e||{};e.stencil=!0;for(var n=0;n<m.length;n++){try{u=a.getContext(m[n],e)}catch(y){}if(u){this.webgl2=r&&2>n;break}}this.gl=u;if(!this.gl)throw new pc.ContextCreationError;var q=this.gl;(function(){var e;a.addEventListener("webglcontextlost",p,!1);a.addEventListener("webglcontextrestored",h,!1);this.canvas=a;this.indexBuffer=this.shader=null;this.vertexBuffers=
[];this.vbOffsets=[];this.precision="highp";this.maxTextureSize=q.getParameter(q.MAX_TEXTURE_SIZE);this.maxCubeMapSize=q.getParameter(q.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxRenderBufferSize=q.getParameter(q.MAX_RENDERBUFFER_SIZE);if(q.getShaderPrecisionFormat){e=q.getShaderPrecisionFormat(q.VERTEX_SHADER,q.HIGH_FLOAT);var r=q.getShaderPrecisionFormat(q.VERTEX_SHADER,q.MEDIUM_FLOAT);q.getShaderPrecisionFormat(q.VERTEX_SHADER,q.LOW_FLOAT);var m=q.getShaderPrecisionFormat(q.FRAGMENT_SHADER,q.HIGH_FLOAT),
u=q.getShaderPrecisionFormat(q.FRAGMENT_SHADER,q.MEDIUM_FLOAT);q.getShaderPrecisionFormat(q.FRAGMENT_SHADER,q.LOW_FLOAT);q.getShaderPrecisionFormat(q.VERTEX_SHADER,q.HIGH_INT);q.getShaderPrecisionFormat(q.VERTEX_SHADER,q.MEDIUM_INT);q.getShaderPrecisionFormat(q.VERTEX_SHADER,q.LOW_INT);q.getShaderPrecisionFormat(q.FRAGMENT_SHADER,q.HIGH_INT);q.getShaderPrecisionFormat(q.FRAGMENT_SHADER,q.MEDIUM_INT);q.getShaderPrecisionFormat(q.FRAGMENT_SHADER,q.LOW_INT);r=0<r.precision&&0<u.precision;0<e.precision&&
0<m.precision||(r?(this.precision="mediump",console.warn("WARNING: highp not supported, using mediump")):(this.precision="lowp",console.warn("WARNING: highp and mediump not supported, using lowp")))}this.maxPrecision=this.precision;this.defaultClearOptions={color:[0,0,0,1],depth:1,stencil:0,flags:pc.CLEARFLAG_COLOR|pc.CLEARFLAG_DEPTH};this.glAddress=[q.REPEAT,q.CLAMP_TO_EDGE,q.MIRRORED_REPEAT];this.glBlendEquation=[q.FUNC_ADD,q.FUNC_SUBTRACT,q.FUNC_REVERSE_SUBTRACT];this.glBlendFunction=[q.ZERO,q.ONE,
q.SRC_COLOR,q.ONE_MINUS_SRC_COLOR,q.DST_COLOR,q.ONE_MINUS_DST_COLOR,q.SRC_ALPHA,q.SRC_ALPHA_SATURATE,q.ONE_MINUS_SRC_ALPHA,q.DST_ALPHA,q.ONE_MINUS_DST_ALPHA];this.glComparison=[q.NEVER,q.LESS,q.EQUAL,q.LEQUAL,q.GREATER,q.NOTEQUAL,q.GEQUAL,q.ALWAYS];this.glStencilOp=[q.KEEP,q.ZERO,q.REPLACE,q.INCR,q.INCR_WRAP,q.DECR,q.DECR_WRAP,q.INVERT];this.glClearFlag=[0,q.COLOR_BUFFER_BIT,q.DEPTH_BUFFER_BIT,q.COLOR_BUFFER_BIT|q.DEPTH_BUFFER_BIT,q.STENCIL_BUFFER_BIT,q.STENCIL_BUFFER_BIT|q.COLOR_BUFFER_BIT,q.STENCIL_BUFFER_BIT|
q.DEPTH_BUFFER_BIT,q.STENCIL_BUFFER_BIT|q.COLOR_BUFFER_BIT|q.DEPTH_BUFFER_BIT];this.glCull=[0,q.BACK,q.FRONT,q.FRONT_AND_BACK];this.glFilter=[q.NEAREST,q.LINEAR,q.NEAREST_MIPMAP_NEAREST,q.NEAREST_MIPMAP_LINEAR,q.LINEAR_MIPMAP_NEAREST,q.LINEAR_MIPMAP_LINEAR];this.glPrimitive=[q.POINTS,q.LINES,q.LINE_LOOP,q.LINE_STRIP,q.TRIANGLES,q.TRIANGLE_STRIP,q.TRIANGLE_FAN];this.glType=[q.BYTE,q.UNSIGNED_BYTE,q.SHORT,q.UNSIGNED_SHORT,q.INT,q.UNSIGNED_INT,q.FLOAT];this.unmaskedVendor=this.unmaskedRenderer=null;
if(this.extRendererInfo=q.getExtension("WEBGL_debug_renderer_info"))this.unmaskedRenderer=q.getParameter(this.extRendererInfo.UNMASKED_RENDERER_WEBGL),this.unmaskedVendor=q.getParameter(this.extRendererInfo.UNMASKED_VENDOR_WEBGL);this.webgl2?(this.extStandardDerivatives=this.extTextureLod=this.extUintElement=this.extTextureHalfFloatLinear=this.extTextureHalfFloat=this.extTextureFloat=!0,q.hint(q.FRAGMENT_SHADER_DERIVATIVE_HINT,q.NICEST),this.extDrawBuffers=this.extInstancing=!0,this.maxDrawBuffers=
q.getParameter(q.MAX_DRAW_BUFFERS),this.maxColorAttachments=q.getParameter(q.MAX_COLOR_ATTACHMENTS),this.feedback=q.createTransformFeedback(),this.maxVolumeSize=q.getParameter(q.MAX_3D_TEXTURE_SIZE),this.extBlendMinmax=!0,this.glBlendEquation.push(q.MIN),this.glBlendEquation.push(q.MAX)):(this.extTextureFloat=q.getExtension("OES_texture_float"),this.extTextureHalfFloat=q.getExtension("OES_texture_half_float"),this.extTextureHalfFloatLinear=q.getExtension("OES_texture_half_float_linear"),this.extUintElement=
q.getExtension("OES_element_index_uint"),this.extTextureLod=q.getExtension("EXT_shader_texture_lod"),(this.extStandardDerivatives=q.getExtension("OES_standard_derivatives"))&&q.hint(this.extStandardDerivatives.FRAGMENT_SHADER_DERIVATIVE_HINT_OES,q.NICEST),this.extInstancing=q.getExtension("ANGLE_instanced_arrays"),this.maxDrawBuffers=(this.extDrawBuffers=q.getExtension("EXT_draw_buffers"))?q.getParameter(this.extDrawBuffers.MAX_DRAW_BUFFERS_EXT):1,this.maxColorAttachments=this.extDrawBuffers?q.getParameter(this.extDrawBuffers.MAX_COLOR_ATTACHMENTS_EXT):
1,this.maxVolumeSize=1,(this.extBlendMinmax=q.getExtension("EXT_blend_minmax"))?(this.glBlendEquation.push(this.extBlendMinmax.MIN_EXT),this.glBlendEquation.push(this.extBlendMinmax.MAX_EXT)):(this.glBlendEquation.push(q.FUNC_ADD),this.glBlendEquation.push(q.FUNC_ADD)));this.extTextureFloatLinear=q.getExtension("OES_texture_float_linear");this.maxVertexTextures=q.getParameter(q.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.supportsBoneTextures=this.extTextureFloat&&0<this.maxVertexTextures;this.fragmentUniformsCount=
q.getParameter(q.MAX_FRAGMENT_UNIFORM_VECTORS);this.samplerCount=q.getParameter(q.MAX_TEXTURE_IMAGE_UNITS);this.useTexCubeLod=this.extTextureLod&&16>this.samplerCount;this.extTextureFilterAnisotropic=q.getExtension("EXT_texture_filter_anisotropic");this.extTextureFilterAnisotropic||(this.extTextureFilterAnisotropic=q.getExtension("WEBKIT_EXT_texture_filter_anisotropic"));this.extCompressedTextureS3TC=q.getExtension("WEBGL_compressed_texture_s3tc");this.extCompressedTextureS3TC||(this.extCompressedTextureS3TC=
q.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"));this.extCompressedTextureS3TC&&b()&&(this.extCompressedTextureS3TC=!1);if(this.extCompressedTextureS3TC)for(m=q.getParameter(q.COMPRESSED_TEXTURE_FORMATS),e=0;e<m.length;e++);this.extCompressedTextureETC1=q.getExtension("WEBGL_compressed_texture_etc1");this.extCompressedTexturePVRTC=q.getExtension("WEBGL_compressed_texture_pvrtc")||q.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");e=q.getContextAttributes();this.supportsMsaa=e.antialias;
this.supportsStencil=e.stencil;this.renderTarget=null;this.scope=new pc.ScopeSpace("Device");this.commitFunction={};this.commitFunction[pc.UNIFORMTYPE_BOOL]=function(a,b){a.value!==b&&(q.uniform1i(a.locationId,b),a.value=b)};this.commitFunction[pc.UNIFORMTYPE_INT]=this.commitFunction[pc.UNIFORMTYPE_BOOL];this.commitFunction[pc.UNIFORMTYPE_FLOAT]=function(a,b){a.value!==b&&(q.uniform1f(a.locationId,b),a.value=b)};this.commitFunction[pc.UNIFORMTYPE_VEC2]=function(a,b){d=a.value;f=b[0];g=b[1];if(d[0]!==
f||d[1]!==g)q.uniform2fv(a.locationId,b),d[0]=f,d[1]=g};this.commitFunction[pc.UNIFORMTYPE_VEC3]=function(a,b){d=a.value;f=b[0];g=b[1];k=b[2];if(d[0]!==f||d[1]!==g||d[2]!==k)q.uniform3fv(a.locationId,b),d[0]=f,d[1]=g,d[2]=k};this.commitFunction[pc.UNIFORMTYPE_VEC4]=function(a,b){d=a.value;f=b[0];g=b[1];k=b[2];l=b[3];if(d[0]!==f||d[1]!==g||d[2]!==k||d[3]!==l)q.uniform4fv(a.locationId,b),d[0]=f,d[1]=g,d[2]=k,d[3]=l};this.commitFunction[pc.UNIFORMTYPE_IVEC2]=function(a,b){d=a.value;f=b[0];g=b[1];if(d[0]!==
f||d[1]!==g)q.uniform2iv(a.locationId,b),d[0]=f,d[1]=g};this.commitFunction[pc.UNIFORMTYPE_BVEC2]=this.commitFunction[pc.UNIFORMTYPE_IVEC2];this.commitFunction[pc.UNIFORMTYPE_IVEC3]=function(a,b){d=a.value;f=b[0];g=b[1];k=b[2];if(d[0]!==f||d[1]!==g||d[2]!==k)q.uniform3iv(a.locationId,b),d[0]=f,d[1]=g,d[2]=k};this.commitFunction[pc.UNIFORMTYPE_BVEC3]=this.commitFunction[pc.UNIFORMTYPE_IVEC3];this.commitFunction[pc.UNIFORMTYPE_IVEC4]=function(a,b){d=a.value;f=b[0];g=b[1];k=b[2];l=b[3];if(d[0]!==f||
d[1]!==g||d[2]!==k||d[3]!==l)q.uniform4iv(a.locationId,b),d[0]=f,d[1]=g,d[2]=k,d[3]=l};this.commitFunction[pc.UNIFORMTYPE_BVEC4]=this.commitFunction[pc.UNIFORMTYPE_IVEC4];this.commitFunction[pc.UNIFORMTYPE_MAT2]=function(a,b){q.uniformMatrix2fv(a.locationId,!1,b)};this.commitFunction[pc.UNIFORMTYPE_MAT3]=function(a,b){q.uniformMatrix3fv(a.locationId,!1,b)};this.commitFunction[pc.UNIFORMTYPE_MAT4]=function(a,b){q.uniformMatrix4fv(a.locationId,!1,b)};this.commitFunction[pc.UNIFORMTYPE_FLOATARRAY]=function(a,
b){q.uniform1fv(a.locationId,b)};this.setBlending(!1);this.setBlendFunction(pc.BLENDMODE_ONE,pc.BLENDMODE_ZERO);this.setBlendEquation(pc.BLENDEQUATION_ADD);this.setColorWrite(!0,!0,!0,!0);this.cullMode=pc.CULLFACE_NONE;this.setCullMode(pc.CULLFACE_BACK);this.setDepthTest(!0);this.setDepthFunc(pc.FUNC_LESSEQUAL);this.setDepthWrite(!0);this.setStencilTest(!1);this.setStencilFunc(pc.FUNC_ALWAYS,0,255);this.setStencilOperation(pc.STENCILOP_KEEP,pc.STENCILOP_KEEP,pc.STENCILOP_KEEP,255);this.setAlphaToCoverage(!1);
this.setTransformFeedbackBuffer(null);this.setRaster(!0);this.setDepthBias(!1);this.setClearDepth(1);this.setClearColor(0,0,0,0);this.setClearStencil(0);q.enable(q.SCISSOR_TEST);this.programLib=new pc.ProgramLibrary(this);for(var n in pc.programlib)this.programLib.register(n,pc.programlib[n]);n=q.getParameter(q.MAX_VERTEX_UNIFORM_VECTORS);this.boneLimit=Math.floor((n-16-8-1-16)/4);this.boneLimit=Math.min(this.boneLimit,128);"Mali-450 MP"===this.unmaskedRenderer?this.boneLimit=34:"Apple A8 GPU"===
this.unmaskedRenderer&&(this.forceCpuParticles=!0);pc.events.attach(this);this.sx=this.sy=this.sw=this.sh=this.vx=this.vy=this.vw=this.vh=0;this.boundBuffer=null;this.instancedAttribs={};this.activeFramebuffer=null;this.activeTexture=0;this.textureUnits=[];this.attributesInvalidated=!0;this.enabledAttributes={};this._shaderSwitchesPerFrame=this._drawCallsPerFrame=0;this._primsPerFrame=[];for(e=pc.PRIMITIVE_POINTS;e<=pc.PRIMITIVE_TRIFAN;e++)this._primsPerFrame[e]=0;this._renderTargetCreationTime=0;
this._vram={tex:0,vb:0,ib:0};this._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0};n=q.createBuffer();e=new ArrayBuffer(16);q.bindBuffer(q.ARRAY_BUFFER,n);q.bufferData(q.ARRAY_BUFFER,e,q.STATIC_DRAW);q.getError();q.vertexAttribPointer(0,4,q.UNSIGNED_BYTE,!1,4,0);this.supportsUnsignedByte=0===q.getError();q.deleteBuffer(n);pc._benchmarked?(this.extTextureFloatRenderable=pc.extTextureFloatRenderable,this.extTextureHalfFloatRenderable=pc.extTextureHalfFloatRenderable,
this.extTextureFloatHighPrecision=pc.extTextureFloatHighPrecision):(this.extTextureFloat&&(this.extTextureFloatRenderable=this.webgl2?q.getExtension("EXT_color_buffer_float"):c(q,this.extTextureFloat,q.FLOAT)),this.extTextureHalfFloat&&(this.extTextureHalfFloatRenderable=this.webgl2?this.extTextureFloatRenderable:c(q,this.extTextureHalfFloat,this.extTextureHalfFloat.HALF_FLOAT_OES)),this.extTextureFloatRenderable&&(n=pc.shaderChunks,r=n.createShaderFromCode(this,n.fullscreenQuadVS,n.precisionTestPS,
"ptest1"),m=n.createShaderFromCode(this,n.fullscreenQuadVS,n.precisionTest2PS,"ptest2"),n=new pc.Texture(this,{format:pc.PIXELFORMAT_RGBA32F,width:1,height:1,mipmaps:!1,minFilter:pc.FILTER_NEAREST,magFilter:pc.FILTER_NEAREST}),e=new pc.RenderTarget(this,n,{depth:!1}),pc.drawQuadWithShader(this,e,r),r=new pc.Texture(this,{format:pc.PIXELFORMAT_R8_G8_B8_A8,width:1,height:1,mipmaps:!1,minFilter:pc.FILTER_NEAREST,magFilter:pc.FILTER_NEAREST}),u=new pc.RenderTarget(this,r,{depth:!1}),this.scope.resolve("source").setValue(n),
pc.drawQuadWithShader(this,u,m),m=new Uint8Array(4),q.bindFramebuffer(q.FRAMEBUFFER,u._glFrameBuffer),q.readPixels(0,0,1,1,q.RGBA,q.UNSIGNED_BYTE,m),this.extTextureFloatHighPrecision=0===m[0]/255/16777216+m[1]/255/65536+m[2]/255/256+m[3]/255,n.destroy(),e.destroy(),r.destroy(),u.destroy(),pc.destroyPostEffectQuad(),q.bindFramebuffer(q.FRAMEBUFFER,null)),pc.extTextureFloatRenderable=this.extTextureFloatRenderable,pc.extTextureHalfFloatRenderable=this.extTextureHalfFloatRenderable,pc.extTextureFloatHighPrecision=
this.extTextureFloatHighPrecision,pc._benchmarked=!0)}).call(this)};n.prototype={updateClientRect:function(){this.clientRect=this.canvas.getBoundingClientRect()},setViewport:function(a,b,c,d){if(this.vx!==a||this.vy!==b||this.vw!==c||this.vh!==d)this.gl.viewport(a,b,c,d),this.vx=a,this.vy=b,this.vw=c,this.vh=d},setScissor:function(a,b,c,d){if(this.sx!==a||this.sy!==b||this.sw!==c||this.sh!==d)this.gl.scissor(a,b,c,d),this.sx=a,this.sy=b,this.sw=c,this.sh=d},getProgramLibrary:function(){return this.programLib},
setProgramLibrary:function(a){this.programLib=a},setFramebuffer:function(a){this.activeFramebuffer!==a&&(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,a),this.activeFramebuffer=a)},_checkFbo:function(){var a=this.gl;switch(a.checkFramebufferStatus(a.FRAMEBUFFER)){case a.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.error("ERROR: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case a.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.error("ERROR: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case a.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.error("ERROR: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
break;case a.FRAMEBUFFER_UNSUPPORTED:console.error("ERROR: FRAMEBUFFER_UNSUPPORTED")}},updateBegin:function(){var a=this.gl;this.indexBuffer=this.boundBuffer=null;var b=this.renderTarget;if(b)if(b._glFrameBuffer)this.setFramebuffer(b._glFrameBuffer);else{b._device=this;b._glFrameBuffer=a.createFramebuffer();this.setFramebuffer(b._glFrameBuffer);var c=b._colorBuffer;c&&(c._glTextureId||(c._width=Math.min(c.width,this.maxRenderBufferSize),c._height=Math.min(c.height,this.maxRenderBufferSize),this.setTexture(c,
0)),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,c._cubemap?a.TEXTURE_CUBE_MAP_POSITIVE_X+b._face:a.TEXTURE_2D,c._glTextureId,0));var d=b._depthBuffer;d&&this.webgl2?(d._glTextureId||(d._width=Math.min(d.width,this.maxRenderBufferSize),d._height=Math.min(d.height,this.maxRenderBufferSize),this.setTexture(d,0)),b._stencil?a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,d._cubemap?a.TEXTURE_CUBE_MAP_POSITIVE_X+b._face:a.TEXTURE_2D,b._depthBuffer._glTextureId,0):a.framebufferTexture2D(a.FRAMEBUFFER,
a.DEPTH_ATTACHMENT,d._cubemap?a.TEXTURE_CUBE_MAP_POSITIVE_X+b._face:a.TEXTURE_2D,b._depthBuffer._glTextureId,0)):!b._depth||1<b._samples&&this.webgl2||(b._glDepthBuffer||(b._glDepthBuffer=a.createRenderbuffer()),a.bindRenderbuffer(a.RENDERBUFFER,b._glDepthBuffer),b._stencil?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,b.width,b.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b._glDepthBuffer)):(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,
b.width,b.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b._glDepthBuffer)),a.bindRenderbuffer(a.RENDERBUFFER,null));this.webgl2&&1<b._samples&&(b._glResolveFrameBuffer=b._glFrameBuffer,b._glFrameBuffer=a.createFramebuffer(),this.setFramebuffer(b._glFrameBuffer),c&&(b._glMsaaColorBuffer||(b._glMsaaColorBuffer=a.createRenderbuffer()),a.bindRenderbuffer(a.RENDERBUFFER,b._glMsaaColorBuffer),a.renderbufferStorageMultisample(a.RENDERBUFFER,b._samples,c._glInternalFormat,
b.width,b.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,b._glMsaaColorBuffer)),b._depth&&(b._glMsaaDepthBuffer||(b._glMsaaDepthBuffer=a.createRenderbuffer()),a.bindRenderbuffer(a.RENDERBUFFER,b._glMsaaDepthBuffer),b._stencil?(a.renderbufferStorageMultisample(a.RENDERBUFFER,b._samples,a.DEPTH24_STENCIL8,b.width,b.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b._glMsaaDepthBuffer)):(a.renderbufferStorageMultisample(a.RENDERBUFFER,
b._samples,a.DEPTH_COMPONENT32F,b.width,b.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b._glMsaaDepthBuffer))))}else this.setFramebuffer(null);for(a=0;16>a;a++)this.textureUnits[a]=null},updateEnd:function(){var a=this.gl,b=this.renderTarget;if(b){var c=b._colorBuffer;c&&c._glTextureId&&c.mipmaps&&c._pot&&(a.bindTexture(c._glTarget,c._glTextureId),a.generateMipmap(c._glTarget));this.webgl2&&1<b._samples&&b.autoResolve&&b.resolve()}},initializeTexture:function(a){var b=
this.gl,c;a._glTextureId=b.createTexture();a._glTarget=a._cubemap?b.TEXTURE_CUBE_MAP:a._volume?b.TEXTURE_3D:b.TEXTURE_2D;switch(a._format){case pc.PIXELFORMAT_A8:a._glFormat=b.ALPHA;a._glInternalFormat=b.ALPHA;a._glPixelType=b.UNSIGNED_BYTE;break;case pc.PIXELFORMAT_L8:a._glFormat=b.LUMINANCE;a._glInternalFormat=b.LUMINANCE;a._glPixelType=b.UNSIGNED_BYTE;break;case pc.PIXELFORMAT_L8_A8:a._glFormat=b.LUMINANCE_ALPHA;a._glInternalFormat=b.LUMINANCE_ALPHA;a._glPixelType=b.UNSIGNED_BYTE;break;case pc.PIXELFORMAT_R5_G6_B5:a._glFormat=
b.RGB;a._glInternalFormat=b.RGB;a._glPixelType=b.UNSIGNED_SHORT_5_6_5;break;case pc.PIXELFORMAT_R5_G5_B5_A1:a._glFormat=b.RGBA;a._glInternalFormat=b.RGBA;a._glPixelType=b.UNSIGNED_SHORT_5_5_5_1;break;case pc.PIXELFORMAT_R4_G4_B4_A4:a._glFormat=b.RGBA;a._glInternalFormat=b.RGBA;a._glPixelType=b.UNSIGNED_SHORT_4_4_4_4;break;case pc.PIXELFORMAT_R8_G8_B8:a._glFormat=b.RGB;a._glInternalFormat=b.RGB;a._glPixelType=b.UNSIGNED_BYTE;break;case pc.PIXELFORMAT_R8_G8_B8_A8:a._glFormat=b.RGBA;a._glInternalFormat=
b.RGBA;a._glPixelType=b.UNSIGNED_BYTE;break;case pc.PIXELFORMAT_DXT1:c=this.extCompressedTextureS3TC;a._glFormat=b.RGB;a._glInternalFormat=c.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case pc.PIXELFORMAT_DXT3:c=this.extCompressedTextureS3TC;a._glFormat=b.RGBA;a._glInternalFormat=c.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case pc.PIXELFORMAT_DXT5:c=this.extCompressedTextureS3TC;a._glFormat=b.RGBA;a._glInternalFormat=c.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;case pc.PIXELFORMAT_ETC1:c=this.extCompressedTextureETC1;
a._glFormat=b.RGB;a._glInternalFormat=c.COMPRESSED_RGB_ETC1_WEBGL;break;case pc.PIXELFORMAT_PVRTC_2BPP_RGB_1:c=this.extCompressedTexturePVRTC;a._glFormat=b.RGB;a._glInternalFormat=c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;break;case pc.PIXELFORMAT_PVRTC_2BPP_RGBA_1:c=this.extCompressedTexturePVRTC;a._glFormat=b.RGBA;a._glInternalFormat=c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;break;case pc.PIXELFORMAT_PVRTC_4BPP_RGB_1:c=this.extCompressedTexturePVRTC;a._glFormat=b.RGB;a._glInternalFormat=c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
break;case pc.PIXELFORMAT_PVRTC_4BPP_RGBA_1:c=this.extCompressedTexturePVRTC;a._glFormat=b.RGBA;a._glInternalFormat=c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;break;case pc.PIXELFORMAT_RGB16F:c=this.extTextureHalfFloat;a._glFormat=b.RGB;this.webgl2?(a._glInternalFormat=b.RGB16F,a._glPixelType=b.HALF_FLOAT):(a._glInternalFormat=b.RGB,a._glPixelType=c.HALF_FLOAT_OES);break;case pc.PIXELFORMAT_RGBA16F:c=this.extTextureHalfFloat;a._glFormat=b.RGBA;this.webgl2?(a._glInternalFormat=b.RGBA16F,a._glPixelType=b.HALF_FLOAT):
(a._glInternalFormat=b.RGBA,a._glPixelType=c.HALF_FLOAT_OES);break;case pc.PIXELFORMAT_RGB32F:a._glFormat=b.RGB;a._glInternalFormat=this.webgl2?b.RGB32F:b.RGB;a._glPixelType=b.FLOAT;break;case pc.PIXELFORMAT_RGBA32F:a._glFormat=b.RGBA;a._glInternalFormat=this.webgl2?b.RGBA32F:b.RGBA;a._glPixelType=b.FLOAT;break;case pc.PIXELFORMAT_R32F:a._glFormat=b.RED;a._glInternalFormat=b.R32F;a._glPixelType=b.FLOAT;break;case pc.PIXELFORMAT_DEPTH:this.webgl2?(a._glFormat=b.DEPTH_COMPONENT,a._glInternalFormat=
b.DEPTH_COMPONENT32F,a._glPixelType=b.FLOAT):(a._glFormat=b.DEPTH_COMPONENT,a._glInternalFormat=b.DEPTH_COMPONENT,a._glPixelType=b.UNSIGNED_SHORT);break;case pc.PIXELFORMAT_DEPTHSTENCIL:a._glFormat=b.DEPTH_STENCIL;a._glInternalFormat=b.DEPTH24_STENCIL8;a._glPixelType=b.UNSIGNED_INT_24_8;break;case pc.PIXELFORMAT_111110F:a._glFormat=b.RGB;a._glInternalFormat=b.R11F_G11F_B10F;a._glPixelType=b.FLOAT;break;case pc.PIXELFORMAT_SRGB:a._glFormat=b.RGB;a._glInternalFormat=b.SRGB8;a._glPixelType=b.UNSIGNED_BYTE;
break;case pc.PIXELFORMAT_SRGBA:a._glFormat=b.RGBA,a._glInternalFormat=b.SRGB8_ALPHA8,a._glPixelType=b.UNSIGNED_BYTE}},uploadTexture:function(a){var b=this.gl;if(a._needsUpload||!(a._needsMipmapsUpload&&a._mipmapsUploaded||!a._pot)){for(var c=0,d,f;a._levels[c]||0===c;){if(a._needsUpload||0!==c){if(c&&(!a._needsMipmapsUpload||!a._mipmaps))break;d=a._levels[c];1!=c||a._compressed||(b.generateMipmap(a._glTarget),a._mipmapsUploaded=!0);if(a._cubemap){var e;b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!1);b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
!1);if(d[0]instanceof HTMLCanvasElement||d[0]instanceof HTMLImageElement||d[0]instanceof HTMLVideoElement)for(e=0;6>e;e++)a._levelsUpdated[0][e]&&(f=d[e],f instanceof HTMLImageElement&&(f.width>this.maxCubeMapSize||f.height>this.maxCubeMapSize)&&(f=m(f,this.maxCubeMapSize),0===c&&(a.width=f.width,a.height=f.height)),b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+e,c,a._glInternalFormat,a._glFormat,a._glPixelType,f));else for(f=1/Math.pow(2,c),e=0;6>e;e++)if(a._levelsUpdated[0][e]){var g=d[e];a._compressed?
b.compressedTexImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+e,c,a._glInternalFormat,Math.max(a._width*f,1),Math.max(a._height*f,1),0,g):b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+e,c,a._glInternalFormat,Math.max(a._width*f,1),Math.max(a._height*f,1),0,a._glFormat,a._glPixelType,g)}}else a._volume?(b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!1),f=1/Math.pow(2,c),a._compressed?b.compressedTexImage3D(b.TEXTURE_3D,c,a._glInternalFormat,Math.max(a._width*f,1),Math.max(a._height*f,1),Math.max(a._depth*f,1),0,d):b.texImage3D(b.TEXTURE_3D,
c,a._glInternalFormat,Math.max(a._width*f,1),Math.max(a._height*f,1),Math.max(a._depth*f,1),0,a._glFormat,a._glPixelType,d)):(d instanceof HTMLCanvasElement||d instanceof HTMLImageElement||d instanceof HTMLVideoElement?(d instanceof HTMLImageElement&&(d.width>this.maxTextureSize||d.height>this.maxTextureSize)&&(d=m(d,this.maxTextureSize),0===c&&(a.width=d.width,a.height=d.height)),b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!0),b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),b.texImage2D(b.TEXTURE_2D,
c,a._glInternalFormat,a._glFormat,a._glPixelType,d)):(b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!1),f=1/Math.pow(2,c),a._compressed?b.compressedTexImage2D(b.TEXTURE_2D,c,a._glInternalFormat,Math.max(a._width*f,1),Math.max(a._height*f,1),0,d):b.texImage2D(b.TEXTURE_2D,c,a._glInternalFormat,Math.max(a._width*f,1),Math.max(a._height*f,1),0,a._glFormat,a._glPixelType,d)),a._mipmapsUploaded=0===c?!1:!0)}c++}if(a._needsUpload)if(a._cubemap)for(c=0;6>c;c++)a._levelsUpdated[0][c]=!1;else a._levelsUpdated[0]=!1;
!a._compressed&&a._mipmaps&&a._needsMipmapsUpload&&a._pot&&1===a._levels.length&&(b.generateMipmap(a._glTarget),a._mipmapsUploaded=!0);a._gpuSize&&(this._vram.tex-=a._gpuSize);q||(q={},q[pc.PIXELFORMAT_A8]=1,q[pc.PIXELFORMAT_L8]=1,q[pc.PIXELFORMAT_L8_A8]=1,q[pc.PIXELFORMAT_R5_G6_B5]=2,q[pc.PIXELFORMAT_R5_G5_B5_A1]=2,q[pc.PIXELFORMAT_R4_G4_B4_A4]=2,q[pc.PIXELFORMAT_R8_G8_B8]=4,q[pc.PIXELFORMAT_R8_G8_B8_A8]=4,q[pc.PIXELFORMAT_RGB16F]=8,q[pc.PIXELFORMAT_RGBA16F]=8,q[pc.PIXELFORMAT_RGB32F]=16,q[pc.PIXELFORMAT_RGBA32F]=
16,q[pc.PIXELFORMAT_R32F]=4,q[pc.PIXELFORMAT_DEPTH]=4,q[pc.PIXELFORMAT_DEPTHSTENCIL]=4,q[pc.PIXELFORMAT_111110F]=4,q[pc.PIXELFORMAT_SRGB]=4,q[pc.PIXELFORMAT_SRGBA]=4);c=1;!a._pot||!a._mipmaps&&a._minFilter!==b.NEAREST_MIPMAP_NEAREST&&a._minFilter!==b.NEAREST_MIPMAP_LINEAR&&a._minFilter!==b.LINEAR_MIPMAP_NEAREST&&a._minFilter!==b.LINEAR_MIPMAP_LINEAR||a._compressed&&1===a._levels.length||(c=Math.round(Math.log2(Math.max(a._width,a._height))+1));b=a._width;d=a._height;e=a._depth;for(g=f=0;g<c;g++)f=
a._compressed?a._format===pc.PIXELFORMAT_ETC1?f+Math.floor((b+3)/4)*Math.floor((d+3)/4)*8*e:a._format===pc.PIXELFORMAT_PVRTC_2BPP_RGB_1||a._format===pc.PIXELFORMAT_PVRTC_2BPP_RGBA_1?f+Math.max(b,16)*Math.max(d,8)/4*e:a._format===pc.PIXELFORMAT_PVRTC_4BPP_RGB_1||a._format===pc.PIXELFORMAT_PVRTC_4BPP_RGBA_1?f+Math.max(b,8)*Math.max(d,8)/2*e:f+Math.floor((b+4-1)/4)*Math.floor((d+4-1)/4)*(a._format===pc.PIXELFORMAT_DXT1?8:16)*e:f+b*d*e*q[a._format],b=Math.max(.5*b,1),d=Math.max(.5*d,1),e=Math.max(.5*
e,1);a._cubemap&&(f*=6);a._gpuSize=f;this._vram.tex+=a._gpuSize}},setTexture:function(a,b){var c=this.gl;a._glTextureId||this.initializeTexture(a);var d=a._minFilterDirty||a._magFilterDirty||a._addressUDirty||a._addressVDirty||a._addressWDirty||a._anisotropyDirty||a._compareModeDirty;if(this.textureUnits[b]!==a||d)this.activeTexture!==b&&(c.activeTexture(c.TEXTURE0+b),this.activeTexture=b),c.bindTexture(a._glTarget,a._glTextureId),this.textureUnits[b]=a;if(d){if(a._minFilterDirty){d=a._minFilter;
if(!a._pot||!a._mipmaps||a._compressed&&1===a._levels.length)if(d===pc.FILTER_NEAREST_MIPMAP_NEAREST||d===pc.FILTER_NEAREST_MIPMAP_LINEAR)d=pc.FILTER_NEAREST;else if(d===pc.FILTER_LINEAR_MIPMAP_NEAREST||d===pc.FILTER_LINEAR_MIPMAP_LINEAR)d=pc.FILTER_LINEAR;c.texParameteri(a._glTarget,c.TEXTURE_MIN_FILTER,this.glFilter[d]);a._minFilterDirty=!1}a._magFilterDirty&&(c.texParameteri(a._glTarget,c.TEXTURE_MAG_FILTER,this.glFilter[a._magFilter]),a._magFilterDirty=!1);a._addressUDirty&&(this.webgl2?c.texParameteri(a._glTarget,
c.TEXTURE_WRAP_S,this.glAddress[a._addressU]):c.texParameteri(a._glTarget,c.TEXTURE_WRAP_S,this.glAddress[a._pot?a._addressU:pc.ADDRESS_CLAMP_TO_EDGE]),a._addressUDirty=!1);a._addressVDirty&&(this.webgl2?c.texParameteri(a._glTarget,c.TEXTURE_WRAP_T,this.glAddress[a._addressV]):c.texParameteri(a._glTarget,c.TEXTURE_WRAP_T,this.glAddress[a._pot?a._addressV:pc.ADDRESS_CLAMP_TO_EDGE]),a._addressVDirty=!1);this.webgl2&&(a._addressWDirty&&(c.texParameteri(a._glTarget,c.TEXTURE_WRAP_R,this.glAddress[a._addressW]),
a._addressWDirty=!1),a._compareModeDirty&&(c.texParameteri(a._glTarget,c.TEXTURE_COMPARE_MODE,a._compareOnRead?c.COMPARE_REF_TO_TEXTURE:c.NONE),c.texParameteri(a._glTarget,c.TEXTURE_COMPARE_FUNC,this.glComparison[a._compareFunc]),a._compareModeDirty=!1));a._anisotropyDirty&&((d=this.extTextureFilterAnisotropic)&&c.texParameterf(a._glTarget,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.max(1,Math.min(Math.round(a._anisotropy),this.maxAnisotropy))),a._anisotropyDirty=!1)}if(a._needsUpload||a._needsMipmapsUpload)this.uploadTexture(a),
a._needsUpload=!1,a._needsMipmapsUpload=!1},onVertexBufferDeleted:function(){this.indexBuffer=this.boundBuffer=null;this.vertexBuffers.length=0;this.vbOffsets.length=0;this.attributesInvalidated=!0;for(var a in this.enabledAttributes)this.gl.disableVertexAttribArray(a);this.enabledAttributes={}},draw:function(a,b){var c=this.gl,d,f,e,g,k,l,h,r;d=this.shader;r=d.samplers;var p=d.uniforms;1<b&&(this.boundBuffer=null,this.attributesInvalidated=!0);if(this.attributesInvalidated){k=d.attributes;d=0;for(e=
k.length;d<e;d++)l=k[d],f=l.scopeId.value,null!==f&&(h=this.vertexBuffers[f.stream],g=this.vbOffsets[f.stream]||0,h=h.bufferId,this.boundBuffer!==h&&(c.bindBuffer(c.ARRAY_BUFFER,h),this.boundBuffer=h),l=l.locationId,this.enabledAttributes[l]||(c.enableVertexAttribArray(l),this.enabledAttributes[l]=!0),c.vertexAttribPointer(l,f.numComponents,this.glType[f.dataType],f.normalize,f.stride,f.offset+g),1===f.stream&&1<b?this.instancedAttribs[l]||(this.extInstancing.vertexAttribDivisorANGLE(l,1),this.instancedAttribs[l]=
!0):this.instancedAttribs[l]&&(this.extInstancing.vertexAttribDivisorANGLE(l,0),this.instancedAttribs[l]=!1));this.attributesInvalidated=!1}var m=0;d=0;for(e=r.length;d<e;d++)if(g=r[d],k=g.scopeId.value)if(k instanceof pc.Texture)l=k,this.setTexture(l,m),g.slot!==m&&(c.uniform1i(g.locationId,m),g.slot=m),m++;else{g.array.length=0;h=k.length;for(f=0;f<h;f++)l=k[f],this.setTexture(l,m),g.array[f]=m,m++;c.uniform1iv(g.locationId,g.array)}d=0;for(e=p.length;d<e;d++)if(r=p[d],f=r.scopeId,g=r.version,k=
f.versionObject.version,g.globalId!==k.globalId||g.revision!==k.revision)if(g.globalId=k.globalId,g.revision=k.revision,null!==f.value)this.commitFunction[r.dataType](r,f.value);this._drawCallsPerFrame++;this._primsPerFrame[a.type]+=a.count*(1<b?b:1);this.webgl2&&this.transformFeedbackBuffer&&(c.bindBufferBase(c.TRANSFORM_FEEDBACK_BUFFER,0,this.transformFeedbackBuffer.bufferId),c.beginTransformFeedback(c.POINTS));a.indexed?1<b?(this.extInstancing.drawElementsInstancedANGLE(this.glPrimitive[a.type],
a.count,this.indexBuffer.glFormat,2*a.base,b),this.boundBuffer=null,this.attributesInvalidated=!0):c.drawElements(this.glPrimitive[a.type],a.count,this.indexBuffer.glFormat,a.base*this.indexBuffer.bytesPerIndex):1<b?(this.extInstancing.drawArraysInstancedANGLE(this.glPrimitive[a.type],a.base,a.count,b),this.boundBuffer=null,this.attributesInvalidated=!0):c.drawArrays(this.glPrimitive[a.type],a.base,a.count);this.webgl2&&this.transformFeedbackBuffer&&(c.endTransformFeedback(),c.bindBufferBase(c.TRANSFORM_FEEDBACK_BUFFER,
0,null))},clear:function(a){var b=this.defaultClearOptions;a=a||b;var c=void 0==a.flags?b.flags:a.flags;if(0!==c){var d=this.gl;if(c&pc.CLEARFLAG_COLOR){var f=void 0==a.color?b.color:a.color;this.setClearColor(f[0],f[1],f[2],f[3])}c&pc.CLEARFLAG_DEPTH&&(this.setClearDepth(void 0==a.depth?b.depth:a.depth),this.depthWrite||d.depthMask(!0));c&pc.CLEARFLAG_STENCIL&&this.setClearStencil(void 0==a.stencil?b.stencil:a.stencil);d.clear(this.glClearFlag[c]);c&pc.CLEARFLAG_DEPTH&&(this.depthWrite||d.depthMask(!1))}},
readPixels:function(a,b,c,d,f){var e=this.gl;e.readPixels(a,b,c,d,e.RGBA,e.UNSIGNED_BYTE,f)},setClearDepth:function(a){a!==this.clearDepth&&(this.gl.clearDepth(a),this.clearDepth=a)},setClearColor:function(a,b,c,d){if(a!==this.clearRed||b!==this.clearGreen||c!==this.clearBlue||d!==this.clearAlpha)this.gl.clearColor(a,b,c,d),this.clearRed=a,this.clearGreen=b,this.clearBlue=c,this.clearAlpha=d},setClearStencil:function(a){a!==this.clearStencil&&(this.gl.clearStencil(a),this.clearStencil=a)},setRenderTarget:function(a){this.renderTarget=
a},getRenderTarget:function(){return this.renderTarget},getDepthTest:function(){return this.depthTest},setDepthTest:function(a){if(this.depthTest!==a){var b=this.gl;a?b.enable(b.DEPTH_TEST):b.disable(b.DEPTH_TEST);this.depthTest=a}},setDepthFunc:function(a){this.depthFunc!==a&&(this.gl.depthFunc(this.glComparison[a]),this.depthFunc=a)},getDepthWrite:function(){return this.depthWrite},setDepthWrite:function(a){this.depthWrite!==a&&(this.gl.depthMask(a),this.depthWrite=a)},setColorWrite:function(a,
b,c,d){if(this.writeRed!==a||this.writeGreen!==b||this.writeBlue!==c||this.writeAlpha!==d)this.gl.colorMask(a,b,c,d),this.writeRed=a,this.writeGreen=b,this.writeBlue=c,this.writeAlpha=d},setAlphaToCoverage:function(a){this.webgl2&&this.alphaToCoverage!==a&&((this.alphaToCoverage=a)?this.gl.enable(this.gl.SAMPLE_ALPHA_TO_COVERAGE):this.gl.disable(this.gl.SAMPLE_ALPHA_TO_COVERAGE))},setTransformFeedbackBuffer:function(a){if(this.transformFeedbackBuffer!==a&&(this.transformFeedbackBuffer=a,this.webgl2)){var b=
this.gl;a?b.bindTransformFeedback(b.TRANSFORM_FEEDBACK,this.feedback):b.bindTransformFeedback(b.TRANSFORM_FEEDBACK,null)}},setRaster:function(a){this.raster!==a&&(this.raster=a,this.webgl2&&(a?this.gl.disable(this.gl.RASTERIZER_DISCARD):this.gl.enable(this.gl.RASTERIZER_DISCARD)))},setDepthBias:function(a){this.depthBiasEnabled!==a&&((this.depthBiasEnabled=a)?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL))},setDepthBiasValues:function(a,b){this.gl.polygonOffset(b,
a)},getBlending:function(){return this.blending},setBlending:function(a){if(this.blending!==a){var b=this.gl;a?b.enable(b.BLEND):b.disable(b.BLEND);this.blending=a}},setStencilTest:function(a){if(this.stencil!==a){var b=this.gl;a?b.enable(b.STENCIL_TEST):b.disable(b.STENCIL_TEST);this.stencil=a}},setStencilFunc:function(a,b,c){if(this.stencilFuncFront!==a||this.stencilRefFront!==b||this.stencilMaskFront!==c||this.stencilFuncBack!==a||this.stencilRefBack!==b||this.stencilMaskBack!==c)this.gl.stencilFunc(this.glComparison[a],
b,c),this.stencilFuncFront=this.stencilFuncBack=a,this.stencilRefFront=this.stencilRefBack=b,this.stencilMaskFront=this.stencilMaskBack=c},setStencilFuncFront:function(a,b,c){if(this.stencilFuncFront!==a||this.stencilRefFront!==b||this.stencilMaskFront!==c){var d=this.gl;d.stencilFuncSeparate(d.FRONT,this.glComparison[a],b,c);this.stencilFuncFront=a;this.stencilRefFront=b;this.stencilMaskFront=c}},setStencilFuncBack:function(a,b,c){if(this.stencilFuncBack!==a||this.stencilRefBack!==b||this.stencilMaskBack!==
c){var d=this.gl;d.stencilFuncSeparate(d.BACK,this.glComparison[a],b,c);this.stencilFuncBack=a;this.stencilRefBack=b;this.stencilMaskBack=c}},setStencilOperation:function(a,b,c,d){if(this.stencilFailFront!==a||this.stencilZfailFront!==b||this.stencilZpassFront!==c||this.stencilFailBack!==a||this.stencilZfailBack!==b||this.stencilZpassBack!==c)this.gl.stencilOp(this.glStencilOp[a],this.glStencilOp[b],this.glStencilOp[c]),this.stencilFailFront=this.stencilFailBack=a,this.stencilZfailFront=this.stencilZfailBack=
b,this.stencilZpassFront=this.stencilZpassBack=c;if(this.stencilWriteMaskFront!==d||this.stencilWriteMaskBack!==d)this.gl.stencilMask(d),this.stencilWriteMaskBack=this.stencilWriteMaskFront=d},setStencilOperationFront:function(a,b,c,d){if(this.stencilFailFront!==a||this.stencilZfailFront!==b||this.stencilZpassFront!==c)this.gl.stencilOpSeparate(this.gl.FRONT,this.glStencilOp[a],this.glStencilOp[b],this.glStencilOp[c]),this.stencilFailFront=a,this.stencilZfailFront=b,this.stencilZpassFront=c;this.stencilWriteMaskFront!==
d&&(this.gl.stencilMaskSeparate(this.gl.FRONT,d),this.stencilWriteMaskFront=d)},setStencilOperationBack:function(a,b,c,d){if(this.stencilFailBack!==a||this.stencilZfailBack!==b||this.stencilZpassBack!==c)this.gl.stencilOpSeparate(this.gl.BACK,this.glStencilOp[a],this.glStencilOp[b],this.glStencilOp[c]),this.stencilFailBack=a,this.stencilZfailBack=b,this.stencilZpassBack=c;this.stencilWriteMaskBack!==d&&(this.gl.stencilMaskSeparate(this.gl.BACK,d),this.stencilWriteMaskBack=d)},setBlendFunction:function(a,
b){if(this.blendSrc!==a||this.blendDst!==b||this.separateAlphaBlend)this.gl.blendFunc(this.glBlendFunction[a],this.glBlendFunction[b]),this.blendSrc=a,this.blendDst=b,this.separateAlphaBlend=!1},setBlendFunctionSeparate:function(a,b,c,d){this.blendSrc===a&&this.blendDst===b&&this.blendSrcAlpha===c&&this.blendDstAlpha===d&&this.separateAlphaBlend||(this.gl.blendFuncSeparate(this.glBlendFunction[a],this.glBlendFunction[b],this.glBlendFunction[c],this.glBlendFunction[d]),this.blendSrc=a,this.blendDst=
b,this.blendSrcAlpha=c,this.blendDstAlpha=d,this.separateAlphaBlend=!0)},setBlendEquation:function(a){if(this.blendEquation!==a||this.separateAlphaEquation)this.gl.blendEquation(this.glBlendEquation[a]),this.blendEquation=a,this.separateAlphaEquation=!1},setBlendEquationSeparate:function(a,b){this.blendEquation===a&&this.blendAlphaEquation===b&&this.separateAlphaEquation||(this.gl.blendEquationSeparate(this.glBlendEquation[a],this.glBlendEquation[b]),this.blendEquation=a,this.blendAlphaEquation=b,
this.separateAlphaEquation=!0)},setCullMode:function(a){if(this.cullMode!==a){if(a===pc.CULLFACE_NONE)this.gl.disable(this.gl.CULL_FACE);else{this.cullMode===pc.CULLFACE_NONE&&this.gl.enable(this.gl.CULL_FACE);var b=this.glCull[a];this.cullFace!==b&&(this.gl.cullFace(b),this.cullFace=b)}this.cullMode=a}},getCullMode:function(){return this.cullMode},setIndexBuffer:function(a){if(this.indexBuffer!==a){this.indexBuffer=a;var b=this.gl;b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,a?a.bufferId:null)}},setVertexBuffer:function(a,
b,c){if(this.vertexBuffers[b]!==a||this.vbOffsets[b]!==c){this.vertexBuffers[b]=a;this.vbOffsets[b]=c;c=0;a=a.getFormat().elements;for(var d=a.length;c<d;){var f=a[c++];f.stream=b;f.scopeId.setValue(f)}this.attributesInvalidated=!0}},setShader:function(a){if(a!==this.shader){this.shader=a;if(!a.ready&&!a.link())return!1;this._shaderSwitchesPerFrame++;this.gl.useProgram(a.program);this.attributesInvalidated=!0}return!0},getHdrFormat:function(){return this.extTextureHalfFloatRenderable?pc.PIXELFORMAT_RGB16F:
this.extTextureFloatRenderable?pc.PIXELFORMAT_RGB32F:pc.PIXELFORMAT_R8_G8_B8_A8},getBoneLimit:function(){return this.boneLimit},setBoneLimit:function(a){this.boneLimit=a},enableValidation:function(a){console.warn("enableValidation: This function is deprecated and will be removed shortly.")},validate:function(){console.warn("validate: This function is deprecated and will be removed shortly.")},resizeCanvas:function(a,b){this._width=a;this._height=b;var c=Math.min(this._maxPixelRatio,window.devicePixelRatio);
a*=c;b*=c;this.canvas.width=a;this.canvas.height=b;this.fire("resizecanvas",a,b)},setResolution:function(a,b){this._width=a;this._height=b;this.canvas.width=a;this.canvas.height=b;this.fire("resizecanvas",a,b)},clearShaderCache:function(){this.programLib.clearCache()},removeShaderFromCache:function(a){this.programLib.removeFromCache(a)},destroy:function(){this.webgl2&&this.feedback&&this.gl.deleteTransformFeedback(this.feedback)}};Object.defineProperty(n.prototype,"width",{get:function(){return this.gl.drawingBufferWidth||
this.canvas.width}});Object.defineProperty(n.prototype,"height",{get:function(){return this.gl.drawingBufferHeight||this.canvas.height}});Object.defineProperty(n.prototype,"fullscreen",{get:function(){return!!document.fullscreenElement},set:function(a){a?this.gl.canvas.requestFullscreen():document.exitFullscreen()}});Object.defineProperty(n.prototype,"enableAutoInstancing",{get:function(){return this._enableAutoInstancing},set:function(a){this._enableAutoInstancing=a&&this.extInstancing}});Object.defineProperty(n.prototype,
"maxAnisotropy",{get:function(){var a;return function(){if(void 0===a){a=1;var b=this.gl,c=this.extTextureFilterAnisotropic;c&&(a=b.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT))}return a}}()});Object.defineProperty(n.prototype,"maxPixelRatio",{get:function(){return this._maxPixelRatio},set:function(a){this._maxPixelRatio=a;this.resizeCanvas(this._width,this._height)}});return{UnsupportedBrowserError:e,ContextCreationError:a,GraphicsDevice:n,precalculatedTangents:!0}}());pc.extend(pc,function(){var e={},a={};a.vertex_position=pc.SEMANTIC_POSITION;a.vertex_normal=pc.SEMANTIC_NORMAL;a.vertex_tangent=pc.SEMANTIC_TANGENT;a.vertex_texCoord0=pc.SEMANTIC_TEXCOORD0;a.vertex_texCoord1=pc.SEMANTIC_TEXCOORD1;a.vertex_color=pc.SEMANTIC_COLOR;e.collectAttribs=function(b){for(var c={},d=0,f=b.indexOf("attribute");0<=f&&!(0<f&&"/"===b[f-1]);){var e=b.indexOf(";",f),k=b.lastIndexOf(" ",e),e=b.substr(k+1,e-(k+1)),k=a[e];void 0!==k?c[e]=k:(c[e]="ATTR"+d,d++);f=b.indexOf("attribute",
f+1)}return c};e.createShader=function(a,c,d,f){c=e[c];d=pc.programlib.precisionCode(a)+"\n"+e[d];var b=this.collectAttribs(c);a.webgl2&&(c=pc.programlib.versionCode(a)+this.gles3VS+c,d=pc.programlib.versionCode(a)+this.gles3PS+d);return new pc.Shader(a,{attributes:b,vshader:c,fshader:d,useTransformFeedback:f})};e.createShaderFromCode=function(a,c,d,f,e){var b=a.programLib._cache,g=b[f];if(void 0!==g)return g;d=pc.programlib.precisionCode(a)+"\n"+(d||pc.programlib.dummyFragmentCode());g=this.collectAttribs(c);
a.webgl2&&(c=pc.programlib.versionCode(a)+this.gles3VS+c,d=pc.programlib.versionCode(a)+this.gles3PS+d);b[f]=new pc.Shader(a,{attributes:g,vshader:c,fshader:d,useTransformFeedback:e});return b[f]};return{shaderChunks:e}}());pc.extend(pc,function(){var e=null;return{drawQuadWithShader:function(a,b,c,d,f,g){if(null===e){var k=new pc.VertexFormat(a,[{semantic:pc.SEMANTIC_POSITION,components:2,type:pc.ELEMENTTYPE_FLOAT32}]);e=new pc.VertexBuffer(a,k,4);k=new pc.VertexIterator(e);k.element[pc.SEMANTIC_POSITION].set(-1,-1);k.next();k.element[pc.SEMANTIC_POSITION].set(1,-1);k.next();k.element[pc.SEMANTIC_POSITION].set(-1,1);k.next();k.element[pc.SEMANTIC_POSITION].set(1,1);k.end()}k=a.renderTarget;a.setRenderTarget(b);a.updateBegin();
var l,p,h,m,q;d?(b=d.x,l=d.y,p=d.z,d=d.w):(p=null!==b?b.width:a.width,d=null!==b?b.height:a.height,l=b=0);f?(h=f.x,m=f.y,q=f.z,f=f.w):(h=b,m=l,q=p,f=d);a.setViewport(b,l,p,d);a.setScissor(h,m,q,f);f=a.getDepthTest();p=a.getDepthWrite();b=a.getCullMode();a.setDepthTest(!1);a.setDepthWrite(!1);a.setCullMode(pc.CULLFACE_NONE);g||a.setBlending(!1);a.setVertexBuffer(e,0);a.setShader(c);a.draw({type:pc.PRIMITIVE_TRISTRIP,base:0,count:4,indexed:!1});a.setDepthTest(f);a.setDepthWrite(p);a.setCullMode(b);
a.updateEnd();a.setRenderTarget(k);a.updateBegin()},destroyPostEffectQuad:function(){e=null}}}());pc.extend(pc,function(){function e(){for(var a=Date.now()+10;Date.now()<a;);}function a(a,b,f){var c=b._colorBuffer;if(c.format==pc.PIXELFORMAT_R8_G8_B8_A8){var d=new Uint8Array(c.width*c.height*4);a=a.gl;a.bindFramebuffer(a.FRAMEBUFFER,b._glFrameBuffer);a.readPixels(0,0,c.width,c.height,a.RGBA,a.UNSIGNED_BYTE,d);c._levels||(c._levels=[]);c._levels[0]||(c._levels[0]=[]);c._levels[0][f]=d}}function b(a,b){return Math.atan2(a*b,Math.sqrt(a*a+b*b+1))}return{prefilterCubemap:function(b){var c=b.device,
f=b.sourceCubemap,g=b.method,k=b.samples,l=b.cpuSync,p=b.chromeFix;if(l&&!f._levels[0])console.error("ERROR: prefilter: cubemap must have _levels");else{var h=pc.shaderChunks,m=f.rgbm,k=h.createShaderFromCode(c,h.fullscreenQuadVS,h.rgbmPS+h.prefilterCubemapPS.replace(/\$METHOD/g,0===g?"cos":"phong").replace(/\$NUMSAMPLES/g,k).replace(/\$textureCube/g,m?"textureCubeRGBM":"textureCube"),"prefilter"+g+""+k+""+m),q=h.createShaderFromCode(c,h.fullscreenQuadVS,h.outputCubemapPS,"outputCubemap"),n=c.scope.resolve("source"),
r=c.scope.resolve("params"),u=new pc.Vec4,v=f.width,h=f.format,B=[[],b.filteredFixed,b.filteredRgbm,b.filteredFixedRgbm],z=0===g?[.9,.85,.7,.4,.25]:[512,128,32,8,2],t=[64,32,16,8,4],w,y,A;y=h===pc.PIXELFORMAT_R8_G8_B8;w=!1;var x;l&&(w=f._levels[0][0]instanceof HTMLImageElement);if((y||w)&&l){h=pc.PIXELFORMAT_R8_G8_B8_A8;x=new pc.gfx.Texture(c,{cubemap:!0,rgbm:m,format:h,width:v,height:v,mipmaps:!1});for(A=0;6>A;A++)w=new pc.RenderTarget(c,x,{face:A,depth:!1}),u.x=A,u.y=0,n.setValue(f),r.setValue(u.data),
p&&e(),pc.drawQuadWithShader(c,w,q),a(c,w,A);f=x}if(128<v){var C=Math.round(Math.log2(v))-Math.round(Math.log2(128));for(y=0;y<C;y++){var v=.5*f.width,I=0===g?1:Math.pow(2,Math.round(Math.log2(z[0])+2*(C-y)));x=new pc.gfx.Texture(c,{cubemap:!0,rgbm:m,format:h,width:v,height:v,mipmaps:!1});for(A=0;6>A;A++)w=new pc.RenderTarget(c,x,{face:A,depth:!1}),u.x=A,u.y=I,u.z=v,u.w=m?3:0,n.setValue(f),r.setValue(u.data),p&&e(),pc.drawQuadWithShader(c,w,q),y===C-1&&l&&a(c,w,A);f=x}}b.sourceCubemap=f;x=null;if(!m&&
b.filteredFixedRgbm)for(x=new pc.gfx.Texture(c,{cubemap:!0,rgbm:!0,format:pc.PIXELFORMAT_R8_G8_B8_A8,width:v,height:v,mipmaps:!1}),A=0;6>A;A++)w=new pc.RenderTarget(c,x,{face:A,depth:!1}),u.x=A,u.w=2,n.setValue(f),r.setValue(u.data),p&&e(),pc.drawQuadWithShader(c,w,q),a(c,w,A);v=0===g?1:2048;w=0===g?0:-1;B[w]=[];for(y=0;5>y;y++)for(q=w;q<B.length;q++)null!=B[q]&&(B[q][y]=new pc.gfx.Texture(c,{cubemap:!0,rgbm:2>q?m:!0,format:2>q?h:pc.PIXELFORMAT_R8_G8_B8_A8,fixCubemapSeams:1===q||3===q,width:t[y],
height:t[y],mipmaps:!1}));for(q=w;q<B.length;q++)if(null!=B[q])if(1<q&&m)B[q]=B[q-2];else for(y=0;5>y;y++)for(A=0;6>A;A++)w=new pc.RenderTarget(c,B[q][y],{face:A,depth:!1}),u.x=A,u.y=0>q?v:z[y],u.z=t[y],u.w=m?3:q,n.setValue(0===y?f:0===g?B[0][y-1]:B[-1][y-1]),r.setValue(u.data),p&&e(),pc.drawQuadWithShader(c,w,k),l&&a(c,w,A);b.filtered=B[0];if(l&&b.singleFilteredFixed){f=[f,b.filteredFixed[0],b.filteredFixed[1],b.filteredFixed[2],b.filteredFixed[3],b.filteredFixed[4],b.filteredFixed[5]];m=new pc.gfx.Texture(c,
{cubemap:!0,rgbm:m,fixCubemapSeams:!0,format:h,width:128,height:128,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE});for(y=0;6>y;y++)m._levels[y]=f[y]._levels[0];m.upload();m._prefilteredMips=!0;b.singleFilteredFixed=m}if(l&&b.singleFilteredFixedRgbm&&b.filteredFixedRgbm){f=[x,b.filteredFixedRgbm[0],b.filteredFixedRgbm[1],b.filteredFixedRgbm[2],b.filteredFixedRgbm[3],b.filteredFixedRgbm[4],b.filteredFixedRgbm[5]];m=new pc.gfx.Texture(c,{cubemap:!0,rgbm:!0,fixCubemapSeams:!0,format:pc.PIXELFORMAT_R8_G8_B8_A8,
width:128,height:128,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE});for(y=0;6>y;y++)m._levels[y]=f[y]._levels[0];m.upload();m._prefilteredMips=!0;b.singleFilteredFixedRgbm=m}}},shFromCubemap:function(a,d){var c,e=a.width,k,l;if(a.format!=pc.PIXELFORMAT_R8_G8_B8_A8)console.error("ERROR: SH: cubemap must be RGBA8");else{if(a._levels[0]){if(!a._levels[0][0].length)if(a._levels[0][0]instanceof HTMLImageElement){k=pc.Application.getApplication().graphicsDevice;l=k.gl;c=pc.shaderChunks;
var p=c.createShaderFromCode(k,c.fullscreenQuadVS,c.fullscreenQuadPS,"fsQuadSimple"),h=k.scope.resolve("source");for(c=0;6>c;c++){var m=a._levels[0][c],q=new pc.Texture(k,{cubemap:!1,rgbm:!1,format:a.format,width:e,height:e,mipmaps:!1});q._levels[0]=m;q.upload();m=new pc.Texture(k,{cubemap:!1,rgbm:!1,format:a.format,width:e,height:e,mipmaps:!1});m=new pc.RenderTarget(k,m,{depth:!1});h.setValue(q);pc.drawQuadWithShader(k,m,p);var n=new Uint8Array(e*e*4);l.bindFramebuffer(l.FRAMEBUFFER,m._glFrameBuffer);
l.readPixels(0,0,q.width,q.height,l.RGBA,l.UNSIGNED_BYTE,n);a._levels[0][c]=n}}else{console.error("ERROR: SH: cubemap must be composed of arrays or images");return}p=[];for(l=0;l<e;l++)for(k=0;k<e;k++)p[l*e+k]=(new pc.Vec3(k/(e-1)*2-1,l/(e-1)*2-1,1)).normalize();var h=new Float32Array(27),r,u,v,B,z,t,w,y,A,x,C;for(c=m=0;6>c;c++)for(l=0;l<e;l++)for(k=0;k<e;k++){q=l*e+k;n=k;w=l;y=e;u=(2*(n+.5)/y-1)*(1-1/y);C=(2*(w+.5)/y-1)*(1-1/y);r=1/y;A=u-r;x=C-r;u+=r;C+=r;A=b(A,x)-b(A,C)-b(u,x)+b(u,C);if(0===n&&
0===w||n===y-1&&0===w||0===n&&w===y-1||n===y-1&&w===y-1)A/=3;else if(0===n||0===w||n===y-1||w===y-1)A*=.5;n=A;w=4*n/17;y=8*n/17;A=15*n/17;x=5*n/68;C=15*n/68;r=p[q];0==c?(B=r.z,z=-r.y,t=-r.x):1==c?(B=-r.z,z=-r.y,t=r.x):2==c?(B=r.x,z=r.z,t=r.y):3==c?(B=r.x,z=-r.z,t=-r.y):4==c?(B=r.x,z=-r.y,t=r.z):5==c&&(B=-r.x,z=-r.y,t=-r.z);d||(B=-B);u=a._levels[0][c][4*q+3]/255;for(r=0;3>r;r++)v=a._levels[0][c][4*q+r]/255,a.rgbm?(v*=8*u,v*=v):v=Math.pow(v,2.2),h[0+r]+=v*w,h[3+r]+=v*y*B,h[6+r]+=v*y*z,h[9+r]+=v*y*t,
h[12+r]+=v*A*B*t,h[15+r]+=v*A*t*z,h[18+r]+=v*A*z*B,h[21+r]+=v*x*(3*t*t-1),h[24+r]+=v*C*(B*B-z*z),m+=n}for(r=0;r<h.length;r++)h[r]*=4*Math.PI/m;return h}console.error("ERROR: SH: cubemap must be synced to CPU")}}}}());pc.extend(pc,function(){return{paraboloidFromCubemap:function(e,a,b,c){var d=pc.shaderChunks,d=d.createShaderFromCode(e,d.fullscreenQuadVS,(a.fixCubemapSeams?d.fixCubemapSeamsStretchPS:d.fixCubemapSeamsNonePS)+d.genParaboloidPS,"genParaboloid"),f=e.scope.resolve("source"),g=e.scope.resolve("params"),k=new pc.Vec4,l=a.width,p=a.rgbm,h=a.format,l=2*Math.max(l,8),l=new pc.gfx.Texture(e,{rgbm:p,format:h,width:2*l,height:l,mipmaps:!1}),p=new pc.RenderTarget(e,l,{depth:!1});k.x=b;k.y=c?-1:1;f.setValue(a);
g.setValue(k.data);pc.drawQuadWithShader(e,p,d);return l},generateDpAtlas:function(e,a,b){var c,d;d=new pc.Vec4;for(var f=new pc.Vec4,g=4*a[0].width,k=pc.shaderChunks,k=k.createShaderFromCode(e,k.fullscreenQuadVS,k.dpAtlasQuadPS,"dpAtlasQuad"),l=e.scope.resolve("source"),p=e.scope.resolve("params"),h=new pc.gfx.Texture(e,{rgbm:a[0].rgbm,format:a[0].format,width:g,height:g,mipmaps:!1}),m=new pc.RenderTarget(e,h,{depth:!1}),q=(g+2)/g-1,n=0;6>n;n++){c=pc.paraboloidFromCubemap(e,a[n],n,b);l.setValue(c);
c=d;var r=n;c.x=.5*pc.math.clamp(r-2,0,1);var r=r-6*c.x,u=1-c.x;c.y=Math.min(.5*r,.75)*u+c.x;c.z=(1-.5*pc.math.clamp(r,0,1))*u;c.w=.5*c.z;c=1/c.z;f.x=c*q;f.y=2*f.x;f.x+=1;f.y+=1;p.setValue(f.data);d.x*=g;d.y*=g;d.z*=g;d.w*=g;pc.drawQuadWithShader(e,m,k,d)}return h}}}());pc.shaderChunks.TBNPS="void getTBN() {\n    dTBN = mat3(normalize(vTangentW), normalize(vBinormalW), normalize(vNormalW));\n}\n";pc.shaderChunks.TBNfastPS="void getTBN() {\n    dTBN = mat3((vTangentW), (vBinormalW), (vNormalW));\n}\n";pc.shaderChunks.alphaTestPS="uniform float alpha_ref;\nvoid alphaTest(float a) {\n    if (a < alpha_ref) discard;\n}\n";pc.shaderChunks.ambientConstantPS="\nvoid addAmbient() {\n    dDiffuseLight += light_globalAmbient;\n}\n";
pc.shaderChunks.ambientPrefilteredCubePS="void addAmbient() {\n    vec3 fixedReflDir = fixSeamsStatic(dNormalW, 1.0 - 1.0 / 4.0);\n    fixedReflDir.x *= -1.0;\n    dDiffuseLight += processEnvironment($DECODE(textureCube(texture_prefilteredCubeMap4, fixedReflDir)).rgb);\n}\n";pc.shaderChunks.ambientPrefilteredCubeLodPS="void addAmbient() {\n    vec3 fixedReflDir = fixSeamsStatic(dNormalW, 1.0 - 1.0 / 4.0);\n    fixedReflDir.x *= -1.0;\n    dDiffuseLight += processEnvironment($DECODE( textureCubeLodEXT(texture_prefilteredCubeMap128, fixedReflDir, 5.0) ).rgb);\n}\n";
pc.shaderChunks.ambientSHPS="uniform vec3 ambientSH[9];\nvoid addAmbient() {\n    vec3 n = dNormalW;\n    vec3 color =\n                        ambientSH[0] +\n                        ambientSH[1] * n.x +\n                        ambientSH[2] * n.y +\n                        ambientSH[3] * n.z +\n                        ambientSH[4] * n.x * n.z +\n                        ambientSH[5] * n.z * n.y +\n                        ambientSH[6] * n.y * n.x +\n                        ambientSH[7] * (3.0 * n.z * n.z - 1.0) +\n                        ambientSH[8] * (n.x * n.x - n.y * n.y);\n    dDiffuseLight += processEnvironment(max(color, vec3(0.0)));\n}\n";
pc.shaderChunks.aoSpecOccPS="uniform float material_occludeSpecularIntensity;\nvoid occludeSpecular() {\n    // approximated specular occlusion from AO\n    float specPow = exp2(dGlossiness * 11.0);\n    // http://research.tri-ace.com/Data/cedec2011_RealtimePBR_Implementation_e.pptx\n    float specOcc = saturate(pow(dot(dNormalW, dViewDirW) + dAo, 0.01*specPow) - 1.0 + dAo);\n    specOcc = mix(1.0, specOcc, material_occludeSpecularIntensity);\n    dSpecularLight *= specOcc;\n    dReflection *= specOcc;\n}\n";
pc.shaderChunks.aoSpecOccConstPS="void occludeSpecular() {\n    // approximated specular occlusion from AO\n    float specPow = exp2(dGlossiness * 11.0);\n    // http://research.tri-ace.com/Data/cedec2011_RealtimePBR_Implementation_e.pptx\n    float specOcc = saturate(pow(dot(dNormalW, dViewDirW) + dAo, 0.01*specPow) - 1.0 + dAo);\n    dSpecularLight *= specOcc;\n    dReflection *= specOcc;\n}\n";pc.shaderChunks.aoSpecOccConstSimplePS="void occludeSpecular() {\n    float specOcc = dAo;\n    dSpecularLight *= specOcc;\n    dReflection *= specOcc;\n}\n";
pc.shaderChunks.aoSpecOccSimplePS="uniform float material_occludeSpecularIntensity;\nvoid occludeSpecular() {\n    float specOcc = mix(1.0, dAo, material_occludeSpecularIntensity);\n    dSpecularLight *= specOcc;\n    dReflection *= specOcc;\n}\n";pc.shaderChunks.aoTexPS="uniform sampler2D texture_aoMap;\nvoid applyAO() {\n    dAo = texture2D(texture_aoMap, $UV).$CH;\n    dDiffuseLight *= dAo;\n}\n";pc.shaderChunks.aoVertPS="void applyAO() {\n    dAo = saturate(vVertexColor.$CH);\n    dDiffuseLight *= dAo;\n}\n";
pc.shaderChunks.bakeDirLmEndPS="\n    vec4 dirLm = texture2D(texture_dirLightMap, vUv1);\n    if (bakeDir > 0.5) {\n        if (dAtten > 0.00001) {\n            dirLm.xyz = dirLm.xyz * 2.0 - vec3(1.0);\n            dAtten = saturate(dAtten);\n            gl_FragColor.rgb = normalize(dLightDirNormW.xyz*dAtten + dirLm.xyz*dirLm.w) * 0.5 + vec3(0.5);\n            gl_FragColor.a = dirLm.w + dAtten;\n            gl_FragColor.a = max(gl_FragColor.a, 1.0 / 255.0);\n        } else {\n            gl_FragColor = dirLm;\n        }\n    } else {\n        gl_FragColor.rgb = dirLm.xyz;\n        gl_FragColor.a = max(dirLm.w, dAtten > 0.00001? (1.0/255.0) : 0.0);\n    }\n";
pc.shaderChunks.bakeLmEndPS="\ngl_FragColor.rgb = dDiffuseLight;\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(0.5));\ngl_FragColor.rgb /= 8.0;\ngl_FragColor.a = clamp( max( max( gl_FragColor.r, gl_FragColor.g ), max( gl_FragColor.b, 1.0 / 255.0 ) ), 0.0,1.0 );\ngl_FragColor.a = ceil(gl_FragColor.a * 255.0) / 255.0;\ngl_FragColor.rgb /= gl_FragColor.a;\n";pc.shaderChunks.basePS="\nuniform vec3 view_position;\nuniform vec3 light_globalAmbient;\nfloat square(float x) {\n    return x*x;\n}\nfloat saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n    return clamp(x, vec3(0.0), vec3(1.0));\n}\n";
pc.shaderChunks.baseVS="\nattribute vec3 vertex_position;\nattribute vec3 vertex_normal;\nattribute vec4 vertex_tangent;\nattribute vec2 vertex_texCoord0;\nattribute vec2 vertex_texCoord1;\nattribute vec4 vertex_color;\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat3 matrix_normal;\nvec3 dPositionW;\nmat4 dModelMatrix;\nmat3 dNormalMatrix;\nvec3 dLightPosW;\nvec3 dLightDirNormW;\nvec3 dNormalW;\n";pc.shaderChunks.biasConstPS="#define SHADOWBIAS\nfloat getShadowBias(float resolution, float maxBias) {\n    return maxBias;\n}\n";
pc.shaderChunks.blurVSMPS="\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\n#ifdef GAUSS\nuniform float weight[SAMPLES];\n#endif\n#ifdef PACKED\nfloat decodeFloatRG(vec2 rg) {\n    return rg.y*(1.0/255.0) + rg.x;\n}\nvec2 encodeFloatRG( float v ) {\n  vec2 enc = vec2(1.0, 255.0) * v;\n  enc = fract(enc);\n  enc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n  return enc;\n}\n#endif\nvoid main(void) {\n    vec3 moments = vec3(0.0);\n    vec2 uv = vUv0 - pixelOffset * (float(SAMPLES) * 0.5);\n    for(int i=0; i<SAMPLES; i++) {\n        vec4 c = texture2D(source, uv + pixelOffset * float(i));\n        #ifdef PACKED\n        c.xy = vec2(decodeFloatRG(c.xy), decodeFloatRG(c.zw));\n        #endif\n        #ifdef GAUSS\n        moments += c.xyz * weight[i];\n        #else\n        moments += c.xyz;\n        #endif\n    }\n    #ifndef GAUSS\n    moments /= float(SAMPLES);\n    #endif\n    #ifdef PACKED\n    gl_FragColor = vec4(encodeFloatRG(moments.x), encodeFloatRG(moments.y));\n    #else\n    gl_FragColor = vec4(moments.x, moments.y, moments.z, 1.0);\n    #endif\n}\n";
pc.shaderChunks.combineDiffusePS="vec3 combineColor() {\n    return dAlbedo * dDiffuseLight;\n}\n";pc.shaderChunks.combineDiffuseSpecularPS="vec3 combineColor() {\n    return mix(dAlbedo * dDiffuseLight, dSpecularLight + dReflection.rgb * dReflection.a, dSpecularity);\n}\n";pc.shaderChunks.combineDiffuseSpecularNoConservePS="vec3 combineColor() {\n    return dAlbedo * dDiffuseLight + (dSpecularLight + dReflection.rgb * dReflection.a) * dSpecularity;\n}\n";
pc.shaderChunks.combineDiffuseSpecularNoReflPS="vec3 combineColor() {\n    return dAlbedo * dDiffuseLight + dSpecularLight * dSpecularity;\n}\n";pc.shaderChunks.combineDiffuseSpecularNoReflSeparateAmbientPS="uniform vec3 material_ambient;\nvec3 combineColor() {\n    return (dDiffuseLight - light_globalAmbient) * dAlbedo + dSpecularLight * dSpecularity + material_ambient * light_globalAmbient;\n}\n";pc.shaderChunks.combineDiffuseSpecularOldPS="vec3 combineColor() {\n    return mix(dAlbedo * dDiffuseLight + dSpecularLight * dSpecularity, dReflection.rgb, dReflection.a);\n}\n";
pc.shaderChunks.cookiePS="vec4 getCookie2D(sampler2D tex, mat4 transform, float intensity) {\n    vec4 projPos = transform * vec4(vPositionW, 1.0);\n    projPos.xy /= projPos.w;\n    return mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DClip(sampler2D tex, mat4 transform, float intensity) {\n    vec4 projPos = transform * vec4(vPositionW, 1.0);\n    projPos.xy /= projPos.w;\n    if (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n    return mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n    vec4 projPos = transform * vec4(vPositionW, 1.0);\n    projPos.xy /= projPos.w;\n    projPos.xy += cookieOffset;\n    vec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n    return mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookie2DClipXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n    vec4 projPos = transform * vec4(vPositionW, 1.0);\n    projPos.xy /= projPos.w;\n    projPos.xy += cookieOffset;\n    if (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n    vec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n    return mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookieCube(samplerCube tex, mat4 transform, float intensity) {\n    return mix(vec4(1.0), textureCube(tex, dLightDirNormW * mat3(transform)), intensity);\n}\n";
pc.shaderChunks.cubeMapProjectBoxPS="uniform vec3 envBoxMin, envBoxMax;\nvec3 cubeMapProject(vec3 nrdir) {\n    vec3 rbmax = (envBoxMax - vPositionW) / nrdir;\n    vec3 rbmin = (envBoxMin - vPositionW) / nrdir;\n    vec3 rbminmax;\n    rbminmax.x = nrdir.x>0.0? rbmax.x : rbmin.x;\n    rbminmax.y = nrdir.y>0.0? rbmax.y : rbmin.y;\n    rbminmax.z = nrdir.z>0.0? rbmax.z : rbmin.z;\n    float fa = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\n    vec3 posonbox = vPositionW + nrdir * fa;\n    vec3 envBoxPos = (envBoxMin + envBoxMax) * 0.5;\n    return posonbox - envBoxPos;\n}\n";
pc.shaderChunks.cubeMapProjectNonePS="vec3 cubeMapProject(vec3 dir) {\n    return dir;\n}\n";pc.shaderChunks.diffuseConstPS="uniform vec3 material_diffuse;\nvoid getAlbedo() {\n    dAlbedo = material_diffuse.rgb;\n}\n";pc.shaderChunks.diffuseTexPS="uniform sampler2D texture_diffuseMap;\nvoid getAlbedo() {\n    dAlbedo = texture2DSRGB(texture_diffuseMap, $UV).$CH;\n}\n";pc.shaderChunks.diffuseTexConstPS="uniform sampler2D texture_diffuseMap;\nuniform vec3 material_diffuse;\nvoid getAlbedo() {\n    dAlbedo = texture2DSRGB(texture_diffuseMap, $UV).$CH * material_diffuse;\n}\n";
pc.shaderChunks.diffuseVertPS="void getAlbedo() {\n    dAlbedo = gammaCorrectInput(saturate(vVertexColor.$CH));\n}\n";pc.shaderChunks.diffuseVertConstPS="uniform vec3 material_diffuse;\nvoid getAlbedo() {\n    dAlbedo = gammaCorrectInput(saturate(vVertexColor.$CH)) * material_diffuse;\n}\n";pc.shaderChunks.dilatePS="varying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nvoid main(void) {\n    vec4 c = texture2D(source, vUv0);\n    c = c.a>0.0? c : texture2D(source, vUv0 - pixelOffset);\n    c = c.a>0.0? c : texture2D(source, vUv0 + vec2(0, -pixelOffset.y));\n    c = c.a>0.0? c : texture2D(source, vUv0 + vec2(pixelOffset.x, -pixelOffset.y));\n    c = c.a>0.0? c : texture2D(source, vUv0 + vec2(-pixelOffset.x, 0));\n    c = c.a>0.0? c : texture2D(source, vUv0 + vec2(pixelOffset.x, 0));\n    c = c.a>0.0? c : texture2D(source, vUv0 + vec2(-pixelOffset.x, pixelOffset.y));\n    c = c.a>0.0? c : texture2D(source, vUv0 + vec2(0, pixelOffset.y));\n    c = c.a>0.0? c : texture2D(source, vUv0 + pixelOffset);\n    gl_FragColor = c;\n}\n";
pc.shaderChunks.dpAtlasQuadPS="varying vec2 vUv0;\nuniform sampler2D source;\nuniform vec4 params;\nvoid main(void) {\n    vec2 uv = vUv0;\n    uv = uv * 2.0 - vec2(1.0);\n    uv *= params.xy;\n    uv = uv * 0.5 + 0.5;\n    gl_FragColor = texture2D(source, uv);\n}\n";pc.shaderChunks.emissiveConstPS="uniform vec3 material_emissive;\nvec3 getEmission() {\n    return material_emissive;\n}\n";pc.shaderChunks.emissiveTexPS="uniform sampler2D texture_emissiveMap;\nvec3 getEmission() {\n    return $texture2DSAMPLE(texture_emissiveMap, $UV).$CH;\n}\n";
pc.shaderChunks.emissiveTexConstPS="uniform sampler2D texture_emissiveMap;\nuniform vec3 material_emissive;\nvec3 getEmission() {\n    return $texture2DSAMPLE(texture_emissiveMap, $UV).$CH * material_emissive;\n}\n";pc.shaderChunks.emissiveTexConstFloatPS="uniform sampler2D texture_emissiveMap;\nuniform float material_emissiveIntensity;\nvec3 getEmission() {\n    return $texture2DSAMPLE(texture_emissiveMap, $UV).$CH * material_emissiveIntensity;\n}\n";pc.shaderChunks.emissiveVertPS="vec3 getEmission() {\n    return gammaCorrectInput(saturate(vVertexColor.$CH));\n}\n";
pc.shaderChunks.emissiveVertConstPS="uniform vec3 material_emissive;\nvec3 getEmission() {\n    return gammaCorrectInput(saturate(vVertexColor.$CH)) * material_emissive;\n}\n";pc.shaderChunks.emissiveVertConstFloatPS="uniform float material_emissiveIntensity;\nvec3 getEmission() {\n    return gammaCorrectInput(saturate(vVertexColor.$CH)) * material_emissiveIntensity;\n}\n";pc.shaderChunks.endPS="   gl_FragColor.rgb = combineColor();\n   gl_FragColor.rgb += getEmission();\n   gl_FragColor.rgb = addFog(gl_FragColor.rgb);\n   #ifndef HDR\n    gl_FragColor.rgb = toneMap(gl_FragColor.rgb);\n    gl_FragColor.rgb = gammaCorrectOutput(gl_FragColor.rgb);\n   #endif\n";
pc.shaderChunks.envConstPS="vec3 processEnvironment(vec3 color) {\n    return color;\n}\n";pc.shaderChunks.envMultiplyPS="uniform float skyboxIntensity;\nvec3 processEnvironment(vec3 color) {\n    return color * skyboxIntensity;\n}\n";pc.shaderChunks.extensionPS="";pc.shaderChunks.extensionVS="\n";pc.shaderChunks.falloffInvSquaredPS="float getFalloffInvSquared(float lightRadius) {\n    float sqrDist = dot(dLightDirW, dLightDirW);\n    float falloff = 1.0 / (sqrDist + 1.0);\n    float invRadius = 1.0 / lightRadius;\n    falloff *= 16.0;\n    falloff *= square( saturate( 1.0 - square( sqrDist * square(invRadius) ) ) );\n    return falloff;\n}\n";
pc.shaderChunks.falloffLinearPS="float getFalloffLinear(float lightRadius) {\n    float d = length(dLightDirW);\n    return max(((lightRadius - d) / lightRadius), 0.0);\n}\n";pc.shaderChunks.fixCubemapSeamsNonePS="vec3 fixSeams(vec3 vec, float mipmapIndex) {\n    return vec;\n}\nvec3 fixSeams(vec3 vec) {\n    return vec;\n}\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n    return vec;\n}\n";pc.shaderChunks.fixCubemapSeamsStretchPS="vec3 fixSeams(vec3 vec, float mipmapIndex) {\n    float scale = 1.0 - exp2(mipmapIndex) / 128.0;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\nvec3 fixSeams(vec3 vec) {\n    float scale = 1.0 - 1.0 / 128.0;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n    float scale = invRecMipSize;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\n";
pc.shaderChunks.fogExpPS="uniform vec3 fog_color;\nuniform float fog_density;\nvec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    float fogFactor = exp(-depth * fog_density);\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    return mix(fog_color, color, fogFactor);\n}\n";pc.shaderChunks.fogExp2PS="uniform vec3 fog_color;\nuniform float fog_density;\nvec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    float fogFactor = exp(-depth * depth * fog_density * fog_density);\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    return mix(fog_color, color, fogFactor);\n}\n";
pc.shaderChunks.fogLinearPS="uniform vec3 fog_color;\nuniform float fog_start;\nuniform float fog_end;\nvec3 addFog(vec3 color) {\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    float fogFactor = (fog_end - depth) / (fog_end - fog_start);\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n    fogFactor = gammaCorrectInput(fogFactor);\n    return mix(fog_color, color, fogFactor);\n}\n";pc.shaderChunks.fogNonePS="vec3 addFog(vec3 color) {\n    return color;\n}\n";
pc.shaderChunks.fresnelSchlickPS="// Schlick's approximation\nuniform float material_fresnelFactor; // unused\nvoid getFresnel() {\n    float fresnel = 1.0 - max(dot(dNormalW, dViewDirW), 0.0);\n    float fresnel2 = fresnel * fresnel;\n    fresnel *= fresnel2 * fresnel2;\n    fresnel *= dGlossiness * dGlossiness;\n    dSpecularity = dSpecularity + (1.0 - dSpecularity) * fresnel;\n}\n";pc.shaderChunks.fullscreenQuadPS="varying vec2 vUv0;\nuniform sampler2D source;\nvoid main(void) {\n    gl_FragColor = texture2D(source, vUv0);\n}\n";
pc.shaderChunks.fullscreenQuadVS="attribute vec2 vertex_position;\nvarying vec2 vUv0;\nvoid main(void)\n{\n    gl_Position = vec4(vertex_position, 0.5, 1.0);\n    vUv0 = vertex_position.xy*0.5+0.5;\n}\n";pc.shaderChunks.gamma1_0PS="vec4 texture2DSRGB(sampler2D tex, vec2 uv) {\n    return texture2D(tex, uv);\n}\nvec4 textureCubeSRGB(samplerCube tex, vec3 uvw) {\n    return textureCube(tex, uvw);\n}\nvec3 gammaCorrectOutput(vec3 color) {\n    return color;\n}\nvec3 gammaCorrectInput(vec3 color) {\n    return color;\n}\nfloat gammaCorrectInput(float color) {\n    return color;\n}\nvec4 gammaCorrectInput(vec4 color) {\n    return color;\n}\n";
pc.shaderChunks.gamma2_2PS="vec3 gammaCorrectInput(vec3 color) {\n    return pow(color, vec3(2.2));\n}\nfloat gammaCorrectInput(float color) {\n    return pow(color, 2.2);\n}\nvec4 gammaCorrectInput(vec4 color) {\n    return vec4(pow(color.rgb, vec3(2.2)), color.a);\n}\nvec4 texture2DSRGB(sampler2D tex, vec2 uv) {\n    vec4 rgba = texture2D(tex, uv);\n    rgba.rgb = gammaCorrectInput(rgba.rgb);\n    return rgba;\n}\nvec4 textureCubeSRGB(samplerCube tex, vec3 uvw) {\n    vec4 rgba = textureCube(tex, uvw);\n    rgba.rgb = gammaCorrectInput(rgba.rgb);\n    return rgba;\n}\nvec3 gammaCorrectOutput(vec3 color) {\n#ifdef HDR\n    return color;\n#else\n    color += vec3(0.0000001);\n    return pow(color, vec3(0.45));\n#endif\n}\n";
pc.shaderChunks.genParaboloidPS="varying vec2 vUv0;\nuniform samplerCube source;\nuniform vec4 params; // x = mip\nvoid main(void) {\n    vec2 uv = vUv0;\n    float side = uv.x < 0.5? 1.0 : -1.0;\n    vec2 tc;\n    tc.x = fract(uv.x * 2.0) * 2.0 - 1.0;\n    tc.y = uv.y * 2.0 - 1.0;\n    // scale projection a bit to have a little overlap for filtering\n    const float scale = 1.1;\n    tc *= scale;\n    vec3 dir;\n    dir.y = (dot(tc, tc) - 1.0) * side; // from 1.0 center to 0.0 borders quadratically\n    dir.xz = tc * -2.0;\n    dir.x *= -side * params.y; // flip original cubemap x instead of doing it at runtime\n    dir = fixSeams(dir, params.x);\n    vec4 color = textureCube(source, dir, -100.0);\n    gl_FragColor = color;\n}\n";
pc.shaderChunks.gles3PS="#define varying in\nout highp vec4 pc_fragColor;\n#define gl_FragColor pc_fragColor\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad\n#define GL2\n";pc.shaderChunks.gles3VS="#define attribute in\n#define varying out\n#define texture2D texture\n#define GL2\n";
pc.shaderChunks.glossConstPS="uniform float material_shininess;\nvoid getGlossiness() {\n    dGlossiness = material_shininess + 0.0000001;\n}\n";pc.shaderChunks.glossTexPS="uniform sampler2D texture_glossMap;\nvoid getGlossiness() {\n    dGlossiness = texture2D(texture_glossMap, $UV).$CH + 0.0000001;\n}\n";pc.shaderChunks.glossTexConstPS="uniform sampler2D texture_glossMap;\nuniform float material_shininess;\nvoid getGlossiness() {\n    dGlossiness = material_shininess * texture2D(texture_glossMap, $UV).$CH + 0.0000001;\n}\n";
pc.shaderChunks.glossVertPS="void getGlossiness() {\n    dGlossiness = saturate(vVertexColor.$CH) + 0.0000001;\n}\n";pc.shaderChunks.glossVertConstPS="uniform float material_shininess;\nvoid getGlossiness() {\n    dGlossiness = material_shininess * saturate(vVertexColor.$CH) + 0.0000001;\n}\n";pc.shaderChunks.instancingVS="\nattribute vec4 instance_line1;\nattribute vec4 instance_line2;\nattribute vec4 instance_line3;\nattribute vec4 instance_line4;\n";pc.shaderChunks.lightDiffuseLambertPS="float getLightDiffuse() {\n    return max(dot(dNormalW, -dLightDirNormW), 0.0);\n}\n";
pc.shaderChunks.lightDirPointPS="void getLightDirPoint(vec3 lightPosW) {\n    dLightDirW = vPositionW - lightPosW;\n    dLightDirNormW = normalize(dLightDirW);\n    dLightPosW = lightPosW;\n}\n";pc.shaderChunks.lightSpecularBlinnPS="// Energy-conserving (hopefully) Blinn-Phong\nfloat getLightSpecular() {\n    vec3 h = normalize( -dLightDirNormW + dViewDirW );\n    float nh = max( dot( h, dNormalW ), 0.0 );\n    float specPow = exp2(dGlossiness * 11.0); // glossiness is linear, power is not; 0 - 2048\n    specPow = antiAliasGlossiness(specPow);\n    // Hack: On Mac OS X, calling pow with zero for the exponent generates hideous artifacts so bias up a little\n    specPow = max(specPow, 0.0001);\n    return pow(nh, specPow) * (specPow + 2.0) / 8.0;\n}\n";
pc.shaderChunks.lightSpecularPhongPS="float getLightSpecular() {\n    float specPow = dGlossiness;\n    specPow = antiAliasGlossiness(specPow);\n    // Hack: On Mac OS X, calling pow with zero for the exponent generates hideous artifacts so bias up a little\n    return pow(max(dot(dReflDirW, -dLightDirNormW), 0.0), specPow + 0.0001);\n}\n";pc.shaderChunks.lightmapDirPS="uniform sampler2D texture_lightMap;\nuniform sampler2D texture_dirLightMap;\nvoid addLightMap() {\n    vec3 color = $texture2DSAMPLE(texture_lightMap, $UV).$CH;\n    vec4 dir = texture2D(texture_dirLightMap, $UV);\n    if (dot(dir.xyz,vec3(1.0)) < 0.00001) {\n        dDiffuseLight += color;\n        return;\n    }\n    dLightDirNormW = normalize(dir.xyz * 2.0 - vec3(1.0));\n    float vlight = saturate(dot(dLightDirNormW, -vNormalW));\n    float flight = saturate(dot(dLightDirNormW, -dNormalW));\n    float nlight = (flight / max(vlight,0.01)) * 0.5;\n    dDiffuseLight += color * nlight * 2.0;\n}\nvoid addDirLightMap() {\n    vec4 dir = texture2D(texture_dirLightMap, $UV);\n    if (dot(dir.xyz,vec3(1.0)) < 0.00001) return;\n    vec3 color = $texture2DSAMPLE(texture_lightMap, $UV).$CH;\n    dLightDirNormW = normalize(dir.xyz * 2.0 - vec3(1.0));\n    dSpecularLight += vec3(getLightSpecular()) * color;\n}\n";
pc.shaderChunks.lightmapSinglePS="uniform sampler2D texture_lightMap;\nvoid addLightMap() {\n    dDiffuseLight += $texture2DSAMPLE(texture_lightMap, $UV).$CH;\n}\n";pc.shaderChunks.lightmapSingleVertPS="void addLightMap() {\n    dDiffuseLight += saturate(vVertexColor.$CH);\n}\n";pc.shaderChunks.metalnessPS="void processMetalness(float metalness) {\n    const float dielectricF0 = 0.04;\n    dSpecularity = mix(vec3(dielectricF0), dAlbedo, metalness);\n    dAlbedo *= 1.0 - metalness;\n}\n";
pc.shaderChunks.metalnessConstPS="uniform float material_metalness;\nvoid getSpecularity() {\n    processMetalness(material_metalness);\n}\n";pc.shaderChunks.metalnessTexPS="uniform sampler2D texture_metalnessMap;\nvoid getSpecularity() {\n    processMetalness(texture2D(texture_metalnessMap, $UV).$CH);\n}\n";pc.shaderChunks.metalnessTexConstPS="uniform sampler2D texture_metalnessMap;\nuniform float material_metalness;\nvoid getSpecularity() {\n    processMetalness(texture2D(texture_metalnessMap, $UV).$CH * material_metalness);\n}\n";
pc.shaderChunks.metalnessVertPS="void getSpecularity() {\n    processMetalness(saturate(vVertexColor.$CH));\n}\n";pc.shaderChunks.metalnessVertConstPS="uniform float material_metalness;\nvoid getSpecularity() {\n    processMetalness(saturate(vVertexColor.$CH) * material_metalness);\n}\n";pc.shaderChunks.msdfPS="uniform sampler2D texture_msdfMap;\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nvec4 applyMsdf(vec4 color) {\n    vec3 tsample = texture2D(texture_msdfMap, vUv0).rgb;\n    float distance = median(tsample.r, tsample.g, tsample.b) - 0.5;\n    vec4 msdf;\n    #ifdef GL_OES_standard_derivatives\n    vec4 background = vec4(0.0);\n    float opacity = clamp(distance/fwidth(distance) + 0.5, 0.0, 1.0);\n    msdf = mix(background, color, opacity);\n    if (msdf.a < 0.01) {\n        discard;\n    }\n    #else\n    msdf = color;\n    if (distance < 0.1) {\n        discard;\n    }\n    #endif\n    return msdf;\n}\n";
pc.shaderChunks.normalVS="vec3 getNormal() {\n    dNormalMatrix = matrix_normal;\n    return normalize(dNormalMatrix * vertex_normal);\n}\n";pc.shaderChunks.normalInstancedVS="vec3 getNormal() {\n    dNormalMatrix = mat3(instance_line1.xyz, instance_line2.xyz, instance_line3.xyz);\n    return normalize(dNormalMatrix * vertex_normal);\n}\n";pc.shaderChunks.normalMapPS="uniform sampler2D texture_normalMap;\nuniform float material_bumpiness;\nvoid getNormal() {\n    vec3 normalMap = unpackNormal(texture2D(texture_normalMap, $UV));\n    dNormalMap = normalMap;\n    dNormalW = dTBN * normalMap;\n}\n";
pc.shaderChunks.normalMapFloatPS="uniform sampler2D texture_normalMap;\nuniform float material_bumpiness;\nvoid getNormal() {\n    vec3 normalMap = unpackNormal(texture2D(texture_normalMap, $UV));\n    dNormalMap = normalMap;\n    normalMap = normalize(mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness));\n    dNormalW = dTBN * normalMap;\n}\n";pc.shaderChunks.normalMapFloatTBNfastPS="uniform sampler2D texture_normalMap;\nuniform float material_bumpiness;\nvoid getNormal() {\n    vec3 normalMap = unpackNormal(texture2D(texture_normalMap, $UV));\n    dNormalMap = normalMap;\n    normalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness);\n    dNormalW = normalize(dTBN * normalMap);\n}\n";
pc.shaderChunks.normalSkinnedVS="vec3 getNormal() {\n    dNormalMatrix = mat3(dModelMatrix[0].xyz, dModelMatrix[1].xyz, dModelMatrix[2].xyz);\n    return normalize(dNormalMatrix * vertex_normal);\n}\n";pc.shaderChunks.normalVertexPS="void getNormal() {\n    dNormalW = normalize(vNormalW);\n}\n";pc.shaderChunks.normalXYPS="vec3 unpackNormal(vec4 nmap) {\n    vec3 normal;\n    normal.xy = nmap.wy * 2.0 - 1.0;\n    normal.z = sqrt(1.0 - saturate(dot(normal.xy, normal.xy)));\n    return normal;\n}\n";
pc.shaderChunks.normalXYZPS="vec3 unpackNormal(vec4 nmap) {\n    return nmap.xyz * 2.0 - 1.0;\n}\n";pc.shaderChunks.opacityConstPS="uniform float material_opacity;\nvoid getOpacity() {\n    dAlpha = material_opacity;\n}\n";pc.shaderChunks.opacityTexPS="uniform sampler2D texture_opacityMap;\nvoid getOpacity() {\n    dAlpha = texture2D(texture_opacityMap, $UV).$CH;\n}\n";pc.shaderChunks.opacityTexConstPS="uniform sampler2D texture_opacityMap;\nuniform float material_opacity;\nvoid getOpacity() {\n    dAlpha = texture2D(texture_opacityMap, $UV).$CH * material_opacity;\n}\n";
pc.shaderChunks.opacityVertPS="void getOpacity() {\n    dAlpha = saturate(vVertexColor.$CH);\n}\n";pc.shaderChunks.opacityVertConstPS="uniform float material_opacity;\nvoid getOpacity() {\n    dAlpha = saturate(vVertexColor.$CH) * material_opacity;\n}\n";pc.shaderChunks.outputAlphaPS="gl_FragColor.a = dAlpha;\n";pc.shaderChunks.outputAlphaOpaquePS="gl_FragColor.a = 1.0;\n";pc.shaderChunks.outputAlphaPremulPS="gl_FragColor.rgb *= dAlpha;\ngl_FragColor.a = dAlpha;\n";
pc.shaderChunks.outputCubemapPS="varying vec2 vUv0;\nuniform samplerCube source;\nuniform vec4 params;\nfloat saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\nvec4 encodeRGBM(vec4 color) { // modified RGBM\n    color.rgb = pow(color.rgb, vec3(0.5));\n    color.rgb *= 1.0 / 8.0;\n    color.a = saturate( max( max( color.r, color.g ), max( color.b, 1.0 / 255.0 ) ) );\n    color.a = ceil(color.a * 255.0) / 255.0;\n    color.rgb /= color.a;\n    return color;\n}\nvoid main(void) {\n    vec2 st = vUv0 * 2.0 - 1.0;\n    float face = params.x;\n    vec3 vec;\n    if (face==0.0) {\n        vec = vec3(1, -st.y, -st.x);\n    } else if (face==1.0) {\n        vec = vec3(-1, -st.y, st.x);\n    } else if (face==2.0) {\n        vec = vec3(st.x, 1, st.y);\n    } else if (face==3.0) {\n        vec = vec3(st.x, -1, -st.y);\n    } else if (face==4.0) {\n        vec = vec3(st.x, -st.y, 1);\n    } else {\n        vec = vec3(-st.x, -st.y, -1);\n    }\n    gl_FragColor = textureCube(source, vec);\n    if (params.w >= 2.0) gl_FragColor = encodeRGBM(gl_FragColor);\n}\n";
pc.shaderChunks.packDepthPS="// Packing a float in GLSL with multiplication and mod\n// http://blog.gradientstudios.com/2012/08/23/shadow-map-improvement\nvec4 packFloat(float depth) {\n    const vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n    // combination of mod and multiplication and division works better\n    vec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\n";
pc.shaderChunks.packDepthMaskPS="vec4 packFloat(float depth) {\n    const vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n    // combination of mod and multiplication and division works better\n    vec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n    res.x = 0.0;\n    res -= res.xxyz * bit_mask;\n    return res;\n}\n";pc.shaderChunks.parallaxPS="uniform sampler2D texture_heightMap;\nuniform float material_heightMapFactor;\nvoid getParallax() {\n    float parallaxScale = material_heightMapFactor;\n    float height = texture2D(texture_heightMap, $UV).$CH;\n    height = height * parallaxScale - parallaxScale*0.5;\n    vec3 viewDirT = dViewDirW * dTBN;\n    viewDirT.z += 0.42;\n    dUvOffset = height * (viewDirT.xy / viewDirT.z);\n}\n";
pc.shaderChunks.particlePS="varying vec4 texCoordsAlphaLife;\nuniform sampler2D colorMap;\nuniform sampler2D internalTex3;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nuniform float camera_far;\nuniform float softening;\nuniform float colorMult;\nfloat saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\nfloat unpackFloat(vec4 rgbaDepth) {\n    const vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n    float depth = dot(rgbaDepth, bitShift);\n    return depth;\n}\nvoid main(void) {\n    vec4 tex         = texture2DSRGB(colorMap, texCoordsAlphaLife.xy);\n    vec4 ramp     = texture2DSRGB(internalTex3, vec2(texCoordsAlphaLife.w, 0.0));\n    ramp.rgb *= colorMult;\n    ramp.a += texCoordsAlphaLife.z;\n    vec3 rgb =     tex.rgb * ramp.rgb;\n    float a =         tex.a * ramp.a;\n";
pc.shaderChunks.particleVS="\nvec3 unpack3NFloats(float src) {\n    float r = fract(src);\n    float g = fract(src * 256.0);\n    float b = fract(src * 65536.0);\n    return vec3(r, g, b);\n}\nfloat saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\nvec4 tex1Dlod_lerp(sampler2D tex, vec2 tc) {\n    return mix( texture2D(tex,tc), texture2D(tex,tc + graphSampleSize), fract(tc.x*graphNumSamples) );\n}\nvec4 tex1Dlod_lerp(sampler2D tex, vec2 tc, out vec3 w) {\n    vec4 a = texture2D(tex,tc);\n    vec4 b = texture2D(tex,tc + graphSampleSize);\n    float c = fract(tc.x*graphNumSamples);\n    vec3 unpackedA = unpack3NFloats(a.w);\n    vec3 unpackedB = unpack3NFloats(b.w);\n    w = mix(unpackedA, unpackedB, c);\n    return mix(a, b, c);\n}\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix) {\n    float c = cos(pRotation);\n    float s = sin(pRotation);\n    mat2 m = mat2(c, -s, s, c);\n    rotMatrix = m;\n    return m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY) {\n    vec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n    return pos;\n}\nvoid main(void) {\n    vec3 meshLocalPos = particle_vertexData.xyz;\n    float id = floor(particle_vertexData.w);\n    float rndFactor = fract(sin(id + 1.0 + seed));\n    vec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n    float uv = id / numParticlesPot;\n    readInput(uv);\n    vec2 velocityV = normalize((mat3(matrix_view) * inVel).xy); // should be removed by compiler if align/stretch is not used\n    float particleLifetime = lifetime;\n    if (inLife <= 0.0 || inLife > particleLifetime || !inShow) meshLocalPos = vec3(0.0);\n    vec2 quadXY = meshLocalPos.xy;\n    float nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\n    vec3 paramDiv;\n    vec4 params = tex1Dlod_lerp(internalTex2, vec2(nlife, 0), paramDiv);\n    float scale = params.y;\n    float scaleDiv = paramDiv.x;\n    float alphaDiv = paramDiv.z;\n    scale += (scaleDiv * 2.0 - 1.0) * scaleDivMult * fract(rndFactor*10000.0);\n    texCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5,    (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0),    nlife);\n    vec3 particlePos = inPos;\n    vec3 particlePosMoved = vec3(0.0);\n    mat2 rotMatrix;\n";
pc.shaderChunks.particleAnimFrameClampVS="\n    float animFrame = min(floor(texCoordsAlphaLife.w * animTexParams.z), animTexParams.w);\n";pc.shaderChunks.particleAnimFrameLoopVS="\n    float animFrame = floor(texCoordsAlphaLife.w * animTexParams.z);\n";pc.shaderChunks.particleAnimTexVS="\n    float atlasX = animFrame * animTexParams.x;\n    float atlasY = floor(atlasX) * animTexParams.y;\n    atlasX = fract(atlasX);\n    texCoordsAlphaLife.xy *= animTexParams.xy;\n    texCoordsAlphaLife.xy += vec2(atlasX, atlasY);\n    texCoordsAlphaLife.y = 1.0 - texCoordsAlphaLife.y;\n";
pc.shaderChunks.particleInputFloatPS="void readInput(float uv) {\n    vec4 tex = texture2D(particleTexIN, vec2(uv, 0.25));\n    vec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.75));\n    inPos = tex.xyz;\n    inVel = tex2.xyz;\n    inAngle = (tex.w < 0.0? -tex.w : tex.w) - 1000.0;\n    inShow = tex.w >= 0.0;\n    inLife = tex2.w;\n}\n";pc.shaderChunks.particleInputRgba8PS="//RG=X, BA=Y\n//RG=Z, BA=A\n//RGB=V, A=visMode\n//RGBA=life\n#define PI2 6.283185307179586\nuniform vec3 inBoundsSize;\nuniform vec3 inBoundsCenter;\nuniform float maxVel;\nfloat decodeFloatRG(vec2 rg) {\n    return rg.y*(1.0/255.0) + rg.x;\n}\nfloat decodeFloatRGBA( vec4 rgba ) {\n  return dot( rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/160581375.0) );\n}\nvoid readInput(float uv) {\n    vec4 tex0 = texture2D(particleTexIN, vec2(uv, 0.125));\n    vec4 tex1 = texture2D(particleTexIN, vec2(uv, 0.375));\n    vec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.625));\n    vec4 tex3 = texture2D(particleTexIN, vec2(uv, 0.875));\n    inPos = vec3(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\n    inPos = (inPos - vec3(0.5)) * inBoundsSize + inBoundsCenter;\n    inVel = tex2.xyz;\n    inVel = (inVel - vec3(0.5)) * maxVel;\n    inAngle = decodeFloatRG(tex1.ba) * PI2;\n    inShow = tex2.a > 0.5;\n    inLife = decodeFloatRGBA(tex3);\n    float maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n    float maxPosLife = lifetime+1.0;\n    inLife = inLife * (maxNegLife + maxPosLife) - maxNegLife;\n}\n";
pc.shaderChunks.particleOutputFloatPS="void writeOutput() {\n    if (gl_FragCoord.y<1.0) {\n        gl_FragColor = vec4(outPos, (outAngle + 1000.0) * visMode);\n    } else {\n        gl_FragColor = vec4(outVel, outLife);\n    }\n}\n";pc.shaderChunks.particleOutputRgba8PS="uniform vec3 outBoundsMul;\nuniform vec3 outBoundsAdd;\nvec2 encodeFloatRG( float v ) {\n  vec2 enc = vec2(1.0, 255.0) * v;\n  enc = fract(enc);\n  enc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n  return enc;\n}\nvec4 encodeFloatRGBA( float v ) {\n  vec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;\n  enc = fract(enc);\n  enc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n  return enc;\n}\nvoid writeOutput() {\n    //outPos = (outPos - outBoundsCenter) / outBoundsSize + vec3(0.5);\n    outPos = outPos * outBoundsMul + outBoundsAdd;\n    outAngle = fract(outAngle / PI2);\n    outVel = (outVel / maxVel) + vec3(0.5); // TODO: mul\n    float maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n    float maxPosLife = lifetime+1.0;\n    outLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n    if (gl_FragCoord.y < 1.0) {\n        gl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n    } else if (gl_FragCoord.y < 2.0) {\n        gl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n    } else if (gl_FragCoord.y < 3.0) {\n        gl_FragColor = vec4(outVel, visMode*0.5+0.5);\n    } else {\n        gl_FragColor = encodeFloatRGBA(outLife);\n    }\n}\n";
pc.shaderChunks.particleUpdaterAABBPS="uniform mat3 spawnBounds;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n    return emitterPos + spawnBounds * (inBounds - vec3(0.5));\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n    localVelocity -= vec3(0, 0, initialVelocity);\n}\n";pc.shaderChunks.particleUpdaterEndPS="\n    writeOutput();\n}\n";pc.shaderChunks.particleUpdaterInitPS="varying vec2 vUv0;\nuniform sampler2D particleTexIN;\nuniform sampler2D internalTex0;\nuniform sampler2D internalTex1;\nuniform sampler2D internalTex2;\nuniform mat3 emitterMatrix;\nuniform vec3 emitterScale;\nuniform vec3 emitterPos, frameRandom, localVelocityDivMult, velocityDivMult;\nuniform float delta, rate, rateDiv, lifetime, numParticles, rotSpeedDivMult, seed;\nuniform float startAngle, startAngle2;\nuniform float initialVelocity;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\nfloat visMode;\nvec3 outPos;\nvec3 outVel;\nfloat outAngle;\nbool outShow;\nfloat outLife;\n";
pc.shaderChunks.particleUpdaterNoRespawnPS="    if (outLife >= lifetime) {\n        outLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n        visMode = -1.0;\n    }\n";pc.shaderChunks.particleUpdaterOnStopPS="    visMode = outLife < 0.0? -1.0: visMode;\n";pc.shaderChunks.particleUpdaterRespawnPS="    if (outLife >= lifetime) {\n        outLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n        visMode = 1.0;\n    }\n    visMode = outLife < 0.0? 1.0: visMode;\n";
pc.shaderChunks.particleUpdaterSpherePS="uniform float spawnBoundsSphere;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n    float rnd4 = fract(rndFactor * 1000.0);\n    return emitterPos + normalize(inBounds.xyz - vec3(0.5)) * rnd4 * spawnBoundsSphere;\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n    localVelocity += normalize(inBounds - vec3(0.5)) * initialVelocity;\n}\n";pc.shaderChunks.particleUpdaterStartPS="float saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\nvec3 unpack3NFloats(float src) {\n    float r = fract(src);\n    float g = fract(src * 256.0);\n    float b = fract(src * 65536.0);\n    return vec3(r, g, b);\n}\nvec3 tex1Dlod_lerp(sampler2D tex, vec2 tc, out vec3 w) {\n    vec4 a = texture2D(tex, tc);\n    vec4 b = texture2D(tex, tc + graphSampleSize);\n    float c = fract(tc.x * graphNumSamples);\n    vec3 unpackedA = unpack3NFloats(a.w);\n    vec3 unpackedB = unpack3NFloats(b.w);\n    w = mix(unpackedA, unpackedB, c);\n    return mix(a.xyz, b.xyz, c);\n}\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\nvec4 hash41(float p) {\n    vec4 p4 = fract(vec4(p) * HASHSCALE4);\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract(vec4((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\n}\nvoid main(void)\n{\n    if (gl_FragCoord.x > numParticles) discard;\n    readInput(vUv0.x);\n    visMode = inShow? 1.0 : -1.0;\n    vec4 rndFactor = hash41(gl_FragCoord.x + seed);\n    float particleRate = rate + rateDiv * rndFactor.x;\n    outLife = inLife + delta;\n    float nlife = clamp(outLife / lifetime, 0.0, 1.0);\n    vec3 localVelocityDiv;\n    vec3 velocityDiv;\n    vec3 paramDiv;\n    vec3 localVelocity = tex1Dlod_lerp(internalTex0, vec2(nlife, 0), localVelocityDiv);\n    vec3 velocity =      tex1Dlod_lerp(internalTex1, vec2(nlife, 0), velocityDiv);\n    vec3 params =        tex1Dlod_lerp(internalTex2, vec2(nlife, 0), paramDiv);\n    float rotSpeed = params.x;\n    float rotSpeedDiv = paramDiv.y;\n    localVelocity +=    (localVelocityDiv * vec3(2.0) - vec3(1.0)) * localVelocityDivMult * rndFactor.xyz;\n    velocity +=         (velocityDiv * vec3(2.0) - vec3(1.0)) * velocityDivMult * rndFactor.xyz;\n    rotSpeed +=         (rotSpeedDiv * 2.0 - 1.0) * rotSpeedDivMult * rndFactor.y;\n    addInitialVelocity(localVelocity, rndFactor.xyz);\n    outVel = emitterMatrix * localVelocity.xyz + velocity.xyz * emitterScale;\n    outPos = inPos + outVel * delta;\n    outAngle = inAngle + rotSpeed * delta;\n    bool respawn = outLife <= 0.0 || outLife >= lifetime;\n    outPos = respawn? calcSpawnPosition(rndFactor.xyz, rndFactor.x) : outPos;\n    outAngle = respawn? mix(startAngle, startAngle2, rndFactor.x) : outAngle;\n    outVel = respawn? vec3(0.0) : outVel;\n";
pc.shaderChunks.particle_TBNVS="\n    mat3 rot3 = mat3(rotMatrix[0][0], rotMatrix[0][1], 0.0,        rotMatrix[1][0], rotMatrix[1][1], 0.0,        0.0, 0.0, 1.0);\n    ParticleMat = mat3(-matrix_viewInverse[0].xyz, -matrix_viewInverse[1].xyz, matrix_viewInverse[2].xyz) * rot3;\n";pc.shaderChunks.particle_billboardVS="\n    quadXY = rotate(quadXY, inAngle, rotMatrix);\n    vec3 localPos = billboard(particlePos, quadXY);\n";pc.shaderChunks.particle_blendAddPS="\n    rgb *= saturate(gammaCorrectInput(a));\n    if ((rgb.r + rgb.g + rgb.b) < 0.000001) discard;\n";
pc.shaderChunks.particle_blendMultiplyPS="\n    rgb = mix(vec3(1.0), rgb, vec3(a));\n    if (rgb.r + rgb.g + rgb.b > 2.99) discard;\n";pc.shaderChunks.particle_blendNormalPS="\n    if (a < 0.01) discard;\n";pc.shaderChunks.particle_cpuVS="attribute vec4 particle_vertexData;     // XYZ = world pos, W = life\nattribute vec4 particle_vertexData2;     // X = angle, Y = scale, Z = alpha, W = velocity.x\nattribute vec4 particle_vertexData3;     // XYZ = particle local pos, W = velocity.y\nattribute vec2 particle_vertexData4;     // X = velocity.z, W = particle ID\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat4 matrix_view;\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\nuniform float numParticles;\nuniform float lifetime;\nuniform float stretch;\n//uniform float graphSampleSize;\n//uniform float graphNumSamples;\nuniform vec3 wrapBounds, emitterScale;\nuniform sampler2D texLifeAndSourcePosOUT;\nuniform sampler2D internalTex0;\nuniform sampler2D internalTex1;\nuniform sampler2D internalTex2;\nuniform vec3 emitterPos;\nvarying vec4 texCoordsAlphaLife;\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix)\n{\n    float c = cos(pRotation);\n    float s = sin(pRotation);\n    //vec4 rotationMatrix = vec4(c, -s, s, c);\n    mat2 m = mat2(c, -s, s, c);\n    rotMatrix = m;\n    return m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY)\n{\n    vec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n    return pos;\n}\nvoid main(void)\n{\n    vec3 particlePos = particle_vertexData.xyz;\n    vec3 inPos = particlePos;\n    vec3 vertPos = particle_vertexData3.xyz;\n    vec3 inVel = vec3(particle_vertexData2.w, particle_vertexData3.w, particle_vertexData4.x);\n    vec2 velocityV = normalize((mat3(matrix_view) * inVel).xy); // should be removed by compiler if align/stretch is not used\n    vec2 quadXY = vertPos.xy;\n    texCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, particle_vertexData2.z, particle_vertexData.w);\n    mat2 rotMatrix;\n    float inAngle = particle_vertexData2.x;\n    vec3 particlePosMoved = vec3(0.0);\n    vec3 meshLocalPos = particle_vertexData3.xyz;\n";
pc.shaderChunks.particle_cpu_endVS="\n    localPos *= particle_vertexData2.y * emitterScale;\n    localPos += particlePos;\n    gl_Position = matrix_viewProjection * vec4(localPos, 1.0);\n";pc.shaderChunks.particle_endPS="    rgb = addFog(rgb);\n    rgb = toneMap(rgb);\n    rgb = gammaCorrectOutput(rgb);\n    gl_FragColor = vec4(rgb, a);\n}\n";pc.shaderChunks.particle_endVS="\n    localPos *= scale * emitterScale;\n    localPos += particlePos;\n    gl_Position = matrix_viewProjection * vec4(localPos.xyz, 1.0);\n";
pc.shaderChunks.particle_halflambertPS="\n    vec3 negNormal = normal*0.5+0.5;\n    vec3 posNormal = -normal*0.5+0.5;\n    negNormal *= negNormal;\n    posNormal *= posNormal;\n";pc.shaderChunks.particle_initVS="attribute vec4 particle_vertexData; // XYZ = particle position, W = particle ID + random factor\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\nuniform mat4 matrix_view;\nuniform float numParticles, numParticlesPot;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nuniform float stretch;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale, emitterPos;\nuniform float rate, rateDiv, lifetime, deltaRandomnessStatic, scaleDivMult, alphaDivMult, seed, delta;\nuniform sampler2D particleTexOUT, particleTexIN;\nuniform sampler2D internalTex0;\nuniform sampler2D internalTex1;\nuniform sampler2D internalTex2;\nvarying vec4 texCoordsAlphaLife;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\n";
pc.shaderChunks.particle_lambertPS="\n    vec3 negNormal = max(normal, vec3(0.0));\n    vec3 posNormal = max(-normal, vec3(0.0));\n";pc.shaderChunks.particle_lightingPS="\n    vec3 light = negNormal.x*lightCube[0] + posNormal.x*lightCube[1] +\n                        negNormal.y*lightCube[2] + posNormal.y*lightCube[3] +\n                        negNormal.z*lightCube[4] + posNormal.z*lightCube[5];\n    rgb *= light;\n";pc.shaderChunks.particle_localShiftVS="    particlePos += emitterPos;\n";
pc.shaderChunks.particle_meshVS="\n    vec3 localPos = meshLocalPos;\n    localPos.xy = rotate(localPos.xy, inAngle, rotMatrix);\n    localPos.yz = rotate(localPos.yz, inAngle, rotMatrix);\n    billboard(particlePos, quadXY);\n";pc.shaderChunks.particle_normalVS="\n    Normal = normalize(localPos + matrix_viewInverse[2].xyz);\n";pc.shaderChunks.particle_normalMapPS="\n    vec3 normalMap         = normalize( texture2D(normalMap, texCoordsAlphaLife.xy).xyz * 2.0 - 1.0 );\n    vec3 normal = ParticleMat * normalMap;\n";
pc.shaderChunks.particle_pointAlongVS="    inAngle = atan(velocityV.x, velocityV.y); // not the fastest way, but easier to plug in; TODO: create rot matrix right from vectors\n";pc.shaderChunks.particle_softPS="\n    vec2 screenTC = gl_FragCoord.xy * uScreenSize.zw;\n    float depth = unpackFloat( texture2D(uDepthMap, screenTC) ) * camera_far;\n    float particleDepth = vDepth;\n    float depthDiff = saturate(abs(particleDepth - depth) * softening);\n    a *= depthDiff;\n";
pc.shaderChunks.particle_softVS="\n    vDepth = -(matrix_view * vec4(localPos,1.0)).z;\n";pc.shaderChunks.particle_stretchVS="    vec3 moveDir = inVel * stretch;\n    vec3 posPrev = inPos - moveDir;\n    posPrev += particlePosMoved;\n    vec2 centerToVertexV = normalize((mat3(matrix_view) * localPos).xy);\n    float interpolation = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\n    particlePos = mix(particlePos, posPrev, interpolation);\n";pc.shaderChunks.particle_wrapVS="\n    vec3 origParticlePos = particlePos;\n    particlePos -= matrix_model[3].xyz;\n    particlePos = mod(particlePos, wrapBounds) - wrapBounds * 0.5;\n    particlePos += matrix_model[3].xyz;\n    particlePosMoved = particlePos - origParticlePos;\n";
pc.shaderChunks.precisionTestPS="void main(void) {\n    gl_FragColor = vec4(2147483648.0);\n}\n";pc.shaderChunks.precisionTest2PS="uniform sampler2D source;\nvec4 packFloat(float depth) {\n    const vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n    vec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\nvoid main(void) {\n    float c = texture2D(source, vec2(0.0)).r;\n    float diff = abs(c - 2147483648.0) / 2147483648.0;\n    gl_FragColor = packFloat(diff);\n}\n";
pc.shaderChunks.prefilterCubemapPS="varying vec2 vUv0;\nuniform samplerCube source;\nuniform vec4 params;\nfloat saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\nfloat rnd(vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898, 78.233) * 2.0)) * 43758.5453);\n}\nconst float PI = 3.14159265358979;\nvec3 hemisphereSample_cos(vec2 uv, mat3 vecSpace, vec3 cubeDir, float gloss) { // cos + lerped cone size (better than just lerped)\n    float phi = uv.y * 2.0 * PI;\n    float cosTheta = sqrt(1.0 - uv.x);\n    float sinTheta = sqrt(1.0 - cosTheta * cosTheta);\n    vec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\n    return normalize(mix(vecSpace * sampleDir, cubeDir, params.y));\n}\nvec3 hemisphereSample_phong(vec2 uv, mat3 vecSpace, vec3 cubeDir, float specPow) {\n    float phi = uv.y * 2.0 * PI;\n    float cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\n    float sinTheta = sqrt(1.0 - cosTheta * cosTheta);\n    vec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\n    return vecSpace * sampleDir;\n}\nmat3 matrixFromVector(vec3 n) { // frisvad\n    float a = 1.0 / (1.0 + n.z);\n    float b = -n.x * n.y * a;\n    vec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\n    vec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\n    return mat3(b1, b2, n);\n}\nvec4 encodeRGBM(vec3 color) { // modified RGBM\n    vec4 encoded;\n    encoded.rgb = pow(color.rgb, vec3(0.5));\n    encoded.rgb *= 1.0 / 8.0;\n    encoded.a = saturate( max( max( encoded.r, encoded.g ), max( encoded.b, 1.0 / 255.0 ) ) );\n    encoded.a = ceil(encoded.a * 255.0) / 255.0;\n    encoded.rgb /= encoded.a;\n    return encoded;\n}\nvoid main(void) {\n    vec2 st = vUv0 * 2.0 - 1.0;\n    if (params.w==1.0 || params.w==3.0) {\n        st = 2.0 * floor(gl_FragCoord.xy) / (params.z - 1.0) - 1.0;\n    }\n    float face = params.x;\n    vec3 vec;\n    if (face==0.0) {\n        vec = vec3(1, -st.y, -st.x);\n    } else if (face==1.0) {\n        vec = vec3(-1, -st.y, st.x);\n    } else if (face==2.0) {\n        vec = vec3(st.x, 1, st.y);\n    } else if (face==3.0) {\n        vec = vec3(st.x, -1, -st.y);\n    } else if (face==4.0) {\n        vec = vec3(st.x, -st.y, 1);\n    } else {\n        vec = vec3(-st.x, -st.y, -1);\n    }\n    mat3 vecSpace = matrixFromVector(normalize(vec));\n    vec3 color = vec3(0.0);\n    const int samples = $NUMSAMPLES;\n    vec3 vect;\n    for(int i=0; i<samples; i++) {\n        float sini = sin(float(i));\n        float cosi = cos(float(i));\n        float rand = rnd(vec2(sini, cosi));\n        vect = hemisphereSample_$METHOD(vec2(float(i) / float(samples), rand), vecSpace, vec, params.y);\n        color += $textureCube(source, vect).rgb;\n    }\n    color /= float(samples);\n    gl_FragColor = params.w < 2.0? vec4(color, 1.0) : encodeRGBM(color);\n}\n";
pc.shaderChunks.reflDirPS="void getReflDir() {\n    dReflDirW = normalize(-reflect(dViewDirW, dNormalW));\n}\n";pc.shaderChunks.reflectionCubePS="uniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvoid addReflection() {\n    vec3 lookupVec = fixSeams(cubeMapProject(dReflDirW));\n    lookupVec.x *= -1.0;\n    dReflection += vec4($textureCubeSAMPLE(texture_cubeMap, lookupVec).rgb, material_reflectivity);\n}\n";pc.shaderChunks.reflectionDpAtlasPS="uniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvec2 getDpAtlasUv(vec2 uv, float mip) {\n    vec4 rect;\n    float sx = saturate(mip - 2.0);\n    rect.x = sx * 0.5;\n    float t = mip - rect.x * 6.0;\n    float i = 1.0 - rect.x;\n    rect.y = min(t * 0.5, 0.75) * i + rect.x;\n    float st = saturate(t);\n    rect.z = (1.0 - st * 0.5) * i;\n    rect.w = rect.z * 0.5;\n    float rcRectZ = 1.0 / rect.z;\n    float scaleFactor = 0.00390625 * rcRectZ; // 0.0078125 = (256 + 2) / 256 - 1, 0.00390625 same for 512\n    vec2 scale = vec2(scaleFactor, scaleFactor * 2.0);\n    uv = uv * (vec2(1.0) - scale) + scale * 0.5;\n    uv = uv * rect.zw + rect.xy;\n    return uv;\n}\nvoid addReflection() {\n    vec3 reflDir = normalize(cubeMapProject(dReflDirW));\n    // Convert vector to DP coords\n    bool up = reflDir.y > 0.0;\n    float scale = 0.90909090909090909090909090909091;// 1.0 / 1.1;\n    vec3 reflDirWarp = reflDir.xzx * vec3(-0.25, 0.5, 0.25);\n    float reflDirVer = abs(reflDir.y) + 1.0;\n    reflDirWarp /= reflDirVer;\n    reflDirWarp *= scale;\n    reflDirWarp = vec3(0.75, 0.5, 0.25) - reflDirWarp;\n    vec2 tc = up? reflDirWarp.xy : reflDirWarp.zy;\n    float bias = saturate(1.0 - dGlossiness) * 5.0; // multiply by max mip level\n    float mip = floor(bias);\n    vec3 tex1 = $texture2DSAMPLE(texture_sphereMap, getDpAtlasUv(tc, mip)).rgb;\n    mip = min(mip + 1.0, 5.0);\n    vec3 tex2 = $texture2DSAMPLE(texture_sphereMap, getDpAtlasUv(tc, mip)).rgb;\n    tex1 = mix(tex1, tex2, fract(bias));\n    tex1 = processEnvironment(tex1);\n    dReflection += vec4(tex1, material_reflectivity);\n}\n";
pc.shaderChunks.reflectionPrefilteredCubePS="uniform samplerCube texture_prefilteredCubeMap128;\nuniform samplerCube texture_prefilteredCubeMap64;\nuniform samplerCube texture_prefilteredCubeMap32;\nuniform samplerCube texture_prefilteredCubeMap16;\nuniform samplerCube texture_prefilteredCubeMap8;\nuniform samplerCube texture_prefilteredCubeMap4;\nuniform float material_reflectivity;\nvoid addReflection() {\n    // Unfortunately, WebGL doesn't allow us using textureCubeLod. Therefore bunch of nasty workarounds is required.\n    // We fix mip0 to 128x128, so code is rather static.\n    // Mips smaller than 4x4 aren't great even for diffuse. Don't forget that we don't have bilinear filtering between different faces.\n    float bias = saturate(1.0 - dGlossiness) * 5.0; // multiply by max mip level\n    int index1 = int(bias);\n    int index2 = int(min(bias + 1.0, 7.0));\n    vec3 fixedReflDir = fixSeams(cubeMapProject(dReflDirW), bias);\n    fixedReflDir.x *= -1.0;\n    vec4 cubes[6];\n    cubes[0] = textureCube(texture_prefilteredCubeMap128, fixedReflDir);\n    cubes[1] = textureCube(texture_prefilteredCubeMap64, fixedReflDir);\n    cubes[2] = textureCube(texture_prefilteredCubeMap32, fixedReflDir);\n    cubes[3] = textureCube(texture_prefilteredCubeMap16, fixedReflDir);\n    cubes[4] = textureCube(texture_prefilteredCubeMap8, fixedReflDir);\n    cubes[5] = textureCube(texture_prefilteredCubeMap4, fixedReflDir);\n    // Also we don't have dynamic indexing in PS, so...\n    vec4 cube[2];\n    for(int i = 0; i < 6; i++) {\n        if (i == index1) {\n            cube[0] = cubes[i];\n        }\n        if (i == index2) {\n            cube[1] = cubes[i];\n        }\n    }\n    // another variant\n    /*if (index1==0){ cube[0]=cubes[0];\n    }else if (index1==1){ cube[0]=cubes[1];\n    }else if (index1==2){ cube[0]=cubes[2];\n    }else if (index1==3){ cube[0]=cubes[3];\n    }else if (index1==4){ cube[0]=cubes[4];\n    }else if (index1==5){ cube[0]=cubes[5];}\n    if (index2==0){ cube[1]=cubes[0];\n    }else if (index2==1){ cube[1]=cubes[1];\n    }else if (index2==2){ cube[1]=cubes[2];\n    }else if (index2==3){ cube[1]=cubes[3];\n    }else if (index2==4){ cube[1]=cubes[4];\n    }else if (index2==5){ cube[1]=cubes[5];}*/\n    vec4 cubeFinal = mix(cube[0], cube[1], fract(bias));\n    vec3 refl = processEnvironment($DECODE(cubeFinal).rgb);\n    dReflection += vec4(refl, material_reflectivity);\n}\n";
pc.shaderChunks.reflectionPrefilteredCubeLodPS="#extension GL_EXT_shader_texture_lod : enable\nuniform samplerCube texture_prefilteredCubeMap128;\nuniform float material_reflectivity;\nvoid addReflection() {\n    float bias = saturate(1.0 - dGlossiness) * 5.0; // multiply by max mip level\n    vec3 fixedReflDir = fixSeams(cubeMapProject(dReflDirW), bias);\n    fixedReflDir.x *= -1.0;\n    vec3 refl = processEnvironment($DECODE( textureCubeLodEXT(texture_prefilteredCubeMap128, fixedReflDir, bias) ).rgb);\n    dReflection += vec4(refl, material_reflectivity);\n}\n";
pc.shaderChunks.reflectionSpherePS="uniform mat4 matrix_view;\nuniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvoid addReflection() {\n    vec3 reflDirV = (mat3(matrix_view) * dReflDirW).xyz;\n    float m = 2.0 * sqrt( dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z+1.0)*(reflDirV.z+1.0) );\n    vec2 sphereMapUv = reflDirV.xy / m + 0.5;\n    dReflection += vec4($texture2DSAMPLE(texture_sphereMap, sphereMapUv).rgb, material_reflectivity);\n}\n";
pc.shaderChunks.reflectionSphereLowPS="uniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvoid addReflection() {\n    vec3 reflDirV = vNormalV;\n    vec2 sphereMapUv = reflDirV.xy * 0.5 + 0.5;\n    dReflection += vec4($texture2DSAMPLE(texture_sphereMap, sphereMapUv).rgb, material_reflectivity);\n}\n";pc.shaderChunks.refractionPS="uniform float material_refraction, material_refractionIndex;\nvec3 refract2(vec3 viewVec, vec3 Normal, float IOR) {\n    float vn = dot(viewVec, Normal);\n    float k = 1.0 - IOR * IOR * (1.0 - vn * vn);\n    vec3 refrVec = IOR * viewVec - (IOR * vn + sqrt(k)) * Normal;\n    return refrVec;\n}\nvoid addRefraction() {\n    // use same reflection code with refraction vector\n    vec3 tmp = dReflDirW;\n    vec4 tmp2 = dReflection;\n    dReflection = vec4(0.0);\n    dReflDirW = refract2(-dViewDirW, dNormalW, material_refractionIndex);\n    addReflection();\n    dDiffuseLight = mix(dDiffuseLight, dReflection.rgb * dAlbedo, material_refraction);\n    dReflDirW = tmp;\n    dReflection = tmp2;\n}\n";
pc.shaderChunks.rgbmPS="vec3 decodeRGBM(vec4 rgbm) {\n    vec3 color = (8.0 * rgbm.a) * rgbm.rgb;\n    return color * color;\n}\nvec3 texture2DRGBM(sampler2D tex, vec2 uv) {\n    return decodeRGBM(texture2D(tex, uv));\n}\nvec3 textureCubeRGBM(samplerCube tex, vec3 uvw) {\n    return decodeRGBM(textureCube(tex, uvw));\n}\n";pc.shaderChunks.shadowCommonPS="void normalOffsetPointShadow(vec4 shadowParams) {\n    float distScale = length(dLightDirW);\n    vec3 wPos = vPositionW + vNormalW * shadowParams.y * clamp(1.0 - dot(vNormalW, -dLightDirNormW), 0.0, 1.0) * distScale; //0.02\n    vec3 dir = wPos - dLightPosW;\n    dLightDirW = dir;\n}\n";
pc.shaderChunks.shadowCoordPS="void _getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\n    dShadowCoord = (shadowMatrix * vec4(wPos, 1.0)).xyz;\n    dShadowCoord.z = saturate(dShadowCoord.z) - 0.0001;\n    #ifdef SHADOWBIAS\n        dShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\n    #endif\n}\nvoid _getShadowCoordPersp(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\n    vec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n    projPos.xy /= projPos.w;\n    dShadowCoord.xy = projPos.xy;\n    dShadowCoord.z = length(dLightDirW) * shadowParams.w;\n    #ifdef SHADOWBIAS\n        dShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\n    #endif\n}\nvoid getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams) {\n    _getShadowCoordOrtho(shadowMatrix, shadowParams, vPositionW);\n}\nvoid getShadowCoordPersp(mat4 shadowMatrix, vec4 shadowParams) {\n    _getShadowCoordPersp(shadowMatrix, shadowParams, vPositionW);\n}\nvoid getShadowCoordPerspNormalOffset(mat4 shadowMatrix, vec4 shadowParams) {\n    float distScale = abs(dot(vPositionW - dLightPosW, dLightDirNormW)); // fov?\n    vec3 wPos = vPositionW + vNormalW * shadowParams.y * clamp(1.0 - dot(vNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\n    _getShadowCoordPersp(shadowMatrix, shadowParams, wPos);\n}\nvoid getShadowCoordOrthoNormalOffset(mat4 shadowMatrix, vec3 shadowParams) {\n    vec3 wPos = vPositionW + vNormalW * shadowParams.y * clamp(1.0 - dot(vNormalW, -dLightDirNormW), 0.0, 1.0); //0.08\n    _getShadowCoordOrtho(shadowMatrix, shadowParams, wPos);\n}\n";
pc.shaderChunks.shadowCoordVS="void getLightDirPoint(vec3 lightPosW) {\n    vec3 lightDirW = vPositionW - lightPosW;\n    dLightDirNormW = normalize(lightDirW);\n    dLightPosW = lightPosW;\n}\nvoid _getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\n    vec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n    vMainShadowUv = projPos;\n}\nvoid _getShadowCoordPersp(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\n    vec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n    vMainShadowUv = projPos;\n}\nvoid getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams) {\n    _getShadowCoordOrtho(shadowMatrix, shadowParams, vPositionW);\n}\nvoid getShadowCoordPersp(mat4 shadowMatrix, vec3 shadowParams) {\n    _getShadowCoordPersp(shadowMatrix, shadowParams, vPositionW);\n}\nvoid getShadowCoordPerspNormalOffset(mat4 shadowMatrix, vec3 shadowParams) {\n    float distScale = abs(dot(vPositionW - dLightPosW, dLightDirNormW)); // fov?\n    vec3 wPos = vPositionW + dNormalW * shadowParams.y * clamp(1.0 - dot(dNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\n    _getShadowCoordPersp(shadowMatrix, shadowParams, wPos);\n}\nvoid getShadowCoordOrthoNormalOffset(mat4 shadowMatrix, vec3 shadowParams) {\n    vec3 wPos = vPositionW + dNormalW * shadowParams.y * clamp(1.0 - dot(dNormalW, -dLightDirNormW), 0.0, 1.0); //0.08\n    _getShadowCoordOrtho(shadowMatrix, shadowParams, wPos);\n}\n";
pc.shaderChunks.shadowCoordPerspZbufferPS="void _getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\n    vec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n    projPos.xyz /= projPos.w;\n    dShadowCoord = projPos.xyz;\n    // depth bias is already applied on render\n}\nvoid getShadowCoordPerspZbufferNormalOffset(mat4 shadowMatrix, vec4 shadowParams) {\n    float distScale = abs(dot(vPositionW - dLightPosW, dLightDirNormW)); // fov?\n    vec3 wPos = vPositionW + vNormalW * shadowParams.y * clamp(1.0 - dot(vNormalW, -dLightDirNormW), 0.0, 1.0) * distScale;\n    _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\n}\nvoid getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams) {\n    _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, vPositionW);\n}\n";
pc.shaderChunks.shadowEVSMPS="float VSM$(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n    vec3 moments = texture2D(tex, texCoords).xyz;\n    return calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM$(sampler2D shadowMap, vec3 shadowParams, float exponent) {\n    return VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM$(sampler2D shadowMap, vec4 shadowParams, float exponent) {\n    return VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, length(dLightDirW) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\n}\n";
pc.shaderChunks.shadowEVSMnPS="float VSM$(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n    float pixelSize = 1.0 / resolution;\n    texCoords -= vec2(pixelSize);\n    vec3 s00 = texture2D(tex, texCoords).xyz;\n    vec3 s10 = texture2D(tex, texCoords + vec2(pixelSize, 0)).xyz;\n    vec3 s01 = texture2D(tex, texCoords + vec2(0, pixelSize)).xyz;\n    vec3 s11 = texture2D(tex, texCoords + vec2(pixelSize)).xyz;\n    vec2 fr = fract(texCoords * resolution);\n    vec3 h0 = mix(s00, s10, fr.x);\n    vec3 h1 = mix(s01, s11, fr.x);\n    vec3 moments = mix(h0, h1, fr.y);\n    return calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM$(sampler2D shadowMap, vec3 shadowParams, float exponent) {\n    return VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM$(sampler2D shadowMap, vec4 shadowParams, float exponent) {\n    return VSM$(shadowMap, dShadowCoord.xy, shadowParams.x, length(dLightDirW) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\n}\n";
pc.shaderChunks.shadowStandardPS="vec3 lessThan2(vec3 a, vec3 b) {\n    return clamp((b - a)*1000.0, 0.0, 1.0); // softer version\n}\nfloat unpackFloat(vec4 rgbaDepth) {\n    const vec4 bitShift = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0);\n    return dot(rgbaDepth, bitShift);\n}\n// ----- Direct/Spot Sampling -----\n#ifdef GL2\n    float _getShadowPCF3x3(sampler2DShadow shadowMap, vec3 shadowParams) {\n        float z = dShadowCoord.z;\n        vec2 uv = dShadowCoord.xy * shadowParams.x; // 1 unit - 1 texel\n        float shadowMapSizeInv = 1.0 / shadowParams.x;\n        vec2 base_uv = floor(uv + 0.5);\n        float s = (uv.x + 0.5 - base_uv.x);\n        float t = (uv.y + 0.5 - base_uv.y);\n        base_uv -= vec2(0.5);\n        base_uv *= shadowMapSizeInv;\n        float sum = 0.0;\n        float uw0 = (3.0 - 2.0 * s);\n        float uw1 = (1.0 + 2.0 * s);\n        float u0 = (2.0 - s) / uw0 - 1.0;\n        float u1 = s / uw1 + 1.0;\n        float vw0 = (3.0 - 2.0 * t);\n        float vw1 = (1.0 + 2.0 * t);\n        float v0 = (2.0 - t) / vw0 - 1.0;\n        float v1 = t / vw1 + 1.0;\n        u0 = u0 * shadowMapSizeInv + base_uv.x;\n        v0 = v0 * shadowMapSizeInv + base_uv.y;\n        u1 = u1 * shadowMapSizeInv + base_uv.x;\n        v1 = v1 * shadowMapSizeInv + base_uv.y;\n        sum += uw0 * vw0 * texture(shadowMap, vec3(u0, v0, z));\n        sum += uw1 * vw0 * texture(shadowMap, vec3(u1, v0, z));\n        sum += uw0 * vw1 * texture(shadowMap, vec3(u0, v1, z));\n        sum += uw1 * vw1 * texture(shadowMap, vec3(u1, v1, z));\n        sum *= 1.0f / 16.0;\n        return sum;\n    }\n    float getShadowPCF3x3(sampler2DShadow shadowMap, vec3 shadowParams) {\n        return _getShadowPCF3x3(shadowMap, shadowParams);\n    }\n    float getShadowSpotPCF3x3(sampler2DShadow shadowMap, vec4 shadowParams) {\n        return _getShadowPCF3x3(shadowMap, shadowParams.xyz);\n    }\n#else\n    float _xgetShadowPCF3x3(mat3 depthKernel, sampler2D shadowMap, vec3 shadowParams) {\n        mat3 shadowKernel;\n        vec3 shadowCoord = dShadowCoord;\n        vec3 shadowZ = vec3(shadowCoord.z);\n        shadowKernel[0] = vec3(greaterThan(depthKernel[0], shadowZ));\n        shadowKernel[1] = vec3(greaterThan(depthKernel[1], shadowZ));\n        shadowKernel[2] = vec3(greaterThan(depthKernel[2], shadowZ));\n        vec2 fractionalCoord = fract( shadowCoord.xy * shadowParams.x );\n        shadowKernel[0] = mix(shadowKernel[0], shadowKernel[1], fractionalCoord.x);\n        shadowKernel[1] = mix(shadowKernel[1], shadowKernel[2], fractionalCoord.x);\n        vec4 shadowValues;\n        shadowValues.x = mix(shadowKernel[0][0], shadowKernel[0][1], fractionalCoord.y);\n        shadowValues.y = mix(shadowKernel[0][1], shadowKernel[0][2], fractionalCoord.y);\n        shadowValues.z = mix(shadowKernel[1][0], shadowKernel[1][1], fractionalCoord.y);\n        shadowValues.w = mix(shadowKernel[1][1], shadowKernel[1][2], fractionalCoord.y);\n        return dot( shadowValues, vec4( 1.0 ) ) * 0.25;\n    }\n    float _getShadowPCF3x3(sampler2D shadowMap, vec3 shadowParams) {\n        vec3 shadowCoord = dShadowCoord;\n        float xoffset = 1.0 / shadowParams.x; // 1/shadow map width\n        float dx0 = -xoffset;\n        float dx1 = xoffset;\n        mat3 depthKernel;\n        depthKernel[0][0] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx0, dx0)));\n        depthKernel[0][1] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx0, 0.0)));\n        depthKernel[0][2] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx0, dx1)));\n        depthKernel[1][0] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(0.0, dx0)));\n        depthKernel[1][1] = unpackFloat(texture2D(shadowMap, shadowCoord.xy));\n        depthKernel[1][2] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(0.0, dx1)));\n        depthKernel[2][0] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx1, dx0)));\n        depthKernel[2][1] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx1, 0.0)));\n        depthKernel[2][2] = unpackFloat(texture2D(shadowMap, shadowCoord.xy + vec2(dx1, dx1)));\n        return _xgetShadowPCF3x3(depthKernel, shadowMap, shadowParams);\n    }\n    float getShadowPCF3x3(sampler2D shadowMap, vec3 shadowParams) {\n        return _getShadowPCF3x3(shadowMap, shadowParams);\n    }\n    float getShadowSpotPCF3x3(sampler2D shadowMap, vec4 shadowParams) {\n        return _getShadowPCF3x3(shadowMap, shadowParams.xyz);\n    }\n#endif\n// ----- Point Sampling -----\nfloat _getShadowPoint(samplerCube shadowMap, vec4 shadowParams, vec3 dir) {\n    vec3 tc = normalize(dir);\n    vec3 tcAbs = abs(tc);\n    vec4 dirX = vec4(1,0,0, tc.x);\n    vec4 dirY = vec4(0,1,0, tc.y);\n    float majorAxisLength = tc.z;\n    if ((tcAbs.x > tcAbs.y) && (tcAbs.x > tcAbs.z)) {\n        dirX = vec4(0,0,1, tc.z);\n        dirY = vec4(0,1,0, tc.y);\n        majorAxisLength = tc.x;\n    } else if ((tcAbs.y > tcAbs.x) && (tcAbs.y > tcAbs.z)) {\n        dirX = vec4(1,0,0, tc.x);\n        dirY = vec4(0,0,1, tc.z);\n        majorAxisLength = tc.y;\n    }\n    float shadowParamsInFaceSpace = ((1.0/shadowParams.x) * 2.0) * abs(majorAxisLength);\n    vec3 xoffset = (dirX.xyz * shadowParamsInFaceSpace);\n    vec3 yoffset = (dirY.xyz * shadowParamsInFaceSpace);\n    vec3 dx0 = -xoffset;\n    vec3 dy0 = -yoffset;\n    vec3 dx1 = xoffset;\n    vec3 dy1 = yoffset;\n    mat3 shadowKernel;\n    mat3 depthKernel;\n    depthKernel[0][0] = unpackFloat(textureCube(shadowMap, tc + dx0 + dy0));\n    depthKernel[0][1] = unpackFloat(textureCube(shadowMap, tc + dx0));\n    depthKernel[0][2] = unpackFloat(textureCube(shadowMap, tc + dx0 + dy1));\n    depthKernel[1][0] = unpackFloat(textureCube(shadowMap, tc + dy0));\n    depthKernel[1][1] = unpackFloat(textureCube(shadowMap, tc));\n    depthKernel[1][2] = unpackFloat(textureCube(shadowMap, tc + dy1));\n    depthKernel[2][0] = unpackFloat(textureCube(shadowMap, tc + dx1 + dy0));\n    depthKernel[2][1] = unpackFloat(textureCube(shadowMap, tc + dx1));\n    depthKernel[2][2] = unpackFloat(textureCube(shadowMap, tc + dx1 + dy1));\n    vec3 shadowZ = vec3(length(dir) * shadowParams.w + shadowParams.z);\n    shadowKernel[0] = vec3(lessThan2(depthKernel[0], shadowZ));\n    shadowKernel[1] = vec3(lessThan2(depthKernel[1], shadowZ));\n    shadowKernel[2] = vec3(lessThan2(depthKernel[2], shadowZ));\n    vec2 uv = (vec2(dirX.w, dirY.w) / abs(majorAxisLength)) * 0.5;\n    vec2 fractionalCoord = fract( uv * shadowParams.x );\n    shadowKernel[0] = mix(shadowKernel[0], shadowKernel[1], fractionalCoord.x);\n    shadowKernel[1] = mix(shadowKernel[1], shadowKernel[2], fractionalCoord.x);\n    vec4 shadowValues;\n    shadowValues.x = mix(shadowKernel[0][0], shadowKernel[0][1], fractionalCoord.y);\n    shadowValues.y = mix(shadowKernel[0][1], shadowKernel[0][2], fractionalCoord.y);\n    shadowValues.z = mix(shadowKernel[1][0], shadowKernel[1][1], fractionalCoord.y);\n    shadowValues.w = mix(shadowKernel[1][1], shadowKernel[1][2], fractionalCoord.y);\n    return 1.0 - dot( shadowValues, vec4( 1.0 ) ) * 0.25;\n}\nfloat getShadowPointPCF3x3(samplerCube shadowMap, vec4 shadowParams) {\n    return _getShadowPoint(shadowMap, shadowParams, dLightDirW);\n}\n";
pc.shaderChunks.shadowStandardGL2PS="float _getShadowPCF5x5(sampler2DShadow shadowMap, vec3 shadowParams) {\n    // http://the-witness.net/news/2013/09/shadow-mapping-summary-part-1/\n    float z = dShadowCoord.z;\n    vec2 uv = dShadowCoord.xy * shadowParams.x; // 1 unit - 1 texel\n    float shadowMapSizeInv = 1.0 / shadowParams.x;\n    vec2 base_uv = floor(uv + 0.5);\n    float s = (uv.x + 0.5 - base_uv.x);\n    float t = (uv.y + 0.5 - base_uv.y);\n    base_uv -= vec2(0.5);\n    base_uv *= shadowMapSizeInv;\n    float uw0 = (4.0 - 3.0 * s);\n    float uw1 = 7.0;\n    float uw2 = (1.0 + 3.0 * s);\n    float u0 = (3.0 - 2.0 * s) / uw0 - 2.0;\n    float u1 = (3.0 + s) / uw1;\n    float u2 = s / uw2 + 2.0;\n    float vw0 = (4.0 - 3.0 * t);\n    float vw1 = 7.0;\n    float vw2 = (1.0 + 3.0 * t);\n    float v0 = (3.0 - 2.0 * t) / vw0 - 2.0;\n    float v1 = (3.0 + t) / vw1;\n    float v2 = t / vw2 + 2.0;\n    float sum = 0.0;\n    u0 = u0 * shadowMapSizeInv + base_uv.x;\n    v0 = v0 * shadowMapSizeInv + base_uv.y;\n    u1 = u1 * shadowMapSizeInv + base_uv.x;\n    v1 = v1 * shadowMapSizeInv + base_uv.y;\n    u2 = u2 * shadowMapSizeInv + base_uv.x;\n    v2 = v2 * shadowMapSizeInv + base_uv.y;\n    sum += uw0 * vw0 * texture(shadowMap, vec3(u0, v0, z));\n    sum += uw1 * vw0 * texture(shadowMap, vec3(u1, v0, z));\n    sum += uw2 * vw0 * texture(shadowMap, vec3(u2, v0, z));\n    sum += uw0 * vw1 * texture(shadowMap, vec3(u0, v1, z));\n    sum += uw1 * vw1 * texture(shadowMap, vec3(u1, v1, z));\n    sum += uw2 * vw1 * texture(shadowMap, vec3(u2, v1, z));\n    sum += uw0 * vw2 * texture(shadowMap, vec3(u0, v2, z));\n    sum += uw1 * vw2 * texture(shadowMap, vec3(u1, v2, z));\n    sum += uw2 * vw2 * texture(shadowMap, vec3(u2, v2, z));\n    sum *= 1.0f / 144.0;\n    sum = gammaCorrectInput(sum); // gives softer gradient\n    return sum;\n}\nfloat getShadowPCF5x5(sampler2DShadow shadowMap, vec3 shadowParams) {\n    return _getShadowPCF5x5(shadowMap, shadowParams);\n}\nfloat getShadowSpotPCF5x5(sampler2DShadow shadowMap, vec4 shadowParams) {\n    return _getShadowPCF5x5(shadowMap, shadowParams.xyz);\n}\n";
pc.shaderChunks.shadowStandardGL2VSPS="float getShadowPCF5x5VS(sampler2DShadow shadowMap, vec3 shadowParams) {\n    dShadowCoord = vMainShadowUv.xyz;\n    dShadowCoord.z = saturate(dShadowCoord.z) - 0.0001; // prevent going to dark after the far plane\n    return _getShadowPCF5x5(shadowMap, shadowParams);\n}\n";pc.shaderChunks.shadowStandardVSPS="#ifdef GL2\n#define SHADOW_SAMPLERVS sampler2DShadow\n#else\n#define SHADOW_SAMPLERVS sampler2D\n#endif\nfloat getShadowPCF3x3VS(SHADOW_SAMPLERVS shadowMap, vec3 shadowParams) {\n    dShadowCoord = vMainShadowUv.xyz;\n    dShadowCoord.z = saturate(dShadowCoord.z) - 0.0001;\n    #ifdef SHADOWBIAS\n        dShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\n    #endif\n    return _getShadowPCF3x3(shadowMap, shadowParams);\n}\n";
pc.shaderChunks.shadowVSM8PS="float calculateVSM8(vec3 moments, float Z, float vsmBias) {\n    float VSMBias = vsmBias;//0.01 * 0.25;\n    float depthScale = VSMBias * Z;\n    float minVariance1 = depthScale * depthScale;\n    return chebyshevUpperBound(moments.xy, Z, minVariance1, 0.1);\n}\nfloat decodeFloatRG(vec2 rg) {\n    return rg.y*(1.0/255.0) + rg.x;\n}\nfloat VSM8(sampler2D tex, vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n    vec4 c = texture2D(tex, texCoords);\n    vec3 moments = vec3(decodeFloatRG(c.xy), decodeFloatRG(c.zw), 0.0);\n    return calculateVSM8(moments, Z, vsmBias);\n}\nfloat getShadowVSM8(sampler2D shadowMap, vec3 shadowParams, float exponent) {\n    return VSM8(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, 0.0);\n}\nfloat getShadowSpotVSM8(sampler2D shadowMap, vec4 shadowParams, float exponent) {\n    return VSM8(shadowMap, dShadowCoord.xy, shadowParams.x, length(dLightDirW) * shadowParams.w + shadowParams.z, shadowParams.y, 0.0);\n}\n";
pc.shaderChunks.shadowVSMVSPS="float getShadowVSM$VS(sampler2D shadowMap, vec3 shadowParams, float exponent) {\n    dShadowCoord = vMainShadowUv.xyz;\n    dShadowCoord.z += shadowParams.z;\n    dShadowCoord.xyz /= vMainShadowUv.w;\n    dShadowCoord.z = min(dShadowCoord.z, 1.0);\n    return $VSM(shadowMap, dShadowCoord.xy, shadowParams.x, dShadowCoord.z, shadowParams.y, exponent);\n}\n";pc.shaderChunks.shadowVSM_commonPS="float linstep(float a, float b, float v) {\n    return saturate((v - a) / (b - a));\n}\nfloat reduceLightBleeding(float pMax, float amount) {\n  // Remove the [0, amount] tail and linearly rescale (amount, 1].\n   return linstep(amount, 1.0, pMax);\n}\nfloat chebyshevUpperBound(vec2 moments, float mean, float minVariance, float lightBleedingReduction) {\n    // Compute variance\n    float variance = moments.y - (moments.x * moments.x);\n    variance = max(variance, minVariance);\n    // Compute probabilistic upper bound\n    float d = mean - moments.x;\n    float pMax = variance / (variance + (d * d));\n    pMax = reduceLightBleeding(pMax, lightBleedingReduction);\n    // One-tailed Chebyshev\n    return (mean <= moments.x ? 1.0 : pMax);\n}\nfloat calculateEVSM(vec3 moments, float Z, float vsmBias, float exponent) {\n    Z = 2.0 * Z - 1.0;\n    float warpedDepth = exp(exponent * Z);\n    moments.xy += vec2(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments.z);\n    float VSMBias = vsmBias;//0.01 * 0.25;\n    float depthScale = VSMBias * exponent * warpedDepth;\n    float minVariance1 = depthScale * depthScale;\n    return chebyshevUpperBound(moments.xy, warpedDepth, minVariance1, 0.1);\n}\n";
pc.shaderChunks.skinConstVS="attribute vec4 vertex_boneWeights;\nattribute vec4 vertex_boneIndices;\nuniform mat4 matrix_pose[BONE_LIMIT];\nuniform vec3 skinPosOffset;\nmat4 getBoneMatrix(const in float i)\n{\n    mat4 bone = matrix_pose[int(i)];\n    return bone;\n}\n";pc.shaderChunks.skinTexVS="attribute vec4 vertex_boneWeights;\nattribute vec4 vertex_boneIndices;\nuniform sampler2D texture_poseMap;\nuniform vec2 texture_poseMapSize;\nuniform vec3 skinPosOffset;\nmat4 getBoneMatrix(const in float i)\n{\n    float j = i * 4.0;\n    float x = mod(j, float(texture_poseMapSize.x));\n    float y = floor(j / float(texture_poseMapSize.x));\n    float dx = 1.0 / float(texture_poseMapSize.x);\n    float dy = 1.0 / float(texture_poseMapSize.y);\n    y = dy * (y + 0.5);\n    vec4 v1 = texture2D(texture_poseMap, vec2(dx * (x + 0.5), y));\n    vec4 v2 = texture2D(texture_poseMap, vec2(dx * (x + 1.5), y));\n    vec4 v3 = texture2D(texture_poseMap, vec2(dx * (x + 2.5), y));\n    vec4 v4 = texture2D(texture_poseMap, vec2(dx * (x + 3.5), y));\n    mat4 bone = mat4(v1, v2, v3, v4);\n    return bone;\n}\n";
pc.shaderChunks.skyboxPS="varying vec3 vViewDir;\nuniform samplerCube texture_cubeMap;\nvoid main(void) {\n    gl_FragColor = textureCube(texture_cubeMap, fixSeams(vViewDir));\n}\n";pc.shaderChunks.skyboxVS="attribute vec3 aPosition;\nuniform mat4 matrix_view;\nuniform mat4 matrix_projection;\nvarying vec3 vViewDir;\nvoid main(void)\n{\n    mat4 view = matrix_view;\n    view[3][0] = view[3][1] = view[3][2] = 0.0;\n    gl_Position = matrix_projection * view * vec4(aPosition, 1.0);\n    // Force skybox to far Z, regardless of the clip planes on the camera\n    // Subtract a tiny fudge factor to ensure floating point errors don't\n    // still push pixels beyond far Z. See:\n    // http://www.opengl.org/discussion_boards/showthread.php/171867-skybox-problem\n    gl_Position.z = gl_Position.w - 0.00001;\n    vViewDir = aPosition;\n    vViewDir.x *= -1.0;\n}\n";
pc.shaderChunks.skyboxHDRPS="varying vec3 vViewDir;\nuniform samplerCube texture_cubeMap;\nvoid main(void) {\n    vec3 color = processEnvironment($textureCubeSAMPLE(texture_cubeMap, fixSeamsStatic(vViewDir, $FIXCONST)).rgb);\n    color = toneMap(color);\n    color = gammaCorrectOutput(color);\n    gl_FragColor = vec4(color, 1.0);\n}\n";pc.shaderChunks.skyboxPrefilteredCubePS="varying vec3 vViewDir;\nuniform samplerCube texture_cubeMap;\nvec3 fixSeamsStretch(vec3 vec, float mipmapIndex, float cubemapSize) {\n    float scale = 1.0 - exp2(mipmapIndex) / cubemapSize;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\nvoid main(void) {\n    vec3 color = textureCubeRGBM(texture_cubeMap, fixSeamsStretch(vViewDir, 0.0, 128.0));\n    color = toneMap(color);\n    color = gammaCorrectOutput(color);\n    gl_FragColor = vec4(color, 1.0);\n}\n";
pc.shaderChunks.specularAaNonePS="float antiAliasGlossiness(float power) {\n    return power;\n}\n";pc.shaderChunks.specularAaToksvigPS="float antiAliasGlossiness(float power) {\n    float rlen = 1.0 / saturate(length(dNormalMap));\n    float toksvig = 1.0 / (1.0 + power * (rlen - 1.0));\n    return power * toksvig;\n}\n";pc.shaderChunks.specularAaToksvigFloatPS="float antiAliasGlossiness(float power) {\n    float rlen = 1.0 / saturate(length(dNormalMap));\n    float toksvig = 1.0 / (1.0 + power * (rlen - 1.0));\n    return power * mix(1.0, toksvig, material_bumpiness);\n}\n";
pc.shaderChunks.specularConstPS="uniform vec3 material_specular;\nvoid getSpecularity() {\n    dSpecularity = material_specular;\n}\n";pc.shaderChunks.specularTexPS="uniform sampler2D texture_specularMap;\nvoid getSpecularity() {\n    dSpecularity = texture2D(texture_specularMap, $UV).$CH;\n}\n";pc.shaderChunks.specularTexConstPS="uniform sampler2D texture_specularMap;\nuniform vec3 material_specular;\nvoid getSpecularity() {\n    dSpecularity = texture2D(texture_specularMap, $UV).$CH * material_specular;\n}\n";
pc.shaderChunks.specularVertPS="void getSpecularity() {\n    dSpecularity = saturate(vVertexColor.$CH);\n}\n";pc.shaderChunks.specularVertConstPS="uniform vec3 material_specular;\nvoid getSpecularity() {\n    dSpecularity = saturate(vVertexColor.$CH) * material_specular;\n}\n";pc.shaderChunks.spotPS="float getSpotEffect(vec3 lightSpotDirW, float lightInnerConeAngle, float lightOuterConeAngle) {\n    float cosAngle = dot(dLightDirNormW, lightSpotDirW);\n    return smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\n}\n";
pc.shaderChunks.startPS="\nvoid main(void) {\n    dDiffuseLight = vec3(0);\n    dSpecularLight = vec3(0);\n    dReflection = vec4(0);\n    dSpecularity = vec3(0);\n";pc.shaderChunks.startVS="\nvoid main(void) {\n    gl_Position = getPosition();\n";pc.shaderChunks.storeEVSMPS="float exponent = VSM_EXPONENT;\ndepth = 2.0 * depth - 1.0;\ndepth =  exp(exponent * depth);\ngl_FragColor = vec4(depth, depth*depth, 1.0, 1.0);\n";pc.shaderChunks.tangentBinormalVS="\nvec3 getTangent() {\n    return normalize(dNormalMatrix * vertex_tangent.xyz);\n}\nvec3 getBinormal() {\n    return cross(vNormalW, vTangentW) * vertex_tangent.w;\n}\n";
pc.shaderChunks.tonemappingAcesPS="uniform float exposure;\nvec3 toneMap(vec3 color) {\n    float tA = 2.51;\n    float tB = 0.03;\n    float tC = 2.43;\n    float tD = 0.59;\n    float tE = 0.14;\n    vec3 x = color * exposure;\n    return (x*(tA*x+tB))/(x*(tC*x+tD)+tE);\n}\n";pc.shaderChunks.tonemappingAces2PS="uniform float exposure;\n// ACES approximation by Stephen Hill\n// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\nconst mat3 ACESInputMat = mat3(\n    0.59719, 0.35458, 0.04823,\n    0.07600, 0.90834, 0.01566,\n    0.02840, 0.13383, 0.83777\n);\n// ODT_SAT => XYZ => D60_2_D65 => sRGB\nconst mat3 ACESOutputMat = mat3(\n     1.60475, -0.53108, -0.07367,\n    -0.10208,  1.10813, -0.00605,\n    -0.00327, -0.07276,  1.07602\n);\nvec3 RRTAndODTFit(vec3 v) {\n    vec3 a = v * (v + 0.0245786) - 0.000090537;\n    vec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n    return a / b;\n}\nvec3 toneMap(vec3 color) {\n    color *= exposure;\n    color = color * ACESInputMat;\n    // Apply RRT and ODT\n    color = RRTAndODTFit(color);\n    color = color * ACESOutputMat;\n    // Clamp to [0, 1]\n    color = clamp(color, 0.0, 1.0);\n    return color;\n}\n";
pc.shaderChunks.tonemappingFilmicPS="const float A =  0.15;\nconst float B =  0.50;\nconst float C =  0.10;\nconst float D =  0.20;\nconst float E =  0.02;\nconst float F =  0.30;\nconst float W =  11.2;\nuniform float exposure;\nvec3 uncharted2Tonemap(vec3 x) {\n   return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvec3 toneMap(vec3 color) {\n    color = uncharted2Tonemap(color * exposure);\n    vec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));\n    color = color * whiteScale;\n    return color;\n}\n";
pc.shaderChunks.tonemappingHejlPS="uniform float exposure;\nvec3 toneMap(vec3 color) {\n    color *= exposure;\n    const float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;\n    const float Scl = 1.25;\n    vec3 h = max( vec3(0.0), color - vec3(0.004) );\n    return (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);\n}\n";pc.shaderChunks.tonemappingLinearPS="uniform float exposure;\nvec3 toneMap(vec3 color) {\n    return color * exposure;\n}\n";
pc.shaderChunks.tonemappingNonePS="vec3 toneMap(vec3 color) {\n    return color;\n}\n";pc.shaderChunks.transformVS="mat4 getModelMatrix() {\n    return matrix_model;\n}\nvec4 getPosition() {\n    dModelMatrix = getModelMatrix();\n    vec4 posW = dModelMatrix * vec4(vertex_position, 1.0);\n    dPositionW = posW.xyz;\n    return matrix_viewProjection * posW;\n}\nvec3 getWorldPosition() {\n    return dPositionW;\n}\n";pc.shaderChunks.transformDeclVS="attribute vec3 vertex_position;\nuniform mat4 matrix_model;\nuniform mat4 matrix_viewProjection;\nvec3 dPositionW;\nmat4 dModelMatrix;\n";
pc.shaderChunks.transformInstancedVS="mat4 getModelMatrix() {\n    return mat4(instance_line1, instance_line2, instance_line3, instance_line4);\n}\nvec4 getPosition() {\n    dModelMatrix = getModelMatrix();\n    vec4 posW = dModelMatrix * vec4(vertex_position, 1.0);\n    dPositionW = posW.xyz;\n    return matrix_viewProjection * posW;\n}\nvec3 getWorldPosition() {\n    return dPositionW;\n}\n";pc.shaderChunks.transformScreenSpaceVS="mat4 getModelMatrix() {\n    return matrix_model;\n}\nvec4 getPosition() {\n    vec4 posW = vec4((getModelMatrix() * vec4(vertex_position, 1.0)).xy, 0.0, 1.0);\n    dPositionW = posW.xyz;\n    return posW;\n}\nvec3 getWorldPosition() {\n    return dPositionW;\n}\n";
pc.shaderChunks.transformSkinnedVS="mat4 getModelMatrix() {\n    return getBoneMatrix(vertex_boneIndices.x) * vertex_boneWeights.x +\n           getBoneMatrix(vertex_boneIndices.y) * vertex_boneWeights.y +\n           getBoneMatrix(vertex_boneIndices.z) * vertex_boneWeights.z +\n           getBoneMatrix(vertex_boneIndices.w) * vertex_boneWeights.w;\n}\nvec4 getPosition() {\n    dModelMatrix = getModelMatrix();\n    vec4 posW = dModelMatrix * vec4(vertex_position, 1.0);\n    //posW.xyz /= posW.w;\n    posW.xyz += skinPosOffset;\n    dPositionW = posW.xyz;// / posW.w;\n    return matrix_viewProjection * posW;\n}\nvec3 getWorldPosition() {\n    return dPositionW;\n}\n";
pc.shaderChunks.transformUv1VS="mat4 getModelMatrix() {\n    return matrix_model;\n}\nvec4 getPosition() {\n    dModelMatrix = getModelMatrix();\n    vec4 posW = dModelMatrix * vec4(vertex_position, 1.0);\n    dPositionW = posW.xyz;\n    return vec4(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1);\n}\nvec3 getWorldPosition() {\n    return dPositionW;\n}\n";pc.shaderChunks.uv0VS="\nvec2 getUv0() {\n    return vertex_texCoord0;\n}\n";pc.shaderChunks.uv1VS="\nvec2 getUv1() {\n    return vertex_texCoord1;\n}\n";
pc.shaderChunks.viewDirPS="void getViewDir() {\n    dViewDirW = normalize(view_position - vPositionW);\n}\n";pc.shaderChunks.viewNormalVS="\nuniform mat4 matrix_view;\nvec3 getViewNormal() {\n    return mat3(matrix_view) * vNormalW;\n}\n";pc.programlib={gammaCode:function(e){return e===pc.GAMMA_SRGB||e===pc.GAMMA_SRGBFAST?pc.shaderChunks.gamma2_2PS:e===pc.GAMMA_SRGBHDR?"#define HDR\n"+pc.shaderChunks.gamma2_2PS:pc.shaderChunks.gamma1_0PS},tonemapCode:function(e){return e===pc.TONEMAP_FILMIC?pc.shaderChunks.tonemappingFilmicPS:e===pc.TONEMAP_LINEAR?pc.shaderChunks.tonemappingLinearPS:e===pc.TONEMAP_HEJL?pc.shaderChunks.tonemappingHejlPS:e===pc.TONEMAP_ACES?pc.shaderChunks.tonemappingAcesPS:e===pc.TONEMAP_ACES2?pc.shaderChunks.tonemappingAces2PS:
pc.shaderChunks.tonemappingNonePS},fogCode:function(e){return"linear"===e?pc.shaderChunks.fogLinearPS:"exp"===e?pc.shaderChunks.fogExpPS:"exp2"===e?pc.shaderChunks.fogExp2PS:pc.shaderChunks.fogNonePS},skinCode:function(e){return e.supportsBoneTextures?pc.shaderChunks.skinTexVS:"#define BONE_LIMIT "+e.getBoneLimit()+"\n"+pc.shaderChunks.skinConstVS},precisionCode:function(e){var a="precision "+e.precision+" float;\n";e.webgl2&&(a+="#ifdef GL2\nprecision "+e.precision+" sampler2DShadow;\n#endif\n");
return a},versionCode:function(e){return e.webgl2?"#version 300 es\n":""},dummyFragmentCode:function(){return"void main(void) {gl_FragColor = vec4(0.0);}"},begin:function(){return"void main(void)\n{\n"},end:function(){return"}\n"}};pc.programlib.basic={generateKey:function(e,a){var b="basic";a.fog&&(b+="_fog");a.alphaTest&&(b+="_atst");a.vertexColors&&(b+="_vcol");a.diffuseMap&&(b+="_diff");return b},createShaderDefinition:function(e,a){var b={vertex_position:pc.SEMANTIC_POSITION};a.skin&&(b.vertex_boneWeights=pc.SEMANTIC_BLENDWEIGHT,b.vertex_boneIndices=pc.SEMANTIC_BLENDINDICES);a.vertexColors&&(b.vertex_color=pc.SEMANTIC_COLOR);a.diffuseMap&&(b.vertex_texCoord0=pc.SEMANTIC_TEXCOORD0);var c=pc.shaderChunks,d;d=""+c.transformDeclVS;
a.skin?(d+=pc.programlib.skinCode(e),d+=c.transformSkinnedVS):d+=c.transformVS;a.vertexColors&&(d+="attribute vec4 vertex_color;\nvarying vec4 vColor;\n");a.diffuseMap&&(d+="attribute vec2 vertex_texCoord0;\nvarying vec2 vUv0;\n");d+=pc.programlib.begin();d+="   gl_Position = getPosition();\n";a.vertexColors&&(d+="    vColor = vertex_color;\n");a.diffuseMap&&(d+="    vUv0 = vertex_texCoord0;\n");var f=d+=pc.programlib.end();d=pc.programlib.precisionCode(e);d=a.vertexColors?d+"varying vec4 vColor;\n":
d+"uniform vec4 uColor;\n";a.diffuseMap&&(d+="varying vec2 vUv0;\nuniform sampler2D texture_diffuseMap;\n");a.fog&&(d+=pc.programlib.fogCode(a.fog));a.alphatest&&(d+=c.alphaTestPS);d+=pc.programlib.begin();d=a.vertexColors?d+"    gl_FragColor = vColor;\n":d+"    gl_FragColor = uColor;\n";a.diffuseMap&&(d+="    gl_FragColor *= texture2D(texture_diffuseMap, vUv0);\n");a.alphatest&&(d+="   alphaTest(gl_FragColor.a);\n");a.fog&&(d+="   glFragColor.rgb = addFog(gl_FragColor.rgb);\n");d+=pc.programlib.end();
return{attributes:b,vshader:f,fshader:d}}};pc.programlib.depth={generateKey:function(e,a){var b="depth";a.skin&&(b+="_skin");a.opacityMap&&(b+="_opam");a.instancing&&(b+="_inst");return b},createShaderDefinition:function(e,a){var b={vertex_position:pc.SEMANTIC_POSITION};a.skin&&(b.vertex_boneWeights=pc.SEMANTIC_BLENDWEIGHT,b.vertex_boneIndices=pc.SEMANTIC_BLENDINDICES);a.opacityMap&&(b.vertex_texCoord0=pc.SEMANTIC_TEXCOORD0);var c=pc.shaderChunks,d;d=""+c.transformDeclVS;a.skin?(d+=pc.programlib.skinCode(e),d+=c.transformSkinnedVS):a.instancing?
(b.instance_line1=pc.SEMANTIC_TEXCOORD2,b.instance_line2=pc.SEMANTIC_TEXCOORD3,b.instance_line3=pc.SEMANTIC_TEXCOORD4,b.instance_line4=pc.SEMANTIC_TEXCOORD5,d+=c.instancingVS,d+=c.transformInstancedVS):d=a.screenSpace?d+c.transformScreenSpaceVS:d+c.transformVS;a.opacityMap&&(d+="attribute vec2 vertex_texCoord0;\n\nvarying vec2 vUv0;\n\n");d=d+"varying float vDepth;\nuniform mat4 matrix_view;\nuniform float camera_far;\n\n"+pc.programlib.begin();d+="   gl_Position = getPosition();\n";a.opacityMap&&
(d+="    vUv0 = vertex_texCoord0;\n");var f=d=d+"    vDepth = -(matrix_view * vec4(getWorldPosition(),1.0)).z / camera_far;\n"+pc.programlib.end();d=pc.programlib.precisionCode(e);a.opacityMap&&(d=d+"varying vec2 vUv0;\n\nuniform sampler2D texture_opacityMap;\n\n"+c.alphaTestPS);d=d+"varying float vDepth;\n\nvec4 packFloat(float depth)\n{\n    const vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n    vec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\n\n"+
pc.programlib.begin();a.opacityMap&&(d+="    alphaTest(texture2D(texture_opacityMap, vUv0)."+a.opacityChannel[0]+" );\n\n");d=d+"float depth = vDepth;\ngl_FragColor = packFloat(depth);\n"+pc.programlib.end();return{attributes:b,vshader:f,fshader:d}}};pc.programlib.depthrgba={generateKey:function(e,a){var b="depthrgba";a.skin&&(b+="_skin");a.opacityMap&&(b+="_opam"+a.opacityChannel);a.type&&(b+=a.type);a.instancing&&(b+="_inst");return b+="_"+a.shadowType},createShaderDefinition:function(e,a){var b={vertex_position:pc.SEMANTIC_POSITION};a.skin&&(b.vertex_boneWeights=pc.SEMANTIC_BLENDWEIGHT,b.vertex_boneIndices=pc.SEMANTIC_BLENDINDICES);a.opacityMap&&(b.vertex_texCoord0=pc.SEMANTIC_TEXCOORD0);var c=pc.shaderChunks,d;d=""+c.transformDeclVS;a.skin?
(d+=pc.programlib.skinCode(e),d+=c.transformSkinnedVS):a.instancing?(b.instance_line1=pc.SEMANTIC_TEXCOORD2,b.instance_line2=pc.SEMANTIC_TEXCOORD3,b.instance_line3=pc.SEMANTIC_TEXCOORD4,b.instance_line4=pc.SEMANTIC_TEXCOORD5,d+=c.instancingVS,d+=c.transformInstancedVS):d=a.screenSpace?d+c.transformScreenSpaceVS:d+c.transformVS;a.opacityMap&&(d+="attribute vec2 vertex_texCoord0;\n\nvarying vec2 vUv0;\n\n");a.type!==pc.LIGHTTYPE_DIRECTIONAL&&(d+="varying vec3 worldPos;\n\n");d+=pc.programlib.begin();
d+="   gl_Position = getPosition();\n";a.opacityMap&&(d+="    vUv0 = vertex_texCoord0;\n");a.type!==pc.LIGHTTYPE_DIRECTIONAL&&(d+="    worldPos = dPositionW;\n");var f=d+=pc.programlib.end();d="";e.extStandardDerivatives&&!e.webgl2&&(d+="#extension GL_OES_standard_derivatives : enable\n\n");d+=pc.programlib.precisionCode(e);e.extStandardDerivatives&&!e.webgl2&&(d+="uniform vec2 polygonOffset;\n");a.shadowType===pc.SHADOW_VSM32?d=e.extTextureFloatHighPrecision?d+"#define VSM_EXPONENT 15.0\n\n":d+"#define VSM_EXPONENT 5.54\n\n":
a.shadowType===pc.SHADOW_VSM16&&(d+="#define VSM_EXPONENT 5.54\n\n");a.opacityMap&&(d=d+"varying vec2 vUv0;\nuniform sampler2D texture_opacityMap;\n"+c.alphaTestPS);a.type!==pc.LIGHTTYPE_DIRECTIONAL&&(d+="varying vec3 worldPos;\nuniform vec3 view_position;\nuniform float light_radius;\n");a.shadowType!==pc.SHADOW_PCF3||e.webgl2&&a.type!==pc.LIGHTTYPE_POINT?a.shadowType===pc.SHADOW_VSM8&&(d+="vec2 encodeFloatRG( float v ) {\n\r\n                     vec2 enc = vec2(1.0, 255.0) * v;\n\r\n                     enc = fract(enc);\n\r\n                     enc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n\r\n                     return enc;\n\r\n                    }\n"):
d+=c.packDepthPS;d+=pc.programlib.begin();a.opacityMap&&(d+="    alphaTest( texture2D(texture_opacityMap, vUv0)."+a.opacityChannel+" );\n\n");var g=a.shadowType===pc.SHADOW_VSM8||a.shadowType===pc.SHADOW_VSM16||a.shadowType===pc.SHADOW_VSM32;d=a.type===pc.LIGHTTYPE_POINT||g&&a.type!==pc.LIGHTTYPE_DIRECTIONAL?d+"   float depth = min(distance(view_position, worldPos) / light_radius, 0.99999);\n":d+"   float depth = gl_FragCoord.z;\n";d=a.shadowType!==pc.SHADOW_PCF3||e.webgl2&&a.type!==pc.LIGHTTYPE_POINT?
a.shadowType===pc.SHADOW_PCF3||a.shadowType===pc.SHADOW_PCF5?d+"   gl_FragData[0] = vec4(1.0);\n":a.shadowType===pc.SHADOW_VSM8?d+"   gl_FragColor = vec4(encodeFloatRG(depth), encodeFloatRG(depth*depth));\n":d+c.storeEVSMPS:e.extStandardDerivatives&&!e.webgl2?d+"   float minValue = 2.3374370500153186e-10; //(1.0 / 255.0) / (256.0 * 256.0 * 256.0);\n   depth += polygonOffset.x * max(abs(dFdx(depth)), abs(dFdy(depth))) + minValue * polygonOffset.y;\n   gl_FragData[0] = packFloat(depth);\n":d+"   gl_FragData[0] = packFloat(depth);\n";
d+=pc.programlib.end();return{attributes:b,vshader:f,fshader:d}}};pc.programlib.particle={generateKey:function(e,a){var b="particle",c;for(c in a)a.hasOwnProperty(c)&&(b+=a[c]);return b},_animTex:function(e,a){var b;b=""+(e.animTexLoop?a.particleAnimFrameLoopVS:a.particleAnimFrameClampVS);return b+=a.particleAnimTexVS},createShaderDefinition:function(e,a){var b=pc.shaderChunks,c="",d=pc.programlib.precisionCode(e)+"\n";a.animTex&&(c+="\nuniform vec4 animTexParams;\n");2==a.normal&&(c+="\nvarying mat3 ParticleMat;\n");1==a.normal&&(c+="\nvarying vec3 Normal;\n");
a.soft&&(c+="\nvarying float vDepth;\n");a.useCpu?(c+=b.particle_cpuVS,a.localSpace&&(c+=b.particle_localShiftVS),a.animTex&&(c+=this._animTex(a,b)),a.alignToMotion&&(c+=b.particle_pointAlongVS),c+=a.mesh?b.particle_meshVS:b.particle_billboardVS,1==a.normal&&(c+=b.particle_normalVS),2==a.normal&&(c+=b.particle_TBNVS),0<a.stretch&&(c+=b.particle_stretchVS),c+=b.particle_cpu_endVS):(c+=b.particle_initVS,c+=a.pack8?b.particleInputRgba8PS:b.particleInputFloatPS,c+=b.particleVS,a.localSpace&&(c+=b.particle_localShiftVS),
a.animTex&&(c+=this._animTex(a,b)),a.wrap&&(c+=b.particle_wrapVS),a.alignToMotion&&(c+=b.particle_pointAlongVS),c+=a.mesh?b.particle_meshVS:b.particle_billboardVS,1==a.normal&&(c+=b.particle_normalVS),2==a.normal&&(c+=b.particle_TBNVS),0<a.stretch&&(c+=b.particle_stretchVS),c+=b.particle_endVS);0<a.soft&&(c+=b.particle_softVS);c+="}\n";0<a.normal&&(1==a.normal?d+="\nvarying vec3 Normal;\n":2==a.normal&&(d+="\nvarying mat3 ParticleMat;\n"),d+="\nuniform vec3 lightCube[6];\n");a.soft&&(d+="\nvarying float vDepth;\n");
0===a.normal&&"none"===a.fog&&(a.srgb=!1);d+=pc.programlib.gammaCode(a.gamma);d+=pc.programlib.tonemapCode(a.toneMap);d="linear"===a.fog?d+b.fogLinearPS:"exp"===a.fog?d+b.fogExpPS:"exp2"===a.fog?d+b.fogExp2PS:d+b.fogNonePS;2==a.normal&&(d+="\nuniform sampler2D normalMap;\n");0<a.soft&&(d+="\nuniform sampler2D uDepthMap;\n uniform vec4 uScreenSize;\n");d+=b.particlePS;0<a.soft&&(d+=b.particle_softPS);1==a.normal&&(d+="\nvec3 normal = Normal;\n");2==a.normal&&(d+=b.particle_normalMapPS);0<a.normal&&
(d+=a.halflambert?b.particle_halflambertPS:b.particle_lambertPS);0<a.normal&&(d+=b.particle_lightingPS);a.blend==pc.BLEND_NORMAL?d+=b.particle_blendNormalPS:a.blend==pc.BLEND_ADDITIVE?d+=b.particle_blendAddPS:a.blend==pc.BLEND_MULTIPLICATIVE&&(d+=b.particle_blendMultiplyPS);d+=b.particle_endPS;return{attributes:pc.shaderChunks.collectAttribs(c),vshader:c,fshader:d}}};pc.programlib.standard={hashCode:function(e){var a=0;if(0===e.length)return a;for(var b=0;b<e.length;b++)var c=e.charCodeAt(b),a=(a<<5)-a+c,a=a&a;return a},generateKey:function(e,a){var b=[],c="standard",d;for(d in a)if(a.hasOwnProperty(d))if("chunks"===d)for(var f in a[d])a[d].hasOwnProperty(f)&&b.push(f+a.chunks[f]);else a[d]&&b.push(d);b.sort();for(d in b)b.hasOwnProperty(d)&&(c+=b[d]+a[b[d]]);if(a.lights)for(d=0;d<a.lights.length;d++)b=a.lights[d],c+=b.key;return this.hashCode(c)},_correctChannel:function(e,
a){if(0<pc._matTex2D[e]){if(pc._matTex2D[e]<a.length)return a.substring(0,pc._matTex2D[e]);if(pc._matTex2D[e]>a.length){for(var b=a,c=b.charAt(b.length-1),d=pc._matTex2D[e]-b.length,f=0;f<d;f++)b+=c;return b}return a}},_setMapTransform:function(e,a,b,c){e[0]+="uniform vec4 texture_"+a+"MapTransform;\n";var d=b+100*c;e[3][d]||(e[1]+="varying vec2 vUV"+c+"_"+b+";\n",e[2]+="   vUV"+c+"_"+b+" = uv"+c+" * texture_"+a+"MapTransform.xy + texture_"+a+"MapTransform.zw;\n",e[3][d]=!0);return e},_uvSource:function(e,
a){return 0===e?"vUv"+a:"vUV"+a+"_"+e},_addMap:function(e,a,b,c,d,f){var g,k=e+"Map";return a[k+"VertexColor"]?(d||(d=(d=a[e+"Tint"])?1===d?b[e+"VertConstFloatPS"]:b[e+"VertConstPS"]:b[e+"VertPS"]),d.replace(/\$CH/g,a[k+"Channel"])):a[k]?(g=k+"Channel",k=this._uvSource(a[k+"Transform"],a[k+"Uv"])+c,d||(d=(d=a[e+"Tint"])?1===d?b[e+"TexConstFloatPS"]:b[e+"TexConstPS"]:b[e+"TexPS"]),void 0!==f&&(d=d.replace(/\$texture2DSAMPLE/g,0===f?"texture2DSRGB":1===f?"texture2DRGBM":"texture2D")),d.replace(/\$UV/g,
k).replace(/\$CH/g,a[g])):b[e+"ConstPS"]},_nonPointShadowMapProjection:function(e,a,b){return!a._normalOffsetBias||a._isVsm?a._type===pc.LIGHTTYPE_SPOT?a._isPcf&&(e.webgl2||e.extStandardDerivatives)?"       getShadowCoordPerspZbuffer"+b:"       getShadowCoordPersp"+b:"       getShadowCoordOrtho"+b:a._type===pc.LIGHTTYPE_SPOT?a._isPcf&&(e.webgl2||e.extStandardDerivatives)?"       getShadowCoordPerspZbufferNormalOffset"+b:"       getShadowCoordPerspNormalOffset"+b:"       getShadowCoordOrthoNormalOffset"+
b},_addVaryingIfNeeded:function(e,a,b){return 0<=e.indexOf(b)?"varying "+a+" "+b+";\n":""},createShaderDefinition:function(e,a){var b,c,d=0<a.lights.length;a.dirLightMap&&(d=!0,a.useSpecular=!0);a.shadingModel===pc.SPECULAR_PHONG?(a.fresnelModel=0,a.specularAA=!1,a.prefilteredCubemap=!1,a.dpAtlas=!1,a.ambientSH=!1):a.fresnelModel=0===a.fresnelModel?pc.FRESNEL_SCHLICK:a.fresnelModel;var f=a.cubeMap||a.prefilteredCubemap&&a.useSpecular,g=a.sphereMap||f||a.dpAtlas,k=pc.precalculatedTangents,l=a.useTexCubeLod;
if(a.cubeMap||a.prefilteredCubemap)a.sphereMap=null;a.dpAtlas&&(a.sphereMap=a.cubeMap=a.prefilteredCubemap=f=null);a.useSpecular||(a.specularMap=a.glossMap=null);var p=d||g||a.ambientSH||a.prefilteredCubemap;this.options=a;var h="",m="",q="",n=pc.shaderChunks,r;if(a.chunks){var u=[];for(c in n)n.hasOwnProperty(c)&&(a.chunks[c]?(u[c]=a.chunks[c],p||(u[c]=u[c].replace(/vertex_normal/g,"vec3(0)").replace(/vertex_tangent/g,"vec4(0)"))):u[c]=n[c]);n=u}var h=h+n.baseVS,v=-1;if(!a.noShadow){for(b=0;b<a.lights.length;b++)if(r=
a.lights[b]._type,a.lights[b].castShadows&&r===pc.LIGHTTYPE_DIRECTIONAL){h+="uniform mat4 light"+b+"_shadowMatrixVS;\n";h+="uniform vec3 light"+b+"_shadowParamsVS;\n";h+="uniform vec3 light"+b+(r===pc.LIGHTTYPE_DIRECTIONAL?"_directionVS":"_positionVS")+";\n";v=b;break}0<=v&&(h+=n.shadowCoordVS)}u={vertex_position:pc.SEMANTIC_POSITION};m+="   vPositionW    = getWorldPosition();\n";a.useInstancing&&(u.instance_line1=pc.SEMANTIC_TEXCOORD2,u.instance_line2=pc.SEMANTIC_TEXCOORD3,u.instance_line3=pc.SEMANTIC_TEXCOORD4,
u.instance_line4=pc.SEMANTIC_TEXCOORD5,h+=n.instancingVS);p&&(u.vertex_normal=pc.SEMANTIC_NORMAL,m+="   vNormalW    = dNormalW = getNormal();\n",a.sphereMap&&16>=e.fragmentUniformsCount&&(h+=n.viewNormalVS,m+="   vNormalV    = getViewNormal();\n"),(a.heightMap||a.normalMap)&&k&&(u.vertex_tangent=pc.SEMANTIC_TANGENT,h+=n.tangentBinormalVS,m+="   vTangentW   = getTangent();\n   vBinormalW  = getBinormal();\n"),0<=v&&(r=a.lights[v]._type,m=r===pc.LIGHTTYPE_DIRECTIONAL?m+("   dLightDirNormW = light"+
v+"_directionVS;\n"):m+("   getLightDirPoint(light"+v+"_positionVS);\n"),m+=this._nonPointShadowMapProjection(e,a.lights[v],"(light"+v+"_shadowMatrixVS, light"+v+"_shadowParamsVS);\n")));r=[];var B=[],z,t,w;for(c in pc._matTex2D)b=c+"Map",a[b+"VertexColor"]?(z=b+"Channel",a[z]=this._correctChannel(c,a[z])):a[b]&&(z=b+"Channel",t=b+"Transform",w=b+"Uv",a[w]=Math.min(a[w],1),a[z]=this._correctChannel(c,a[z]),w=a[w],r[w]=!0,B[w]=B[w]||a[b]&&!a[t]);a.forceUv1&&(r[1]=!0);for(b=0;2>b;b++)r[b]&&(u["vertex_texCoord"+
b]=pc["SEMANTIC_TEXCOORD"+b],h+=n["uv"+b+"VS"],m+="   vec2 uv"+b+" = getUv"+b+"();\n"),B[b]&&(m+="   vUv"+b+" = uv"+b+";\n");r=[h,q,m,[]];for(c in pc._matTex2D)b=c+"Map",a[b]&&(t=b+"Transform",a[t]&&(w=b+"Uv",this._setMapTransform(r,c,a[t],a[w])));h=r[0];q=r[1];m=r[2];a.vertexColors&&(u.vertex_color=pc.SEMANTIC_COLOR,m+="   vVertexColor = vertex_color;\n");a.screenSpace?(h+=n.transformScreenSpaceVS,p&&(h+=n.normalVS)):a.skin?(u.vertex_boneWeights=pc.SEMANTIC_BLENDWEIGHT,u.vertex_boneIndices=pc.SEMANTIC_BLENDINDICES,
h+=pc.programlib.skinCode(e),h+=n.transformSkinnedVS,p&&(h+=n.normalSkinnedVS)):a.useInstancing?(h+=n.transformInstancedVS,p&&(h+=n.normalInstancedVS)):(h+=n.transformVS,p&&(h+=n.normalVS));h=h+"\n"+n.startVS;c=h=h+m+"}";b=q;q=""+this._addVaryingIfNeeded(h,"vec4","vMainShadowUv");q+=this._addVaryingIfNeeded(h,"vec4","vVertexColor");q+=this._addVaryingIfNeeded(h,"vec3","vPositionW");q+=this._addVaryingIfNeeded(h,"vec3","vNormalV");q+=this._addVaryingIfNeeded(h,"vec3","vNormalW");q+=this._addVaryingIfNeeded(h,
"vec3","vTangentW");q+=this._addVaryingIfNeeded(h,"vec3","vBinormalW");q+=this._addVaryingIfNeeded(h,"vec2","vUv0");q+=this._addVaryingIfNeeded(h,"vec2","vUv1");q+=b;c=q+c;h="";e.webgl2?(h=pc.programlib.versionCode(e),n.extensionVS&&(h+=n.extensionVS+"\n"),c=h+n.gles3VS+c):(n.extensionVS&&(h=n.extensionVS+"\n"),c=h+c);a.forceFragmentPrecision&&"highp"!=a.forceFragmentPrecision&&"mediump"!==a.forceFragmentPrecision&&"lowp"!==a.forceFragmentPrecision&&(a.forceFragmentPrecision=null);a.forceFragmentPrecision&&
("highp"===a.forceFragmentPrecision&&"highp"!==e.maxPrecision&&(a.forceFragmentPrecision="mediump"),"mediump"===a.forceFragmentPrecision&&"lowp"===e.maxPrecision&&(a.forceFragmentPrecision="lowp"));h="";e.webgl2&&(h+=pc.programlib.versionCode(e));e.extStandardDerivatives&&!e.webgl2&&(h+="#extension GL_OES_standard_derivatives : enable\n\n");n.extensionPS&&(h+=n.extensionPS+"\n");e.webgl2&&(h+=n.gles3PS);h+=a.forceFragmentPrecision?"precision "+a.forceFragmentPrecision+" float;\n\n":pc.programlib.precisionCode(e);
if(a.customFragmentShader)return f=h+a.customFragmentShader,{attributes:u,vshader:c,fshader:f,tag:pc.SHADERTAG_MATERIAL};q=h=h+q+n.basePS;h="";B=0;t=[];z=w=!1;for(b=0;b<a.lights.length;b++)if(m=a.lights[b],r=m._type,h+="uniform vec3 light"+b+"_color;\n",r===pc.LIGHTTYPE_DIRECTIONAL?h+="uniform vec3 light"+b+"_direction;\n":(h+="uniform vec3 light"+b+"_position;\n",h+="uniform float light"+b+"_radius;\n",r===pc.LIGHTTYPE_SPOT&&(h+="uniform vec3 light"+b+"_direction;\n",h+="uniform float light"+b+"_innerConeAngle;\n",
h+="uniform float light"+b+"_outerConeAngle;\n")),m.castShadows&&!a.noShadow&&(h+="uniform mat4 light"+b+"_shadowMatrix;\n",h=r!==pc.LIGHTTYPE_DIRECTIONAL?h+("uniform vec4 light"+b+"_shadowParams;\n"):h+("uniform vec3 light"+b+"_shadowParams;\n"),h=r===pc.LIGHTTYPE_POINT?h+("uniform samplerCube light"+b+"_shadowMap;\n"):m._isPcf&&e.webgl2?h+("uniform sampler2DShadow light"+b+"_shadowMap;\n"):h+("uniform sampler2D light"+b+"_shadowMap;\n"),B++,t[m._shadowType]=!0,m._isVsm&&(w=!0),m._isPcf&&(e.webgl2||
e.extStandardDerivatives)&&r===pc.LIGHTTYPE_SPOT&&(z=!0)),m._cookie)if(m._cookie._cubemap)r===pc.LIGHTTYPE_POINT&&(h+="uniform samplerCube light"+b+"_cookie;\n",h+="uniform float light"+b+"_cookieIntensity;\n",!m.castShadows||a.noShadow)&&(h+="uniform mat4 light"+b+"_shadowMatrix;\n");else if(r===pc.LIGHTTYPE_SPOT){h+="uniform sampler2D light"+b+"_cookie;\n";h+="uniform float light"+b+"_cookieIntensity;\n";if(!m.castShadows||a.noShadow)h+="uniform mat4 light"+b+"_shadowMatrix;\n";m._cookieTransform&&
(h+="uniform vec4 light"+b+"_cookieMatrix;\n",h+="uniform vec2 light"+b+"_cookieOffset;\n")}h+="\n";b=a.heightMap?" + dUvOffset":"";r=a.fastTbn?n.TBNfastPS:n.TBNPS;p&&(a.normalMap&&k?(h+=a.packedNormal?n.normalXYPS:n.normalXYZPS,k=this._uvSource(a.normalMapTransform,a.normalMapUv)+b,h=a.needsNormalFloat?h+(a.fastTbn?n.normalMapFloatTBNfastPS:n.normalMapFloatPS).replace(/\$UV/g,k):h+n.normalMapPS.replace(/\$UV/g,k),h+=r):h+=n.normalVertexPS);h+=pc.programlib.gammaCode(a.gamma);h+=pc.programlib.tonemapCode(a.toneMap);
h+=pc.programlib.fogCode(a.fog);a.useRgbm&&(h+=n.rgbmPS);if(f||a.prefilteredCubemap)h+=a.fixSeams?n.fixCubemapSeamsStretchPS:n.fixCubemapSeamsNonePS;p&&(h+=0<a.cubeMapProjection?n.cubeMapProjectBoxPS:n.cubeMapProjectNonePS,h+=a.skyboxIntensity?n.envMultiplyPS:n.envConstPS);h+=this._addMap("diffuse",a,n,b);if(a.blendType!==pc.BLEND_NONE||a.alphaTest||a.alphaToCoverage)h+=this._addMap("opacity",a,n,b);h+=this._addMap("emissive",a,n,b,null,a.emissiveFormat);a.useSpecular&&(d||g)&&(h=a.specularAA&&a.normalMap?
a.needsNormalFloat&&p?h+n.specularAaToksvigFloatPS:h+n.specularAaToksvigPS:h+n.specularAaNonePS,a.useMetalness&&(h+=n.metalnessPS),h+=this._addMap(a.useMetalness?"metalness":"specular",a,n,b),h+=this._addMap("gloss",a,n,b),0<a.fresnelModel&&(a.fresnelModel===pc.FRESNEL_SIMPLE?h+=n.fresnelSimplePS:a.fresnelModel===pc.FRESNEL_SCHLICK?h+=n.fresnelSchlickPS:a.fresnelModel===pc.FRESNEL_COMPLEX&&(h+=n.fresnelComplexPS)));a.heightMap&&(a.normalMap||(h+=r),h+=this._addMap("height",a,n,"",n.parallaxPS));if(k=
a.aoMap||a.aoMapVertexColor)h+=this._addMap("ao",a,n,b,a.aoMapVertexColor?n.aoVertPS:n.aoTexPS),a.occludeSpecular&&(h=a.occludeSpecular===pc.SPECOCC_AO?h+(a.occludeSpecularFloat?n.aoSpecOccSimplePS:n.aoSpecOccConstSimplePS):h+(a.occludeSpecularFloat?n.aoSpecOccPS:n.aoSpecOccConstPS));var y=a.rgbmReflection?"decodeRGBM":a.hdrReflection?"":"gammaCorrectInput";if(f||a.prefilteredCubemap)h=a.prefilteredCubemap?l?h+n.reflectionPrefilteredCubeLodPS.replace(/\$DECODE/g,y):h+n.reflectionPrefilteredCubePS.replace(/\$DECODE/g,
y):h+n.reflectionCubePS.replace(/\$textureCubeSAMPLE/g,a.rgbmReflection?"textureCubeRGBM":a.hdrReflection?"textureCube":"textureCubeSRGB");a.sphereMap&&(r=16<e.fragmentUniformsCount?n.reflectionSpherePS:n.reflectionSphereLowPS,r=r.replace(/\$texture2DSAMPLE/g,a.rgbmReflection?"texture2DRGBM":a.hdrReflection?"texture2D":"texture2DSRGB"),h+=r);a.dpAtlas&&(h+=n.reflectionDpAtlasPS.replace(/\$texture2DSAMPLE/g,a.rgbmReflection?"texture2DRGBM":a.hdrReflection?"texture2D":"texture2DSRGB"));(f||a.sphereMap||
a.dpAtlas)&&a.refraction&&(h+=n.refractionPS);0<B&&(t[pc.SHADOW_PCF3]&&(h+=n.shadowStandardPS),t[pc.SHADOW_PCF5]&&(h+=n.shadowStandardGL2PS),w&&(h+=n.shadowVSM_commonPS,t[pc.SHADOW_VSM8]&&(h+=n.shadowVSM8PS),t[pc.SHADOW_VSM16]&&(h+=e.extTextureHalfFloatLinear?n.shadowEVSMPS.replace(/\$/g,"16"):n.shadowEVSMnPS.replace(/\$/g,"16")),t[pc.SHADOW_VSM32]&&(h+=e.extTextureFloatLinear?n.shadowEVSMPS.replace(/\$/g,"32"):n.shadowEVSMnPS.replace(/\$/g,"32"))),e.webgl2||e.extStandardDerivatives||(h+=n.biasConstPS),
h+=n.shadowCoordPS+n.shadowCommonPS,z&&(h+=n.shadowCoordPerspZbufferPS),0<=v&&(t[pc.SHADOW_PCF3]&&(h+=n.shadowStandardVSPS),t[pc.SHADOW_PCF5]&&(h+=n.shadowStandardGL2VSPS),w&&(t[pc.SHADOW_VSM8]&&(h+=n.shadowVSMVSPS.replace(/\$VSM/g,"VSM8").replace(/\$/g,"8")),t[pc.SHADOW_VSM16]&&(h+=n.shadowVSMVSPS.replace(/\$VSM/g,"VSM16").replace(/\$/g,"16")),t[pc.SHADOW_VSM32]&&(h+=n.shadowVSMVSPS.replace(/\$VSM/g,"VSM32").replace(/\$/g,"32")))));d&&(h+=n.lightDiffuseLambertPS);r=!1;a.useSpecular?(d&&(h+=a.shadingModel===
pc.SPECULAR_PHONG?n.lightSpecularPhongPS:n.lightSpecularBlinnPS),a.sphereMap||f||a.dpAtlas||0<a.fresnelModel?h=0<a.fresnelModel?a.conserveEnergy?h+n.combineDiffuseSpecularPS:h+n.combineDiffuseSpecularNoConservePS:h+n.combineDiffuseSpecularOldPS:a.diffuseMap?h+=n.combineDiffuseSpecularNoReflPS:(h+=n.combineDiffuseSpecularNoReflSeparateAmbientPS,r=!0)):h+=n.combineDiffusePS;m=!0;if(a.lightMap||a.lightMapVertexColor)h+=this._addMap("light",a,n,b,a.lightMapVertexColor?n.lightmapSingleVertPS:a.dirLightMap?
n.lightmapDirPS:n.lightmapSinglePS,a.lightMapFormat),m=a.lightMapWithoutAmbient;m&&(h=a.ambientSH?h+n.ambientSHPS:a.prefilteredCubemap?l?h+n.ambientPrefilteredCubeLodPS.replace(/\$DECODE/g,y):h+n.ambientPrefilteredCubePS.replace(/\$DECODE/g,y):h+n.ambientConstantPS);a.modulateAmbient&&!r&&(h+="uniform vec3 material_ambient;\n");a.alphaTest&&(h+=n.alphaTestPS);a.msdf&&(h+=n.msdfPS);p&&(h+=n.viewDirPS,a.useSpecular&&(h+=n.reflDirPS));z=w=t=B=l=!1;h+=n.startPS;b=!1;a.blendType!==pc.BLEND_NONE||a.alphaTest||
a.alphaToCoverage?a.heightMap&&a.opacityMap?b=!0:(h+="   getOpacity();\n",a.alphaTest&&(h+="   alphaTest(dAlpha);\n")):h+="   dAlpha = 1.0;\n";if(p){h+="   getViewDir();\n";if(a.heightMap||a.normalMap)h+="   getTBN();\n";a.heightMap&&(h+="   getParallax();\n");b&&(h+="   getOpacity();\n",a.alphaTest&&(h+="   alphaTest(dAlpha);\n"));h+="   getNormal();\n";a.useSpecular&&(h+="   getReflDir();\n")}h+="   getAlbedo();\n";if(d&&a.useSpecular||g)h+="   getSpecularity();\n",h+="   getGlossiness();\n",0<
a.fresnelModel&&(h+="   getFresnel();\n");m&&(h+="   addAmbient();\n");a.modulateAmbient&&!r&&(h+="   dDiffuseLight *= material_ambient;\n");k&&!a.occludeDirect&&(h+="    applyAO();\n");if(a.lightMap||a.lightMapVertexColor)h+="   addLightMap();\n";if(d||g){if(f||a.sphereMap||a.dpAtlas)h+="   addReflection();\n";a.dirLightMap&&(h+="   addDirLightMap();\n");for(b=0;b<a.lights.length;b++){m=a.lights[b];r=m._type;g=!1;r===pc.LIGHTTYPE_DIRECTIONAL?(h+="   dLightDirNormW = light"+b+"_direction;\n",h+="   dAtten = 1.0;\n"):
(m._cookie&&(r!==pc.LIGHTTYPE_SPOT||m._cookie._cubemap?r===pc.LIGHTTYPE_POINT&&m._cookie._cubemap&&(g=z=!0):g=z=!0),h+="   getLightDirPoint(light"+b+"_position);\n",l=!0,g&&(h=r===pc.LIGHTTYPE_SPOT?h+("   dAtten3 = getCookie2D"+(m._cookieFalloff?"":"Clip")+(m._cookieTransform?"Xform":"")+"(light"+b+"_cookie, light"+b+"_shadowMatrix, light"+b+"_cookieIntensity"+(m._cookieTransform?", light"+b+"_cookieMatrix, light"+b+"_cookieOffset":"")+")."+m._cookieChannel+";\n"):h+("   dAtten3 = getCookieCube(light"+
b+"_cookie, light"+b+"_shadowMatrix, light"+b+"_cookieIntensity)."+m._cookieChannel+";\n")),m._falloffMode===pc.LIGHTFALLOFF_LINEAR?(h+="   dAtten = getFalloffLinear(light"+b+"_radius);\n",B=!0):(h+="   dAtten = getFalloffInvSquared(light"+b+"_radius);\n",t=!0),h+="   if (dAtten > 0.00001) {\n",r!==pc.LIGHTTYPE_SPOT||g&&!m._cookieFalloff||(h+="       dAtten *= getSpotEffect(light"+b+"_direction, light"+b+"_innerConeAngle, light"+b+"_outerConeAngle);\n",w=!0));h+="       dAtten *= getLightDiffuse();\n";
if(m.castShadows&&!a.noShadow){var A;m._shadowType===pc.SHADOW_VSM8?(p="VSM8",A="0.0"):m._shadowType===pc.SHADOW_VSM16?(p="VSM16",A="5.54"):m._shadowType===pc.SHADOW_VSM32?(p="VSM32",A=e.extTextureFloatHighPrecision?"15.0":"5.54"):p=m._shadowType===pc.SHADOW_PCF5?"PCF5x5":"PCF3x3";null!==p&&(r===pc.LIGHTTYPE_POINT?(d="(light"+b+"_shadowMap, light"+b+"_shadowParams);\n",m._normalOffsetBias&&(h+="       normalOffsetPointShadow(light"+b+"_shadowParams);\n"),h+="       dAtten *= getShadowPoint"+p+d):
(v===b?p+="VS":(d="(light"+b+"_shadowMatrix, light"+b+"_shadowParams);\n",h+=this._nonPointShadowMapProjection(e,a.lights[b],d)),r===pc.LIGHTTYPE_SPOT&&(p="Spot"+p),h+="       dAtten *= getShadow"+p+"(light"+b+"_shadowMap, light"+b+"_shadowParams"+(m._isVsm?", "+A:"")+");\n"))}h+="       dDiffuseLight += dAtten * light"+b+"_color"+(g?" * dAtten3":"")+";\n";a.useSpecular&&(h+="       dAtten *= getLightSpecular();\n",h+="       dSpecularLight += dAtten * light"+b+"_color"+(g?" * dAtten3":"")+";\n");
r!==pc.LIGHTTYPE_DIRECTIONAL&&(h+="   }\n");h+="\n"}(f||a.sphereMap||a.dpAtlas)&&a.refraction&&(h+="   addRefraction();\n")}h+="\n";k&&(a.occludeDirect&&(h+="    applyAO();\n"),a.occludeSpecular&&(h+="    occludeSpecular();\n"));h+=n.endPS;h=a.blendType===pc.BLEND_NORMAL||a.blendType===pc.BLEND_ADDITIVEALPHA||a.alphaToCoverage?h+n.outputAlphaPS:a.blendType===pc.BLEND_PREMULTIPLIED?h+n.outputAlphaPremulPS:h+n.outputAlphaOpaquePS;a.msdf&&(h+="   gl_FragColor = applyMsdf(gl_FragColor);\n");h+="\n";h+=
pc.programlib.end();l&&(h=n.lightDirPointPS+h);B&&(h=n.falloffLinearPS+h);t&&(h=n.falloffInvSquaredPS+h);w&&(h=n.spotPS+h);z&&(h=n.cookiePS+h);f="";h.includes("dReflection")&&(f+="vec4 dReflection;\n");h.includes("dTBN")&&(f+="mat3 dTBN;\n");h.includes("dAlbedo")&&(f+="vec3 dAlbedo;\n");h.includes("dEmission")&&(f+="vec3 dEmission;\n");h.includes("dNormalW")&&(f+="vec3 dNormalW;\n");h.includes("dViewDirW")&&(f+="vec3 dViewDirW;\n");h.includes("dReflDirW")&&(f+="vec3 dReflDirW;\n");h.includes("dDiffuseLight")&&
(f+="vec3 dDiffuseLight;\n");h.includes("dSpecularLight")&&(f+="vec3 dSpecularLight;\n");h.includes("dLightDirNormW")&&(f+="vec3 dLightDirNormW;\n");h.includes("dLightDirW")&&(f+="vec3 dLightDirW;\n");h.includes("dLightPosW")&&(f+="vec3 dLightPosW;\n");h.includes("dShadowCoord")&&(f+="vec3 dShadowCoord;\n");h.includes("dNormalMap")&&(f+="vec3 dNormalMap;\n");h.includes("dSpecularity")&&(f+="vec3 dSpecularity;\n");h.includes("dUvOffset")&&(f+="vec2 dUvOffset;\n");h.includes("dGlossiness")&&(f+="float dGlossiness;\n");
h.includes("dAlpha")&&(f+="float dAlpha;\n");h.includes("dAtten")&&(f+="float dAtten;\n");h.includes("dAtten3")&&(f+="vec3 dAtten3;\n");h.includes("dAo")&&(f+="float dAo;\n");h.includes("dMsdf")&&(f+="vec4 dMsdf;\n");f=h=q+f+h;return{attributes:u,vshader:c,fshader:f,tag:pc.SHADERTAG_MATERIAL}}};pc.programlib.pick={generateKey:function(e,a){var b="pick";a.skin&&(b+="_skin");a.opacityMap&&(b+="_opam"+a.opacityChannel);a.screenSpace&&(b+="_screenspace");return b},createShaderDefinition:function(e,a){var b={vertex_position:pc.SEMANTIC_POSITION};a.skin&&(b.vertex_boneWeights=pc.SEMANTIC_BLENDWEIGHT,b.vertex_boneIndices=pc.SEMANTIC_BLENDINDICES);a.opacityMap&&(b.vertex_texCoord0=pc.SEMANTIC_TEXCOORD0);var c=pc.shaderChunks,d;d=""+c.transformDeclVS;a.skin?(d+=pc.programlib.skinCode(e),d+=c.transformSkinnedVS):
d=a.screenSpace?d+c.transformScreenSpaceVS:d+c.transformVS;a.opacityMap&&(d+="attribute vec2 vertex_texCoord0;\n\nvarying vec2 vUv0;\n\n");d+=pc.programlib.begin();d+="   gl_Position = getPosition();\n";a.opacityMap&&(d+="    vUv0 = vertex_texCoord0;\n");var f=d+=pc.programlib.end();d=pc.programlib.precisionCode(e);d+="uniform vec4 uColor;";a.opacityMap&&(d=d+"varying vec2 vUv0;\n\nuniform sampler2D texture_opacityMap;\n\n"+c.alphaTestPS);d+=pc.programlib.begin();a.opacityMap&&(d+="    alphaTest( texture2D(texture_opacityMap, vUv0)."+
a.opacityChannel[0]+" );\n\n");d=d+"    gl_FragColor = uColor;\n"+pc.programlib.end();return{attributes:b,vshader:f,fshader:d}}};pc.programlib.skybox={generateKey:function(e,a){return"skybox"+a.rgbm+" "+a.hdr+" "+a.fixSeams+""+a.toneMapping+""+a.gamma+""+a.useIntensity+""+a.mip},createShaderDefinition:function(e,a){var b=pc.shaderChunks;return{attributes:{aPosition:pc.SEMANTIC_POSITION},vshader:b.skyboxVS,fshader:pc.programlib.precisionCode(e)+(a.mip?b.fixCubemapSeamsStretchPS:b.fixCubemapSeamsNonePS)+(a.useIntensity?b.envMultiplyPS:b.envConstPS)+pc.programlib.gammaCode(a.gamma)+pc.programlib.tonemapCode(a.toneMapping)+b.rgbmPS+
b.skyboxHDRPS.replace(/\$textureCubeSAMPLE/g,a.rgbm?"textureCubeRGBM":a.hdr?"textureCube":"textureCubeSRGB").replace(/\$FIXCONST/g,1-1/[128,64,16,8,4,2][a.mip]+"")}}};pc.extend(pc,function(){var e={type:pc.PRIMITIVE_TRISTRIP,base:0,count:4,indexed:!1},a=function(a){this.device=a;this.depthMap=this.shader=null;this.vertexBuffer=pc.createFullscreenQuad(a);this.needsDepthBuffer=!1};a.prototype={render:function(a,c,d){}};return{PostEffect:a,createFullscreenQuad:function(a){var b=new pc.VertexFormat(a,[{semantic:pc.SEMANTIC_POSITION,components:2,type:pc.ELEMENTTYPE_FLOAT32}]);a=new pc.VertexBuffer(a,b,4);b=new pc.VertexIterator(a);b.element[pc.SEMANTIC_POSITION].set(-1,
-1);b.next();b.element[pc.SEMANTIC_POSITION].set(1,-1);b.next();b.element[pc.SEMANTIC_POSITION].set(-1,1);b.next();b.element[pc.SEMANTIC_POSITION].set(1,1);b.end();return a},drawFullscreenQuad:function(a,c,d,f,g){a.setRenderTarget(c);a.updateBegin();var b=null!==c?c.width:a.width;c=null!==c?c.height:a.height;var l=0,p=0;g&&(l=g.x*b,p=g.y*c,b*=g.z,c*=g.w);a.setViewport(l,p,b,c);a.setScissor(l,p,b,c);g=a.getBlending();b=a.getDepthTest();c=a.getDepthWrite();var l=a.getCullMode(),p=a.writeRed,h=a.writeGreen,
m=a.writeBlue,q=a.writeAlpha;a.setBlending(!1);a.setDepthTest(!1);a.setDepthWrite(!1);a.setCullMode(pc.CULLFACE_BACK);a.setColorWrite(!0,!0,!0,!0);a.setVertexBuffer(d,0);a.setShader(f);a.draw(e);a.setBlending(g);a.setDepthTest(b);a.setDepthWrite(c);a.setCullMode(l);a.setColorWrite(p,h,m,q);a.updateEnd()}}}());(function(){var e={BLEND_SUBTRACTIVE:0,BLEND_ADDITIVE:1,BLEND_NORMAL:2,BLEND_NONE:3,BLEND_PREMULTIPLIED:4,BLEND_MULTIPLICATIVE:5,BLEND_ADDITIVEALPHA:6,BLEND_MULTIPLICATIVE2X:7,BLEND_SCREEN:8,BLEND_MIN:9,BLEND_MAX:10,FOG_NONE:"none",FOG_LINEAR:"linear",FOG_EXP:"exp",FOG_EXP2:"exp2",FRESNEL_NONE:0,FRESNEL_SCHLICK:2,LAYER_HUD:0,LAYER_GIZMO:1,LAYER_FX:2,LAYER_WORLD:15,LIGHTTYPE_DIRECTIONAL:0,LIGHTTYPE_POINT:1,LIGHTTYPE_SPOT:2,LIGHTFALLOFF_LINEAR:0,LIGHTFALLOFF_INVERSESQUARED:1,SHADOW_PCF3:0,SHADOW_DEPTH:0,
SHADOW_VSM8:1,SHADOW_VSM16:2,SHADOW_VSM32:3,SHADOW_PCF5:4,BLUR_BOX:0,BLUR_GAUSSIAN:1,PARTICLESORT_NONE:0,PARTICLESORT_DISTANCE:1,PARTICLESORT_NEWER_FIRST:2,PARTICLESORT_OLDER_FIRST:3,PARTICLEMODE_GPU:0,PARTICLEMODE_CPU:1,EMITTERSHAPE_BOX:0,EMITTERSHAPE_SPHERE:1,PROJECTION_PERSPECTIVE:0,PROJECTION_ORTHOGRAPHIC:1,RENDERSTYLE_SOLID:0,RENDERSTYLE_WIREFRAME:1,RENDERSTYLE_POINTS:2,CUBEPROJ_NONE:0,CUBEPROJ_BOX:1,SPECULAR_PHONG:0,SPECULAR_BLINN:1,GAMMA_NONE:0,GAMMA_SRGB:1,GAMMA_SRGBFAST:2,GAMMA_SRGBHDR:3,
TONEMAP_LINEAR:0,TONEMAP_FILMIC:1,TONEMAP_HEJL:2,TONEMAP_ACES:3,TONEMAP_ACES2:4,SPECOCC_NONE:0,SPECOCC_AO:1,SPECOCC_GLOSSDEPENDENT:2,SHADERDEF_NOSHADOW:1,SHADERDEF_SKIN:2,SHADERDEF_UV0:4,SHADERDEF_UV1:8,SHADERDEF_VCOLOR:16,SHADERDEF_INSTANCING:32,SHADERDEF_LM:64,SHADERDEF_DIRLM:128,SHADERDEF_SCREENSPACE:256,LINEBATCH_WORLD:0,LINEBATCH_OVERLAY:1,LINEBATCH_GIZMO:2,SHADOWUPDATE_NONE:0,SHADOWUPDATE_THISFRAME:1,SHADOWUPDATE_REALTIME:2,SORTKEY_FORWARD:0,SORTKEY_DEPTH:1,SHADER_FORWARD:0,SHADER_FORWARDHDR:1,
SHADER_DEPTH:2,SHADER_SHADOW:3,SHADER_PICK:18,BAKE_COLOR:0,BAKE_COLORDIR:1};pc.extend(pc,e);pc.scene={};pc.extend(pc.scene,e)})();
pc.extend(pc,function(){var e=function(){this.root=null;this._gravity=new pc.Vec3(0,-9.8,0);this.drawCalls=[];this.shadowCasters=[];this.immediateDrawCalls=[];this._fog=pc.FOG_NONE;this.fogColor=new pc.Color(0,0,0);this.fogStart=1;this.fogEnd=1E3;this.fogDensity=0;this.ambientLight=new pc.Color(0,0,0);this._gammaCorrection=pc.GAMMA_NONE;this._toneMapping=0;this.exposure=1;this._skyboxPrefiltered=[null,null,null,null,null,null];this._skyboxModel=this._skyboxCubeMap=null;this._skyboxIntensity=1;this._skyboxMip=
0;this.lightmapSizeMultiplier=1;this.lightmapMaxResolution=2048;this.lightmapMode=pc.BAKE_COLORDIR;this._stats={meshInstances:0,lights:0,dynamicLights:0,bakedLights:0,lastStaticPrepareFullTime:0,lastStaticPrepareSearchTime:0,lastStaticPrepareWriteTime:0,lastStaticPrepareTriAabbTime:0,lastStaticPrepareCombineTime:0,updateShadersTime:0};this._models=[];this._lights=[];this._globalLights=[];this._localLights=[[],[]];this._updateShaders=!0;this._sceneShadersVersion=0;this._needsStaticPrepare=!0};Object.defineProperty(e.prototype,
"updateShaders",{get:function(){return this._updateShaders},set:function(a){if(a!==this._updateShaders&&(this._updateShaders=a,this._models))for(a&&this._sceneShadersVersion++,a=0;a<this._models.length;a++)this._models[a]._shadersVersion=this._sceneShadersVersion}});Object.defineProperty(e.prototype,"fog",{get:function(){return this._fog},set:function(a){a!==this._fog&&(this._fog=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"gammaCorrection",{get:function(){return this._gammaCorrection},
set:function(a){a!==this._gammaCorrection&&(this._gammaCorrection=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"toneMapping",{get:function(){return this._toneMapping},set:function(a){a!==this._toneMapping&&(this._toneMapping=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"skybox",{get:function(){return this._skyboxCubeMap},set:function(a){this._skyboxCubeMap=a;this._resetSkyboxModel();this.updateShaders=!0}});Object.defineProperty(e.prototype,"skyboxIntensity",{get:function(){return this._skyboxIntensity},
set:function(a){this._skyboxIntensity=a;this._resetSkyboxModel();this.updateShaders=!0}});Object.defineProperty(e.prototype,"skyboxMip",{get:function(){return this._skyboxMip},set:function(a){this._skyboxMip=a;this._resetSkyboxModel();this.updateShaders=!0}});Object.defineProperty(e.prototype,"skyboxPrefiltered128",{get:function(){return this._skyboxPrefiltered[0]},set:function(a){this._skyboxPrefiltered[0]!==a&&(this._skyboxPrefiltered[0]=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,
"skyboxPrefiltered64",{get:function(){return this._skyboxPrefiltered[1]},set:function(a){this._skyboxPrefiltered[1]!==a&&(this._skyboxPrefiltered[1]=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"skyboxPrefiltered32",{get:function(){return this._skyboxPrefiltered[2]},set:function(a){this._skyboxPrefiltered[2]!==a&&(this._skyboxPrefiltered[2]=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"skyboxPrefiltered16",{get:function(){return this._skyboxPrefiltered[3]},set:function(a){this._skyboxPrefiltered[3]!==
a&&(this._skyboxPrefiltered[3]=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"skyboxPrefiltered8",{get:function(){return this._skyboxPrefiltered[4]},set:function(a){this._skyboxPrefiltered[4]!==a&&(this._skyboxPrefiltered[4]=a,this.updateShaders=!0)}});Object.defineProperty(e.prototype,"skyboxPrefiltered4",{get:function(){return this._skyboxPrefiltered[5]},set:function(a){this._skyboxPrefiltered[5]!==a&&(this._skyboxPrefiltered[5]=a,this.updateShaders=!0)}});e.prototype.applySettings=
function(a){this._gravity.set(a.physics.gravity[0],a.physics.gravity[1],a.physics.gravity[2]);this.ambientLight.set(a.render.global_ambient[0],a.render.global_ambient[1],a.render.global_ambient[2]);this._fog=a.render.fog;this.fogColor.set(a.render.fog_color[0],a.render.fog_color[1],a.render.fog_color[2]);this.fogStart=a.render.fog_start;this.fogEnd=a.render.fog_end;this.fogDensity=a.render.fog_density;this._gammaCorrection=a.render.gamma_correction;this._toneMapping=a.render.tonemapping;this.lightmapSizeMultiplier=
a.render.lightmapSizeMultiplier;this.lightmapMaxResolution=a.render.lightmapMaxResolution;this.lightmapMode=a.render.lightmapMode;this.exposure=a.render.exposure;this._skyboxIntensity=void 0===a.render.skyboxIntensity?1:a.render.skyboxIntensity;this._skyboxMip=void 0===a.render.skyboxMip?0:a.render.skyboxMip;this._resetSkyboxModel();this.updateShaders=!0};e.prototype.updateShadersFunc=function(a){var b,c=pc.now();if(this._skyboxCubeMap&&!this._skyboxModel){var d=new pc.Material,f=this;d.updateShader=
function(b,c,d,e,g){b=a.getProgramLibrary().getProgram("skybox",{rgbm:f._skyboxCubeMap.rgbm,hdr:f._skyboxCubeMap.rgbm||f._skyboxCubeMap.format===pc.PIXELFORMAT_RGBA32F,useIntensity:1!==f.skyboxIntensity,mip:f._skyboxCubeMap.fixCubemapSeams?f.skyboxMip:0,fixSeams:f._skyboxCubeMap.fixCubemapSeams,gamma:g===pc.SHADER_FORWARDHDR?f.gammaCorrection?pc.GAMMA_SRGBHDR:pc.GAMMA_NONE:f.gammaCorrection,toneMapping:g===pc.SHADER_FORWARDHDR?pc.TONEMAP_LINEAR:f.toneMapping});this.setShader(b)};d.updateShader();
this._skyboxCubeMap.fixCubemapSeams&&f._skyboxMip?(b=this["skyboxPrefiltered"+[null,"64","16","8","4"][f._skyboxMip]])&&d.setParameter("texture_cubeMap",b):d.setParameter("texture_cubeMap",this._skyboxCubeMap);d.cull=pc.CULLFACE_NONE;b=new pc.GraphNode;var e=pc.createBox(a),d=new pc.MeshInstance(b,e,d);d.updateKey=function(){this.key=pc._getDrawcallSortKey(this.layer,this.material.blendType,!1,0)};d.updateKey();d.cull=!1;d.drawToDepth=!1;e=new pc.Model;e.graph=b;e.meshInstances=[d];this._skyboxModel=
e;this.addModel(e)}d=[];e=this.drawCalls;for(b=0;b<e.length;b++){var k=e[b];void 0!==k.material&&-1===d.indexOf(k.material)&&d.push(k.material)}for(b=0;b<d.length;b++)e=d[b],e.updateShader!==pc.Material.prototype.updateShader&&(e.clearVariants(),e.shader=null);this._stats.updateShadersTime+=pc.now()-c};e.prototype.getModels=function(){return this._models};e.prototype._updateStats=function(){};e.prototype._updateLightStats=function(){var a=this._stats;a.lights=this._lights.length;a.dynamicLights=0;
a.bakedLights=0;for(var b,c=0;c<a.lights;c++)b=this._lights[c],b._enabled&&((b._mask&pc.MASK_DYNAMIC||b._mask&pc.MASK_BAKED)&&a.dynamicLights++,b._mask&pc.MASK_LIGHTMAP&&a.bakedLights++)};e.prototype.addModel=function(a){var b,c=a._shadersVersion!==this._sceneShadersVersion;a._shadersVersion=this._sceneShadersVersion;if(-1===this._models.indexOf(a)){this._models.push(a);var d=a.getMaterials();for(b=0;b<d.length;b++)d[b].scene=this;var f=a.meshInstances.length;for(b=0;b<f;b++)d=a.meshInstances[b],
c&&d.material.clearVariants(),-1===this.drawCalls.indexOf(d)&&this.drawCalls.push(d),d.castShadow&&-1===this.shadowCasters.indexOf(d)&&this.shadowCasters.push(d);c=a.getLights();b=0;for(a=c.length;b<a;b++)this.addLight(c[b]);this._updateStats()}};e.prototype.addShadowCaster=function(a){for(var b,c=a.meshInstances.length,d=0;d<c;d++)b=a.meshInstances[d],b.castShadow&&-1===this.shadowCasters.indexOf(b)&&this.shadowCasters.push(b)};e.prototype.removeModel=function(a){var b,c,d,f,e,k;d=this._models.indexOf(a);
if(-1!==d){this._models.splice(d,1);d=a.getMaterials();for(b=0;b<d.length;b++)d[b].scene=null;var l,p=a.meshInstances.length;for(b=0;b<p;b++){l=a.meshInstances[b];e=-1;k=0;d=this.drawCalls.length;for(c=0;c<d;c++){f=this.drawCalls[c];if(f===l){e=c;k=1;break}if(f._staticSource===l)0>e&&(e=c),k++;else if(0<=e)break}0<=e&&this.drawCalls.splice(e,k);l.castShadow&&(d=this.shadowCasters.indexOf(l),-1!==d&&this.shadowCasters.splice(d,1))}a=a.getLights();b=0;for(d=a.length;b<d;b++)this.removeLight(a[b]);this._updateStats()}};
e.prototype.removeShadowCaster=function(a){for(var b,c=a.meshInstances.length,d=0;d<c;d++)b=a.meshInstances[d],b.castShadow&&(b=this.shadowCasters.indexOf(b),-1!==b&&this.shadowCasters.splice(b,1))};e.prototype.containsModel=function(a){return 0<=this._models.indexOf(a)};e.prototype.addLight=function(a){-1!==this._lights.indexOf(a)?console.warn("pc.Scene#addLight: light is already in the scene"):(this._lights.push(a),a._scene=this,this.updateShaders=!0);this._updateLightStats()};e.prototype.removeLight=
function(a){var b=this._lights.indexOf(a);-1===b?console.warn("pc.Scene#removeLight: light is not in the scene"):(this._lights.splice(b,1),a._scene=null,this.updateShaders=!0);this._updateLightStats()};e.prototype._resetSkyboxModel=function(){this._skyboxModel&&this.containsModel(this._skyboxModel)&&this.removeModel(this._skyboxModel);this._skyboxModel=null};e.prototype.setSkybox=function(a){a||(a=[null,null,null,null,null,null,null]);var b=!1;this._skyboxCubeMap!==a[0]&&(b=!0);if(!b)for(var c=0;6>
c&&!b;c++)this._skyboxPrefiltered[c]!==a[c+1]&&(b=!0);if(b){for(c=0;6>c;c++)this._skyboxPrefiltered[c]=a[c+1];this.skybox=a[0]}};e.prototype.update=function(){for(var a=0,b=this._models.length;a<b;a++)this._models[a].getGraph().syncHierarchy()};e.prototype.destroy=function(){var a,b=this.getModels();for(a=0;a<b.length;a++)this.removeModel(b[a]);for(a=0;a<this._lights.length;a++)this.removeLight(this._lights[a]);this.skybox=null};return{Scene:e}}());pc.extend(pc,function(){function e(a){var b=Array(a);a=function(a){return b[a]};a.size=0;a.push=function(a){b[this.size]=a;++this.size};a.data=b;return a}function a(a,b){if(b!==pc.SHADOW_PCF3||a.webgl2){if(b===pc.SHADOW_VSM32)return a.extTextureFloatLinear?pc.FILTER_LINEAR:pc.FILTER_NEAREST;if(b===pc.SHADOW_VSM16)return a.extTextureHalfFloatLinear?pc.FILTER_LINEAR:pc.FILTER_NEAREST}else return pc.FILTER_NEAREST;return pc.FILTER_LINEAR}function b(b,c,d,f){var e=f===pc.SHADOW_VSM32?pc.PIXELFORMAT_RGBA32F:
f===pc.SHADOW_VSM16?pc.PIXELFORMAT_RGBA16F:f===pc.SHADOW_PCF5||f===pc.SHADOW_PCF3&&b.webgl2?pc.PIXELFORMAT_DEPTH:pc.PIXELFORMAT_R8_G8_B8_A8,g=a(b,f);c=new pc.Texture(b,{format:e,width:c,height:d,mipmaps:!1,minFilter:g,magFilter:g,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE});return f===pc.SHADOW_PCF5||f===pc.SHADOW_PCF3&&b.webgl2?(c.compareOnRead=!0,c.compareFunc=pc.FUNC_LESS,new pc.RenderTarget({depthBuffer:c})):new pc.RenderTarget({colorBuffer:c,depth:!0})}function c(a,b){for(var c=
new pc.Texture(a,{format:pc.PIXELFORMAT_R8_G8_B8_A8,width:b,height:b,cubemap:!0,mipmaps:!1,minFilter:pc.FILTER_NEAREST,magFilter:pc.FILTER_NEAREST,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE}),d=[],f,e=0;6>e;e++)f=new pc.RenderTarget({colorBuffer:c,face:e,depth:!0}),d.push(f);return d}function d(a){25<a&&(a=25);var b=(a-1)/6,c,d,f,e;e=.5*(a-1);d=Array(a);for(c=f=0;c<a;++c){var g=c-e;d[c]=Math.exp(-(g*g)/(2*b*b));f+=d[c]}for(c=0;c<a;++c)d[c]/=f;return d}function f(a,c,d,f){f||
(f=0);f=1E4*f+c;var e=n[d][f];e||(e=b(a,c,c,d?d:pc.SHADOW_PCF3),n[d][f]=e);return e}function g(a,d){var e;d._type===pc.LIGHTTYPE_POINT?(d._shadowType>pc.SHADOW_PCF3&&(d._shadowType=pc.SHADOW_PCF3),d._cacheShadowMap?(e=fa[d._shadowResolution],e||(e=c(a,d._shadowResolution),fa[d._shadowResolution]=e)):e=c(a,d._shadowResolution),d._shadowCamera.renderTarget=e[0],d._shadowCubeMap=e):(e=d._cacheShadowMap?f(a,d._shadowResolution,d._shadowType):b(a,d._shadowResolution,d._shadowResolution,d._shadowType),
d._shadowCamera.renderTarget=e);d._isCachedShadowMap=d._cacheShadowMap}function k(a){var b=a.material;a=a.skinInstance?10:0;var c=0;b.opacityMap&&(b=b.opacityMapChannel)&&(c=q[b]);return a+c}function l(a){a=this.device=a;this._instancingTime=this._skinTime=this._sortTime=this._cullTime=this._forwardTime=this._depthMapTime=this._shadowMapTime=this._shadowMapUpdates=this._materialSwitches=this._camerasRendered=this._removedByInstancing=this._immediateRendered=this._instancedDrawCalls=this._skinDrawCalls=
this._forwardDrawCalls=this._shadowDrawCalls=this._depthDrawCalls=0;var b=a.getProgramLibrary();this.library=b;this.frontToBack=!1;this._depthShaderStatic=b.getProgram("depth",{skin:!1});this._depthShaderSkin=b.getProgram("depth",{skin:!0});this._depthShaderStaticOp={};this._depthShaderSkinOp={};for(var c=["r","g","b","a"],d=0;4>d;d++)this._depthShaderStaticOp[c[d]]=b.getProgram("depth",{skin:!1,opacityMap:!0,opacityChannel:c[d]}),this._depthShaderSkinOp[c[d]]=b.getProgram("depth",{skin:!0,opacityMap:!0,
opacityChannel:c[d]}),this._depthShaderStaticOp[c[d]]=b.getProgram("depth",{skin:!1,opacityMap:!0,opacityChannel:c[d]}),this._depthShaderSkinOp[c[d]]=b.getProgram("depth",{skin:!0,opacityMap:!0,opacityChannel:c[d]});a=a.scope;this.projId=a.resolve("matrix_projection");this.viewId=a.resolve("matrix_view");this.viewId3=a.resolve("matrix_view3");this.viewInvId=a.resolve("matrix_viewInverse");this.viewProjId=a.resolve("matrix_viewProjection");this.viewPosId=a.resolve("view_position");this.nearClipId=
a.resolve("camera_near");this.farClipId=a.resolve("camera_far");this.shadowMapLightRadiusId=a.resolve("light_radius");this.fogColorId=a.resolve("fog_color");this.fogStartId=a.resolve("fog_start");this.fogEndId=a.resolve("fog_end");this.fogDensityId=a.resolve("fog_density");this.modelMatrixId=a.resolve("matrix_model");this.normalMatrixId=a.resolve("matrix_normal");this.poseMatrixId=a.resolve("matrix_pose[0]");this.boneTextureId=a.resolve("texture_poseMap");this.boneTextureSizeId=a.resolve("texture_poseMapSize");
this.skinPosOffsetId=a.resolve("skinPosOffset");this.alphaTestId=a.resolve("alpha_ref");this.opacityMapId=a.resolve("texture_opacityMap");this.ambientId=a.resolve("light_globalAmbient");this.exposureId=a.resolve("exposure");this.skyboxIntensityId=a.resolve("skyboxIntensity");this.lightColorId=[];this.lightDirId=[];this.lightShadowMapId=[];this.lightShadowMatrixId=[];this.lightShadowParamsId=[];this.lightShadowMatrixVsId=[];this.lightShadowParamsVsId=[];this.lightDirVsId=[];this.lightRadiusId=[];this.lightPosId=
[];this.lightInAngleId=[];this.lightOutAngleId=[];this.lightPosVsId=[];this.lightCookieId=[];this.lightCookieIntId=[];this.lightCookieMatrixId=[];this.lightCookieOffsetId=[];this.depthMapId=a.resolve("uDepthMap");this.screenSizeId=a.resolve("uScreenSize");this._screenSize=new pc.Vec4;this.sourceId=a.resolve("source");this.pixelOffsetId=a.resolve("pixelOffset");this.weightId=a.resolve("weight[0]");b=pc.shaderChunks;this.blurVsmShaderCode=[b.blurVSMPS,"#define GAUSS\n"+b.blurVSMPS];this.blurPackedVsmShaderCode=
["#define PACKED\n"+this.blurVsmShaderCode[0],"#define PACKED\n"+this.blurVsmShaderCode[1]];this.blurVsmShader=[{},{}];this.blurPackedVsmShader=[{},{}];this.blurVsmWeights={};this.polygonOffsetId=a.resolve("polygonOffset");this.polygonOffset=new Float32Array(2);this.fogColor=new Float32Array(3);this.ambientColor=new Float32Array(3)}function p(a,b){a.data[0]=b.data[0];a.data[1]=b.data[1];a.data[2]=b.data[2];a.data[3]=b.data[4];a.data[4]=b.data[5];a.data[5]=b.data[6];a.data[6]=b.data[8];a.data[7]=b.data[9];
a.data[8]=b.data[10]}var h=(new pc.Mat4).mul2((new pc.Mat4).setTranslate(.5,.5,.5),(new pc.Mat4).setScale(.5,.5,.5)),m={color:[254/255,254/255,254/255,254/255],depth:1,flags:pc.CLEARFLAG_COLOR|pc.CLEARFLAG_DEPTH},q={r:1,g:2,b:3,a:4},n=[{},{},{},{},{}],r=new pc.Vec2,u={x:1,y:1,z:0,w:0},v=new pc.Mat4,B=new pc.Mat4,z=new pc.Mat4,t=new pc.Mat4,w=new pc.Mat4,y=new pc.Mat3,A=new pc.Mat4,x=new pc.Mat4,C=new pc.Mat4,I=new pc.Mat4,M=new pc.Mat4,K=new pc.Vec3,H=new pc.Vec3,F,D,O=new pc.Mat4,U=new pc.Mat4,V=
new pc.Mat4,ca=new pc.Mat4,ba=new pc.Vec3,W={center:null,radius:0},N,Y=new pc.BoundingBox;new pc.BoundingBox;for(var S=[],Z=[],da=[0,0],ha,E,J,P,fa={},ea,ga,aa=[],X=0;8>X;X++)aa.push(new pc.Vec3);new pc.Vec3;new pc.Vec3;new pc.Vec3;new e(3);new e(3);new e(3);new e(36);var Q=[new pc.Vec3,new pc.Vec3,new pc.Vec3,new pc.Vec3,new pc.Vec3,new pc.Vec3,new pc.Vec3,new pc.Vec3];pc.extend(l.prototype,{sortCompare:function(a,b){if(a.layer===b.layer){if(a.drawOrder&&b.drawOrder)return a.drawOrder-b.drawOrder;
if(a.zdist&&b.zdist)return b.zdist-a.zdist;if(a.zdist2&&b.zdist2)return a.zdist2-b.zdist2}return b._key[pc.SORTKEY_FORWARD]-a._key[pc.SORTKEY_FORWARD]},sortCompareMesh:function(a,b){if(a.layer===b.layer){if(a.drawOrder&&b.drawOrder)return a.drawOrder-b.drawOrder;if(a.zdist&&b.zdist)return b.zdist-a.zdist}ea=a._key[pc.SORTKEY_FORWARD];ga=b._key[pc.SORTKEY_FORWARD];return ea===ga&&a.mesh&&b.mesh?b.mesh.id-a.mesh.id:ga-ea},depthSortCompare:function(a,b){ea=a._key[pc.SORTKEY_DEPTH];ga=b._key[pc.SORTKEY_DEPTH];
return ea===ga&&a.mesh&&b.mesh?b.mesh.id-a.mesh.id:ga-ea},lightCompare:function(a,b){return a.key-b.key},_isVisible:function(a,b){if(!b.visible)return!1;N=b.aabb.center;b._aabb._radiusVer!==b._aabbVer&&(b._aabb._radius=b._aabb.halfExtents.length(),b._aabb._radiusVer=b._aabbVer);W.radius=b._aabb._radius;W.center=N;return a.frustum.containsSphere(W)},getShadowCamera:function(a,b){var c=b._shadowCamera,d;if(null===c){c=b._shadowType;d=pc.CLEARFLAG_DEPTH;var f=c===pc.SHADOW_PCF5||c===pc.SHADOW_PCF3&&
a.webgl2;b._type===pc.LIGHTTYPE_POINT&&(f=!1);f||(d|=pc.CLEARFLAG_COLOR);f=new pc.Camera;c>=pc.SHADOW_VSM8&&c<=pc.SHADOW_VSM32?(f.clearColor[0]=0,f.clearColor[1]=0,f.clearColor[2]=0,f.clearColor[3]=0):(f.clearColor[0]=1,f.clearColor[1]=1,f.clearColor[2]=1,f.clearColor[3]=1);f.clearDepth=1;f.clearFlags=d;f.clearStencil=null;f._node=new pc.GraphNode;c=b._shadowCamera=f;g(a,b)}else d=c.renderTarget,d.width===b._shadowResolution&&d.height===b._shadowResolution||g(a,b);return c},updateCameraFrustum:function(a){var b;
if(a.vrDisplay&&a.vrDisplay.presenting){b=a.vrDisplay.combinedProj;var c=a._node.getParent();c?w.copy(c.getWorldTransform()).mul(a.vrDisplay.combinedViewInv).invert():w.copy(a.vrDisplay.combinedView);t.copy(w).invert();this.viewInvId.setValue(t.data)}else{b=a.getProjectionMatrix();var c=a._node.getPosition(),d=a._node.getRotation();t.setTRS(c,d,pc.Vec3.ONE);this.viewInvId.setValue(t.data);w.copy(t).invert()}a.frustum.update(b,w)},setCamera:function(a,b){var c=a.vrDisplay;if(c&&c.presenting){F=c.leftProj;
D=c.rightProj;var d=a._node.getParent();if(d){var f=d.getWorldTransform();x.mul2(f,c.leftViewInv);C.mul2(f,c.rightViewInv);I.copy(x).invert();M.copy(C).invert();w.copy(d.getWorldTransform()).mul(c.combinedViewInv).invert()}else x.copy(c.leftViewInv),C.copy(c.rightViewInv),I.copy(c.leftView),M.copy(c.rightView),w.copy(c.combinedView);p(O,I);p(U,M);V.mul2(c.leftProj,I);ca.mul2(c.rightProj,M);K.data[0]=x.data[12];K.data[1]=x.data[13];K.data[2]=x.data[14];H.data[0]=C.data[12];H.data[1]=C.data[13];H.data[2]=
C.data[14];a.frustum.update(c.combinedProj,w)}else c=a.getProjectionMatrix(),this.projId.setValue(c.data),d=a._node.getPosition(),f=a._node.getRotation(),t.setTRS(d,f,pc.Vec3.ONE),this.viewInvId.setValue(t.data),w.copy(t).invert(),this.viewId.setValue(w.data),p(y,w),this.viewId3.setValue(y.data),A.mul2(c,w),this.viewProjId.setValue(A.data),this.viewPosId.setValue(a._node.getPosition().data),a.frustum.update(c,w);this.nearClipId.setValue(a._nearClip);this.farClipId.setValue(a._farClip);var c=this.device,
e=a.renderTarget;c.setRenderTarget(e);c.updateBegin();var f=a.getRect(),d=e?e.width:c.width,e=e?e.height:c.height,g=Math.floor(f.x*d),k=Math.floor(f.y*e),l=Math.floor(f.width*d),f=Math.floor(f.height*e);c.setViewport(g,k,l,f);c.setScissor(g,k,l,f);c.clear(a._clearOptions);b&&c.setScissor(1,1,d-2,e-2)},dispatchGlobalLights:function(a){var b;this.mainLight=-1;this.ambientColor[0]=a.ambientLight.data[0];this.ambientColor[1]=a.ambientLight.data[1];this.ambientColor[2]=a.ambientLight.data[2];if(a.gammaCorrection)for(b=
0;3>b;b++)this.ambientColor[b]=Math.pow(this.ambientColor[b],2.2);this.ambientId.setValue(this.ambientColor);this.exposureId.setValue(a.exposure);a._skyboxModel&&this.skyboxIntensityId.setValue(a.skyboxIntensity)},_resolveLight:function(a,b){var c="light"+b;this.lightColorId[b]=a.resolve(c+"_color");this.lightDirId[b]=a.resolve(c+"_direction");this.lightShadowMapId[b]=a.resolve(c+"_shadowMap");this.lightShadowMatrixId[b]=a.resolve(c+"_shadowMatrix");this.lightShadowParamsId[b]=a.resolve(c+"_shadowParams");
this.lightShadowMatrixVsId[b]=a.resolve(c+"_shadowMatrixVS");this.lightShadowParamsVsId[b]=a.resolve(c+"_shadowParamsVS");this.lightDirVsId[b]=a.resolve(c+"_directionVS");this.lightRadiusId[b]=a.resolve(c+"_radius");this.lightPosId[b]=a.resolve(c+"_position");this.lightInAngleId[b]=a.resolve(c+"_innerConeAngle");this.lightOutAngleId[b]=a.resolve(c+"_outerConeAngle");this.lightPosVsId[b]=a.resolve(c+"_positionVS");this.lightCookieId[b]=a.resolve(c+"_cookie");this.lightCookieIntId[b]=a.resolve(c+"_cookieIntensity");
this.lightCookieMatrixId[b]=a.resolve(c+"_cookieMatrix");this.lightCookieOffsetId[b]=a.resolve(c+"_cookieOffset")},dispatchDirectLights:function(a,b){var c=a._globalLights,d=c.length,f,e,g,k=0,l=this.device.scope;for(f=0;f<d;f++)if(c[f]._mask&b){e=c[f];g=e._node.getWorldTransform();this.lightColorId[k]||this._resolveLight(l,k);this.lightColorId[k].setValue(a.gammaCorrection?e._linearFinalColor.data:e._finalColor.data);g.getY(e._direction).scale(-1);this.lightDirId[k].setValue(e._direction.normalize().data);
if(e.castShadows){var h=e._isPcf&&this.device.webgl2?e._shadowCamera.renderTarget.depthBuffer:e._shadowCamera.renderTarget.colorBuffer;e._isVsm?g=-2E-4:(g=e.shadowBias/e._shadowCamera._farClip*100,!this.device.webgl2&&this.device.extStandardDerivatives&&(g*=-100));var p=e._isVsm?e.vsmBias/(e._shadowCamera._farClip/7):e._normalOffsetBias;this.lightShadowMapId[k].setValue(h);this.lightShadowMatrixId[k].setValue(e._shadowMatrix.data);h=e._rendererParams;3!==h.length&&(h.length=3);h[0]=e._shadowResolution;
h[1]=p;h[2]=g;this.lightShadowParamsId[k].setValue(h);0>this.mainLight&&(this.lightShadowMatrixVsId[k].setValue(e._shadowMatrix.data),this.lightShadowParamsVsId[k].setValue(h),this.lightDirVsId[k].setValue(e._direction.normalize().data),this.mainLight=f)}k++}return k},dispatchPointLight:function(a,b,c,d){var f=c._node.getWorldTransform();this.lightColorId[d]||this._resolveLight(b,d);this.lightRadiusId[d].setValue(c.attenuationEnd);this.lightColorId[d].setValue(a.gammaCorrection?c._linearFinalColor.data:
c._finalColor.data);f.getTranslation(c._position);this.lightPosId[d].setValue(c._position.data);c.castShadows&&(this.lightShadowMapId[d].setValue(c._shadowCamera.renderTarget.colorBuffer),a=c._rendererParams,4!==a.length&&(a.length=4),a[0]=c._shadowResolution,a[1]=c._normalOffsetBias,a[2]=c.shadowBias,a[3]=1/c.attenuationEnd,this.lightShadowParamsId[d].setValue(a));c._cookie&&(this.lightCookieId[d].setValue(c._cookie),this.lightShadowMatrixId[d].setValue(f.data),this.lightCookieIntId[d].setValue(c.cookieIntensity))},
dispatchSpotLight:function(a,b,c,d){var f=c._node.getWorldTransform();this.lightColorId[d]||this._resolveLight(b,d);this.lightInAngleId[d].setValue(c._innerConeAngleCos);this.lightOutAngleId[d].setValue(c._outerConeAngleCos);this.lightRadiusId[d].setValue(c.attenuationEnd);this.lightColorId[d].setValue(a.gammaCorrection?c._linearFinalColor.data:c._finalColor.data);f.getTranslation(c._position);this.lightPosId[d].setValue(c._position.data);f.getY(c._direction).scale(-1);this.lightDirId[d].setValue(c._direction.normalize().data);
c.castShadows&&(c._isVsm?a=-2E-4:(a=20*c.shadowBias,!this.device.webgl2&&this.device.extStandardDerivatives&&(a*=-100)),b=c._isVsm?c.vsmBias/(c.attenuationEnd/7):c._normalOffsetBias,this.lightShadowMapId[d].setValue(c._isPcf&&this.device.webgl2?c._shadowCamera.renderTarget.depthBuffer:c._shadowCamera.renderTarget.colorBuffer),this.lightShadowMatrixId[d].setValue(c._shadowMatrix.data),f=c._rendererParams,4!==f.length&&(f.length=4),f[0]=c._shadowResolution,f[1]=b,f[2]=a,f[3]=1/c.attenuationEnd,this.lightShadowParamsId[d].setValue(f),
0>this.mainLight&&(this.lightShadowMatrixVsId[d].setValue(c._shadowMatrix.data),this.lightShadowParamsVsId[d].setValue(f),this.lightPosVsId[d].setValue(c._position.data),this.mainLight=X));c._cookie&&(this.lightCookieId[d].setValue(c._cookie),c.castShadows||(a=this.getShadowCamera(this.device,c),b=a._node,b.setPosition(c._node.getPosition()),b.setRotation(c._node.getRotation()),b.rotateLocal(-90,0,0),a.projection=pc.PROJECTION_PERSPECTIVE,a.aspectRatio=1,a.fov=2*c._outerConeAngle,v.setTRS(b.getPosition(),
b.getRotation(),pc.Vec3.ONE).invert(),B.mul2(a.getProjectionMatrix(),v),c._shadowMatrix.mul2(h,B)),this.lightShadowMatrixId[d].setValue(c._shadowMatrix.data),this.lightCookieIntId[d].setValue(c.cookieIntensity),c._cookieTransform&&(this.lightCookieMatrixId[d].setValue(c._cookieTransform.data),this.lightCookieOffsetId[d].setValue(c._cookieOffset.data)))},dispatchLocalLights:function(a,b,c,d){var f,e=a._localLights,g=e[pc.LIGHTTYPE_POINT-1],e=e[pc.LIGHTTYPE_SPOT-1],k=g.length,l=e.length,h=c,p=this.device.scope;
for(c=0;c<k;c++)f=g[c],f._mask&b&&!f.isStatic&&(this.dispatchPointLight(a,p,f,h),h++);g=0;if(d)for(f=d[g];f&&f._type===pc.LIGHTTYPE_POINT;)f._mask&b&&(this.dispatchPointLight(a,p,f,h),h++),g++,f=d[g];for(c=0;c<l;c++)f=e[c],f._mask&b&&!f.isStatic&&(this.dispatchSpotLight(a,p,f,h),h++);if(d)for(f=d[g];f;)f._mask&b&&(this.dispatchSpotLight(a,p,f,h),h++),g++,f=d[g]},cull:function(a,b){S.length=0;var c,d,f,e=b.length,g=a.cullingMask||4294967295;if(!a.frustumCulling){for(c=0;c<e;c++)if(d=b[c],d.visible||
d.command)d.mask&&0===(d.mask&g)||S.push(d);return S}for(c=0;c<e;c++)d=b[c],d.command?S.push(d):d.visible&&(f=!0,d.mask&&0===(d.mask&g)||(d.layer>pc.LAYER_FX&&d.cull&&(f=this._isVisible(a,d)),f&&S.push(d)));return S},calculateSortDistances:function(a,b,c,d){var f,e,g,k,l,h,p=a.length;for(f=0;f<p;f++)e=a[f],e.command||e.layer<=pc.scene.LAYER_FX||(g=e.material.blendType,g!==pc.BLEND_NONE?(k=e.aabb.center.data,l=k[0]-b[0],h=k[1]-b[1],k=k[2]-b[2],e.zdist=l*c[0]+h*c[1]+k*c[2]):e.material.alphaTest||e.material.alphaToCoverage?
e.zdist=Number.MAX_VALUE:void 0!==e.zdist&&delete e.zdist,d&&g===pc.BLEND_NONE&&(k=e.aabb.center.data,l=k[0]-b[0],h=k[1]-b[1],k=k[2]-b[2],e.zdist2=l*c[0]+h*c[1]+k*c[2]))},updateCpuSkinMatrices:function(a){var b=a.length;if(0!==b){var c,d;for(c=0;c<b;c++)if(d=a[c].skinInstance)d.updateMatrices(),d._dirty=!0}},updateGpuSkinMatrices:function(a){var b,c,d=a.length;for(b=0;b<d;b++)(c=a[b].skinInstance)&&c._dirty&&(c.updateMatrixPalette(),c._dirty=!1)},sortDrawCalls:function(a,b,c){0!==a.length&&a.sort(b)},
prepareInstancing:function(a,b,c,d){if(a.extInstancing){var f=b.length,e,g,k,l,h,p,m=0;if(a.enableAutoInstancing){for(e=0;e<f-1;e++){g=b[e];k=g.mesh;p=g._key[c];l=e+1;h=0;if(b[l].mesh===k&&b[l]._key[c]===p){for(e=0;16>e;e++)pc._autoInstanceBufferData[m+e]=g.node.worldTransform.data[e];for(h=1;l!==f&&b[l].mesh===k&&b[l]._key[c]===p;){for(e=0;16>e;e++)pc._autoInstanceBufferData[m+16*h+e]=b[l].node.worldTransform.data[e];h++;l++}k=g.instancingData;k||(g.instancingData=k={});k.count=h;k.offset=4*m;k._buffer=
pc._autoInstanceBuffer;e=l-1}m+=16*h}0<m&&pc._autoInstanceBuffer.unlock()}for(e=0;e<f;e++)g=b[e],g.instancingData?(g._shaderDefs&pc.SHADERDEF_INSTANCING||(g._shaderDefs|=pc.SHADERDEF_INSTANCING,g._shader[d]=null),g.instancingData._buffer||(g.instancingData._buffer=new pc.VertexBuffer(a,pc._instanceVertexFormat,g.instancingData.count,g.instancingData.usage,g.instancingData.buffer))):g._shaderDefs&pc.SHADERDEF_INSTANCING&&(g._shaderDefs&=~pc.SHADERDEF_INSTANCING,g._shader[d]=null)}},setBaseConstants:function(a,
b){a.setCullMode(b.cull);b.opacityMap&&(this.opacityMapId.setValue(b.opacityMap),this.alphaTestId.setValue(b.alphaTest))},setSkinning:function(a,b,c){b.skinInstance&&(this._skinDrawCalls++,this.skinPosOffsetId.setValue(b.skinInstance.rootNode.getPosition().data),a.supportsBoneTextures?(ha=b.skinInstance.boneTexture,this.boneTextureId.setValue(ha),da[0]=ha.width,da[1]=ha.height,this.boneTextureSizeId.setValue(da)):this.poseMatrixId.setValue(b.skinInstance.matrixPalette))},drawInstance:function(a,b,
c,d,f){if(E=b.instancingData){if(this._instancedDrawCalls++,this._removedByInstancing+=E.count,a.setVertexBuffer(E._buffer,1,E.offset),a.draw(c.primitive[d],E.count),E._buffer===pc._autoInstanceBuffer)return b.instancingData=null,E.count-1}else return J=b.node.worldTransform,this.modelMatrixId.setValue(J.data),f&&(P=b.node.normalMatrix,b.node.dirtyNormal&&(J.invertTo3x3(P),P.transpose(),b.node.dirtyNormal=!1),this.normalMatrixId.setValue(P.data)),a.draw(c.primitive[d]),0},drawInstance2:function(a,
b,c,d){if(E=b.instancingData){if(this._instancedDrawCalls++,this._removedByInstancing+=E.count,a.setVertexBuffer(E._buffer,1,E.offset),a.draw(c.primitive[d],E.count),E._buffer===pc._autoInstanceBuffer)return b.instancingData=null,E.count-1}else return a.draw(c.primitive[d]),0},findShadowShader:function(a,b,c){5<=c&&(c-=5);var d=a.material;return this.library.getProgram("depthrgba",{skin:!!a.skinInstance,opacityMap:!!d.opacityMap,opacityChannel:d.opacityMap?d.opacityMapChannel||"r":null,shadowType:c,
instancing:a.instancingData,type:b})},renderShadows:function(a,b,c,e){var g,l,p,m,n,q,t,w,y,A,x,G,E,L,N,R,C,Z;for(p=0;p<e.length;p++)if(m=e[p],q=m._type,m.castShadows&&m._enabled&&m.shadowUpdateMode!==pc.SHADOWUPDATE_NONE){t=this.getShadowCamera(a,m);w=t._node;y=m._node;A=1;w.setPosition(y.getPosition());w.setRotation(y.getRotation());w.rotateLocal(-90,0,0);if(q===pc.LIGHTTYPE_DIRECTIONAL){R=m.shadowDistance||b._farClip;x=aa;G=b._nearClip;E=b._fov*Math.PI/180;g=b._aspect;l=b._projection;C=l===pc.PROJECTION_PERSPECTIVE?
Math.tan(E/2)*G:b._orthoHeight;N=C*g;x[0].x=N;x[0].y=-C;x[0].z=-G;x[1].x=N;x[1].y=C;x[1].z=-G;x[2].x=-N;x[2].y=C;x[2].z=-G;x[3].x=-N;x[3].y=-C;x[3].z=-G;l===pc.PROJECTION_PERSPECTIVE&&(C=Math.tan(E/2)*R,N=C*g);x[4].x=N;x[4].y=-C;x[4].z=-R;x[5].x=N;x[5].y=C;x[5].z=-R;x[6].x=-N;x[6].y=C;x[6].z=-R;x[7].x=-N;x[7].y=-C;x[7].z=-R;x=ba.sub2(aa[0],aa[6]).length();x=Math.max(x,ba.sub2(aa[4],aa[6]).length());v.copy(w.getWorldTransform()).invert();z.copy(v).mul(b._node.worldTransform);for(g=0;8>g;g++)z.transformPoint(aa[g],
aa[g]);N=R=C=1E6;E=G=l=-1E6;for(g=0;8>g;g++)L=aa[g],L.x<N&&(N=L.x),L.x>E&&(E=L.x),L.y<R&&(R=L.y),L.y>G&&(G=L.y),L.z<C&&(C=L.z),L.z>l&&(l=L.z);g=x/m._shadowResolution;E=.5*(x-(E-N));N=Math.floor((N-E)/g)*g;E=.5*(x-(G-R));R=Math.floor((R-E)/g)*g;E=N+x;G=R+x;N=.5*(E+N);R=.5*(G+R);w.translateLocal(N,R,1E5);t.projection=pc.PROJECTION_ORTHOGRAPHIC;t.nearClip=0;t.farClip=2E5;t.aspectRatio=1;t.orthoHeight=.5*x}else if(q===pc.LIGHTTYPE_SPOT){if(b.frustumCulling&&m.shadowUpdateMode===pc.SHADOWUPDATE_REALTIME&&
(m.getBoundingSphere(W),!b.frustum.containsSphere(W)))continue;t.projection=pc.PROJECTION_PERSPECTIVE;t.nearClip=m.attenuationEnd/1E3;t.farClip=m.attenuationEnd;t.aspectRatio=1;t.fov=2*m._outerConeAngle;this.viewPosId.setValue(w.getPosition().data);this.shadowMapLightRadiusId.setValue(m.attenuationEnd)}else if(q===pc.LIGHTTYPE_POINT){if(b.frustumCulling&&m.shadowUpdateMode===pc.SHADOWUPDATE_REALTIME&&(m.getBoundingSphere(W),!b.frustum.containsSphere(W)))continue;t.projection=pc.PROJECTION_PERSPECTIVE;
t.nearClip=m.attenuationEnd/1E3;t.farClip=m.attenuationEnd;t.aspectRatio=1;t.fov=90;A=6;this.viewPosId.setValue(w.getPosition().data);this.shadowMapLightRadiusId.setValue(m.attenuationEnd)}a.webgl2?q===pc.LIGHTTYPE_POINT?a.setDepthBias(!1):(a.setDepthBias(!0),a.setDepthBiasValues(-1E3*m.shadowBias,-1E3*m.shadowBias)):a.extStandardDerivatives&&(q===pc.LIGHTTYPE_POINT?(this.polygonOffset[0]=0,this.polygonOffset[1]=0):(this.polygonOffset[0]=-1E3*m.shadowBias,this.polygonOffset[1]=-1E3*m.shadowBias),
this.polygonOffsetId.setValue(this.polygonOffset));m.shadowUpdateMode===pc.SHADOWUPDATE_THISFRAME&&(m.shadowUpdateMode=pc.SHADOWUPDATE_NONE);this._shadowMapUpdates+=A;for(x=0;x<A;x++){a.setBlending(!1);a.setDepthWrite(!0);a.setDepthTest(!0);m._isPcf&&a.webgl2&&q!==pc.LIGHTTYPE_POINT?a.setColorWrite(!1,!1,!1,!1):a.setColorWrite(!0,!0,!0,!0);q===pc.LIGHTTYPE_POINT&&(0===x?w.setEulerAngles(0,90,180):1===x?w.setEulerAngles(0,-90,180):2===x?w.setEulerAngles(90,0,0):3===x?w.setEulerAngles(-90,0,0):4===
x?w.setEulerAngles(0,180,180):5===x&&w.setEulerAngles(0,0,180),w.setPosition(y.getPosition()),t.renderTarget=m._shadowCubeMap[x]);this.setCamera(t,q!==pc.LIGHTTYPE_POINT);g=S.length=0;for(L=c.length;g<L;g++)l=c[g],G=!0,l.cull&&(G=this._isVisible(t,l)),G&&S.push(l);this.updateGpuSkinMatrices(S);G=m._shadowType;E=G+5*q;this.sortDrawCalls(S,this.depthSortCompare,pc.SORTKEY_DEPTH);this.prepareInstancing(a,S,pc.SORTKEY_DEPTH,pc.SHADER_SHADOW+E);if(q===pc.LIGHTTYPE_DIRECTIONAL){L=!0;for(g=0;g<S.length;g++)l=
S[g],l=l.aabb,L?(Y.copy(l),L=!1):Y.add(l);g=v;l=Y.getMin();L=Y.getMax();Q[0].x=Q[1].x=Q[2].x=Q[3].x=l.x;Q[1].y=Q[3].y=Q[7].y=Q[5].y=l.y;Q[2].z=Q[3].z=Q[6].z=Q[7].z=l.z;Q[4].x=Q[5].x=Q[6].x=Q[7].x=L.x;Q[0].y=Q[2].y=Q[4].y=Q[6].y=L.y;Q[0].z=Q[1].z=Q[4].z=Q[5].z=L.z;Z=9999999999;l=-9999999999;for(n=0;8>n;++n)g.transformPoint(Q[n],Q[n]),L=Q[n].z,L<Z&&(Z=L),L>l&&(l=L);g=Z;g>C&&(C=g);w.setPosition(y.getPosition());w.translateLocal(N,R,l+.01);t.farClip=l-C;this.setCamera(t,!0)}q!==pc.LIGHTTYPE_POINT&&(v.setTRS(w.getPosition(),
w.getRotation(),pc.Vec3.ONE).invert(),B.mul2(t.getProjectionMatrix(),v),m._shadowMatrix.mul2(h,B));g=0;for(L=S.length;g<L;g++)l=S[g],Z=l.mesh,n=l.material,this.setBaseConstants(a,n),this.setSkinning(a,l,n),n=l._shader[pc.SHADER_SHADOW+E],n||(n=this.findShadowShader(l,q,G),l._shader[pc.SHADER_SHADOW+E]=n,l._key[pc.SORTKEY_DEPTH]=k(l)),a.setShader(n),n=l.renderStyle,a.setVertexBuffer(Z.vertexBuffer,0),a.setIndexBuffer(Z.indexBuffer[n]),g+=this.drawInstance(a,l,Z,n),this._shadowDrawCalls++}m._isVsm&&
(q=m._vsmBlurSize,1<q&&(t=t.renderTarget,w=f(a,m._shadowResolution,m._shadowType,1),y=m.vsmBlurMode,A=(m._shadowType===pc.SHADOW_VSM8?this.blurPackedVsmShader:this.blurVsmShader)[y][q],A||(this.blurVsmWeights[q]=d(q),A=pc.shaderChunks,(m._shadowType===pc.SHADOW_VSM8?this.blurPackedVsmShader:this.blurVsmShader)[y][q]=A=A.createShaderFromCode(this.device,A.fullscreenQuadVS,"#define SAMPLES "+q+"\n"+(m._shadowType===pc.SHADOW_VSM8?this.blurPackedVsmShaderCode:this.blurVsmShaderCode)[y],"blurVsm"+y+""+
q+""+(m._shadowType===pc.SHADOW_VSM8))),u.z=m._shadowResolution-2,u.w=u.z,this.sourceId.setValue(t.colorBuffer),r.x=1/m._shadowResolution,r.y=0,this.pixelOffsetId.setValue(r.data),y===pc.BLUR_GAUSSIAN&&this.weightId.setValue(this.blurVsmWeights[q]),pc.drawQuadWithShader(a,w,A,null,u),this.sourceId.setValue(w.colorBuffer),r.y=r.x,r.x=0,this.pixelOffsetId.setValue(r.data),pc.drawQuadWithShader(a,t,A,null,u)))}a.webgl2?a.setDepthBias(!1):a.extStandardDerivatives&&(this.polygonOffset[0]=0,this.polygonOffset[1]=
0,this.polygonOffsetId.setValue(this.polygonOffset))},findDepthShader:function(a){var b=a.material;return this.library.getProgram("depth",{skin:!!a.skinInstance,opacityMap:!!b.opacityMap,opacityChannel:b.opacityMap?b.opacityMapChannel||"r":null,instancing:a.instancingData})},filterDepthMapDrawCalls:function(a){Z.length=0;for(var b,c=0;c<a.length;c++)b=a[c],!b.command&&b.drawToDepth&&b.material.blendType===pc.BLEND_NONE&&Z.push(b);return Z},renderDepth:function(a,b,c){if(b._renderDepthRequests){var d,
f=b._rect,e=b.renderTarget;d=e?e.width:a.width;var g=e?e.height:a.height;d=Math.floor(f.width*d);var g=Math.floor(f.height*g),l,h,f=b.vrDisplay,e=.5*a.width;c=this.filterDepthMapDrawCalls(c);var p=c.length;this.sortDrawCalls(c,this.depthSortCompare,pc.SORTKEY_DEPTH);this.prepareInstancing(a,c,pc.SORTKEY_DEPTH,pc.SHADER_DEPTH);!b._depthTarget||b._depthTarget.width===d&&b._depthTarget.height===g||(b._depthTarget.destroy(),b._depthTarget=null);b._depthTarget||(d=new pc.Texture(a,{format:pc.PIXELFORMAT_R8_G8_B8_A8,
width:d,height:g}),d.minFilter=pc.FILTER_NEAREST,d.magFilter=pc.FILTER_NEAREST,d.addressU=pc.ADDRESS_CLAMP_TO_EDGE,d.addressV=pc.ADDRESS_CLAMP_TO_EDGE,b._depthTarget=new pc.RenderTarget(a,d,{depth:!0,stencil:a.supportsStencil}));a.setBlending(!1);a.setColorWrite(!0,!0,!0,!0);a.setDepthWrite(!0);a.setDepthTest(!0);var n=b.renderTarget,q=b.getClearOptions();b.renderTarget=b._depthTarget;b.setClearOptions(m);this.setCamera(b);for(d=0;d<p;d++)g=c[d],l=g.mesh,h=g.material,this.setBaseConstants(a,h),this.setSkinning(a,
g,h),h=g._shader[pc.SHADER_DEPTH],h||(h=this.findDepthShader(g),g._shader[pc.SHADER_DEPTH]=h,g._key[pc.SORTKEY_DEPTH]=k(g)),a.setShader(h),h=g.renderStyle,a.setVertexBuffer(l.vertexBuffer,0),a.setIndexBuffer(l.indexBuffer[h]),f&&f.presenting?(a.setViewport(0,0,e,a.height),this.viewProjId.setValue(V.data),this.viewPosId.setValue(K.data),d+=this.drawInstance(a,g,l,h,!0),this._depthDrawCalls++,a.setViewport(e,0,e,a.height),this.viewProjId.setValue(ca.data),this.viewPosId.setValue(H.data),d+=this.drawInstance2(a,
g,l,h)):d+=this.drawInstance(a,g,l,h),this._depthDrawCalls++;b.renderTarget=n;b.setClearOptions(q)}else b._depthTarget&&(b._depthTarget.destroy(),b._depthTarget=null)},renderForward:function(a,b,c,d,f){var e=c.length,g=b.vrDisplay;this.sortDrawCalls(c,this.frontToBack?this.sortCompare:this.sortCompareMesh,pc.SORTKEY_FORWARD);this.prepareInstancing(a,c,pc.SORTKEY_FORWARD,f);var k,l,h,m,p,n;n=null;var q,r,u,v;a.setColorWrite(!0,!0,!0,!0);this.setCamera(b);this.dispatchGlobalLights(d);if(d.fog!==pc.FOG_NONE){this.fogColor[0]=
d.fogColor.data[0];this.fogColor[1]=d.fogColor.data[1];this.fogColor[2]=d.fogColor.data[2];if(d.gammaCorrection)for(k=0;3>k;k++)this.fogColor[k]=Math.pow(this.fogColor[k],2.2);this.fogColorId.setValue(this.fogColor);d.fog===pc.FOG_LINEAR?(this.fogStartId.setValue(d.fogStart),this.fogEndId.setValue(d.fogEnd)):this.fogDensityId.setValue(d.fogDensity)}this._screenSize.x=a.width;this._screenSize.y=a.height;this._screenSize.z=1/a.width;this._screenSize.w=1/a.height;this.screenSizeId.setValue(this._screenSize.data);
var t=.5*a.width;b._depthTarget&&this.depthMapId.setValue(b._depthTarget.colorBuffer);for(k=0;k<e;k++)if(b=c[k],b.command)b.command();else{l=b.mesh;h=b.material;m=b._shaderDefs;p=b.mask;this.setSkinning(a,b,h);h&&h===n&&m!==q&&(n=null);if(b.isStatic||u)n=null;if(h!==n){this._materialSwitches++;b._shader[f]&&b._shaderDefs===m||(b.isStatic?(h.updateShader(a,d,m,b._staticLightList,f),b._shader[f]=h.shader):(b._shader[f]=h.variants[m],b._shader[f]||(h.updateShader(a,d,m,null,f),b._shader[f]=h.variants[m]=
h.shader)),b._shaderDefs=m);a.setShader(b._shader[f]);q=h.parameters;for(v in q)u=q[v],u.scopeId||(u.scopeId=a.scope.resolve(v)),u.scopeId.setValue(u.data);n&&p===r||(n=this.dispatchDirectLights(d,p),this.dispatchLocalLights(d,p,n,b._staticLightList));this.alphaTestId.setValue(h.alphaTest);a.setBlending(h.blend);h.blend&&(h.separateAlphaBlend?(a.setBlendFunctionSeparate(h.blendSrc,h.blendDst,h.blendSrcAlpha,h.blendDstAlpha),a.setBlendEquationSeparate(h.blendEquation,h.blendAlphaEquation)):(a.setBlendFunction(h.blendSrc,
h.blendDst),a.setBlendEquation(h.blendEquation)));a.setColorWrite(h.redWrite,h.greenWrite,h.blueWrite,h.alphaWrite);a.setCullMode(h.cull);a.setDepthWrite(h.depthWrite);a.setDepthTest(h.depthTest);a.setAlphaToCoverage(h.alphaToCoverage);n=h.stencilFront;r=h.stencilBack;n||r?(a.setStencilTest(!0),n===r?(a.setStencilFunc(n.func,n.ref,n.readMask),a.setStencilOperation(n.fail,n.zfail,n.zpass,n.writeMask)):(n?(a.setStencilFuncFront(n.func,n.ref,n.readMask),a.setStencilOperationFront(n.fail,n.zfail,n.zpass,
n.writeMask)):(a.setStencilFuncFront(pc.FUNC_ALWAYS,0,255),a.setStencilOperationFront(pc.STENCILOP_KEEP,pc.STENCILOP_KEEP,pc.STENCILOP_KEEPP,255)),r?(a.setStencilFuncBack(r.func,r.ref,r.readMask),a.setStencilOperationBack(r.fail,r.zfail,r.zpass,r.writeMask)):(a.setStencilFuncBack(pc.FUNC_ALWAYS,0,255),a.setStencilOperationBack(pc.STENCILOP_KEEP,pc.STENCILOP_KEEP,pc.STENCILOP_KEEP,255)))):a.setStencilTest(!1)}q=b.parameters;for(v in q)u=q[v],u.scopeId||(u.scopeId=a.scope.resolve(v)),u.scopeId.setValue(u.data);
a.setVertexBuffer(l.vertexBuffer,0);n=b.renderStyle;a.setIndexBuffer(l.indexBuffer[n]);g&&g.presenting?(a.setViewport(0,0,t,a.height),this.projId.setValue(F.data),this.viewInvId.setValue(x.data),this.viewId.setValue(I.data),this.viewId3.setValue(O.data),this.viewProjId.setValue(V.data),this.viewPosId.setValue(K.data),k+=this.drawInstance(a,b,l,n,!0),this._forwardDrawCalls++,a.setViewport(t,0,t,a.height),this.projId.setValue(D.data),this.viewInvId.setValue(C.data),this.viewId.setValue(M.data),this.viewId3.setValue(U.data),
this.viewProjId.setValue(ca.data),this.viewPosId.setValue(H.data),k+=this.drawInstance2(a,b,l,n)):k+=this.drawInstance(a,b,l,n,!0);this._forwardDrawCalls++;if(k<e-1&&c[k+1].material===h)for(v in q)(u=h.parameters[v])&&u.scopeId.setValue(u.data);n=h;q=m;r=p;u=b.isStatic}a.setStencilTest(!1);a.updateEnd()},sortLights:function(a){var b,c=a._lights;a._globalLights.length=0;a._localLights[0].length=0;for(X=a._localLights[1].length=0;X<c.length;X++)b=c[X],b._enabled&&(b._type===pc.LIGHTTYPE_DIRECTIONAL?
a._globalLights.push(b):a._localLights[b._type===pc.LIGHTTYPE_POINT?0:1].push(b));return c},setupInstancing:function(a){pc._instanceVertexFormat||(pc._instanceVertexFormat=new pc.VertexFormat(a,[{semantic:pc.SEMANTIC_TEXCOORD2,components:4,type:pc.ELEMENTTYPE_FLOAT32},{semantic:pc.SEMANTIC_TEXCOORD3,components:4,type:pc.ELEMENTTYPE_FLOAT32},{semantic:pc.SEMANTIC_TEXCOORD4,components:4,type:pc.ELEMENTTYPE_FLOAT32},{semantic:pc.SEMANTIC_TEXCOORD5,components:4,type:pc.ELEMENTTYPE_FLOAT32}]));a.enableAutoInstancing&&
!pc._autoInstanceBuffer&&(pc._autoInstanceBuffer=new pc.VertexBuffer(a,pc._instanceVertexFormat,a.autoInstancingMaxObjects,pc.BUFFER_DYNAMIC),pc._autoInstanceBufferData=new Float32Array(pc._autoInstanceBuffer.lock()))},prepareStaticMeshes:function(a,b){var c,d,f,e,g,k=b.drawCalls,l=b._lights,h=k.length,m,p,n=[];if(!b._needsStaticPrepare){var q;for(c=0;c<h;c++)m=k[c],m._staticSource?m._staticSource!==q&&(n.push(m._staticSource),q=m._staticSource):n.push(m);k=n;h=k.length;n=[]}var r,u,v,t,z,B,w,x,y,
A,Y,S,E,N;q=new pc.Vec3;var C=new pc.Vec3;new pc.BoundingBox;var Z=new pc.BoundingBox,I=new pc.Mat4,J=[],H,da,D=[],G=[],L=[];for(c=0;c<h;c++)if(m=k[c],m.isStatic){r=m.aabb;L.length=0;for(H=pc.LIGHTTYPE_POINT;H<=pc.LIGHTTYPE_SPOT;H++)for(d=0;d<l.length;d++)p=l[d],p._type===H&&p._enabled&&p._mask&m.mask&&p.isStatic&&(D[d]||(D[d]=new pc.BoundingBox,p._node.getWorldTransform(),p.getBoundingSphere(W),D[d].center.copy(W.center),D[d].halfExtents.x=W.radius,D[d].halfExtents.y=W.radius,D[d].halfExtents.z=
W.radius),D[d].intersects(r)&&L.push(d));if(0===L.length)n.push(m);else{r=m.mesh;H=r.vertexBuffer;p=r.indexBuffer[m.renderStyle];u=2===p.bytesPerIndex?new Uint16Array(p.lock()):new Uint32Array(p.lock());v=r.primitive[m.renderStyle].count/3;w=r.primitive[m.renderStyle].base;t=H.format.elements;z=H.format.size/4;r=new Float32Array(H.storage);for(f=0;f<t.length;f++)t[f].name===pc.SEMANTIC_POSITION&&(B=t[f].offset/4);J.length=v;for(f=0;f<v;f++)J[f]=0;t=!1;G.length=6*v;for(f=0;f<v;f++){Y=A=y=Number.MAX_VALUE;
S=-Number.MAX_VALUE;E=-Number.MAX_VALUE;N=-Number.MAX_VALUE;for(e=0;3>e;e++)d=u[3*f+e+w],d=d*z+B,g=r[d],x=r[d+1],d=r[d+2],g<y&&(y=g),x<A&&(A=x),d<Y&&(Y=d),g>S&&(S=g),x>E&&(E=x),d>N&&(N=d);d=6*f;G[d]=y;G[d+1]=A;G[d+2]=Y;G[d+3]=S;G[d+4]=E;G[d+5]=N}for(g=0;g<L.length;g++)for(d=L[g],I.copy(m.node.worldTransform).invert(),Z.setFromTransformedAabb(D[d],I),x=Z.getMin().data,y=Z.getMax().data,e=1<<g,f=0;f<v;f++)d=6*f,G[d]<=y[0]&&G[d+3]>=x[0]&&G[d+1]<=y[1]&&G[d+4]>=x[1]&&G[d+2]<=y[2]&&G[d+5]>=x[2]&&(J[f]|=
e,t=!0);if(t){t={};for(f=0;f<v;f++)d=3*f+w,da=J[f],t[da]||(t[da]=[]),e=t[da],e.push(u[d]),e.push(u[d+1]),e.push(u[d+2]);for(da in t){e=t[da];u=new pc.IndexBuffer(a,p.format,e.length,p.usage);(2===u.bytesPerIndex?new Uint16Array(u.lock()):new Uint32Array(u.lock())).set(e);u.unlock();Y=A=y=Number.MAX_VALUE;S=-Number.MAX_VALUE;E=-Number.MAX_VALUE;N=-Number.MAX_VALUE;for(f=0;f<e.length;f++)d=e[f],g=r[d*z+B],x=r[d*z+B+1],d=r[d*z+B+2],g<y&&(y=g),x<A&&(A=x),d<Y&&(Y=d),g>S&&(S=g),x>E&&(E=x),d>N&&(N=d);q.set(y,
A,Y);C.set(S,E,N);f=new pc.BoundingBox;f.setMinMax(q,C);v=new pc.Mesh;v.vertexBuffer=H;v.indexBuffer[0]=u;v.primitive[0].type=pc.PRIMITIVE_TRIANGLES;v.primitive[0].base=0;v.primitive[0].count=e.length;v.primitive[0].indexed=!0;v.aabb=f;u=new pc.MeshInstance(m.node,v,m.material);u.isStatic=m.isStatic;u.visible=m.visible;u.layer=m.layer;u.castShadow=m.castShadow;u._receiveShadow=m._receiveShadow;u.drawToDepth=m.drawToDepth;u.cull=m.cull;u.pick=m.pick;u.mask=m.mask;u.parameters=m.parameters;u._shaderDefs=
m._shaderDefs;u._staticSource=m;u._staticLightList=[];for(f=0;f<L.length;f++)e=1<<f,da&e&&(v=l[L[f]],0>u._staticLightList.indexOf(v)&&u._staticLightList.push(v));u._staticLightList.sort(this.lightCompare);n.push(u)}}else n.push(m)}}else n.push(m);b.drawCalls=n},render:function(a,b){var c=this.device;a._activeCamera=b;a.updateShaders&&(a.updateShadersFunc(c),a.updateShaders=!1);a._needsStaticPrepare&&(this.prepareStaticMeshes(c,a),a._needsStaticPrepare=!1);var d=b.renderTarget,f=!1,e=a.exposure;d&&
d.colorBuffer&&(d=d.colorBuffer.format,d===pc.PIXELFORMAT_RGB16F||d===pc.PIXELFORMAT_RGB32F||d===pc.PIXELFORMAT_RGBA16F||d===pc.PIXELFORMAT_RGBA32F||d===pc.PIXELFORMAT_111110F)&&(f=!0,a.exposure=1);var g,d=a.drawCalls;g=a.shadowCasters;var k=this.sortLights(a),l=b._node.getPosition().data,h=b._node.forward.data;this.setupInstancing(c);this.updateCameraFrustum(b);this.updateCpuSkinMatrices(d);this.renderShadows(c,b,g,k);d=this.cull(b,d);this.calculateSortDistances(d,l,h,this.frontToBack);this.updateGpuSkinMatrices(d);
for(g=0;g<a.immediateDrawCalls.length;g++)d.push(a.immediateDrawCalls[g]);this._immediateRendered+=a.immediateDrawCalls.length;this.renderDepth(c,b,d);this.renderForward(c,b,d,a,f?pc.SHADER_FORWARDHDR:pc.SHADER_FORWARD);c.setColorWrite(!0,!0,!0,!0);0<a.immediateDrawCalls.length&&(a.immediateDrawCalls=[]);f&&(a.exposure=e);this._camerasRendered++}});return{ForwardRenderer:l,gaussWeights:d}}());pc.extend(pc,function(){var e=function(a){this.name="string"===typeof a?a:"Untitled";this.tags=new pc.Tags(this);this._labels={};this.localPosition=new pc.Vec3(0,0,0);this.localRotation=new pc.Quat(0,0,0,1);this.localScale=new pc.Vec3(1,1,1);this.localEulerAngles=new pc.Vec3(0,0,0);this.position=new pc.Vec3(0,0,0);this.rotation=new pc.Quat(0,0,0,1);this.eulerAngles=new pc.Vec3(0,0,0);this.localTransform=new pc.Mat4;this.dirtyLocal=!1;this._aabbVer=0;this.worldTransform=new pc.Mat4;this.dirtyWorld=
!1;this.normalMatrix=new pc.Mat3;this.dirtyNormal=!0;this._right=new pc.Vec3;this._up=new pc.Vec3;this._forward=new pc.Vec3;this._parent=null;this._children=[];this._enabled=!0;this._enabledInHierarchy=!1};Object.defineProperty(e.prototype,"right",{get:function(){return this.getWorldTransform().getX(this._right).normalize()}});Object.defineProperty(e.prototype,"up",{get:function(){return this.getWorldTransform().getY(this._up).normalize()}});Object.defineProperty(e.prototype,"forward",{get:function(){return this.getWorldTransform().getZ(this._forward).normalize().scale(-1)}});
Object.defineProperty(e.prototype,"enabled",{get:function(){return this._enabled&&this._enabledInHierarchy},set:function(a){this._enabled!==a&&(this._enabled=a,this._parent&&!this._parent.enabled||this._notifyHierarchyStateChanged(this,a))}});Object.defineProperty(e.prototype,"parent",{get:function(){return this._parent}});Object.defineProperty(e.prototype,"root",{get:function(){var a=this._parent;if(!a)return this;for(;a._parent;)a=a._parent;return a}});Object.defineProperty(e.prototype,"children",
{get:function(){return this._children}});pc.extend(e.prototype,{_notifyHierarchyStateChanged:function(a,b){a._onHierarchyStateChanged(b);for(var c=a._children,d=0,f=c.length;d<f;d++)c[d]._enabled&&this._notifyHierarchyStateChanged(c[d],b)},_onHierarchyStateChanged:function(a){this._enabledInHierarchy=a},_cloneInternal:function(a){a.name=this.name;for(var b=this.tags._list,c=0;c<b.length;c++)a.tags.add(b[c]);a._labels=pc.extend(this._labels,{});a.localPosition.copy(this.localPosition);a.localRotation.copy(this.localRotation);
a.localScale.copy(this.localScale);a.localEulerAngles.copy(this.localEulerAngles);a.position.copy(this.position);a.rotation.copy(this.rotation);a.eulerAngles.copy(this.eulerAngles);a.localTransform.copy(this.localTransform);a.dirtyLocal=this.dirtyLocal;a.worldTransform.copy(this.worldTransform);a.dirtyWorld=this.dirtyWorld;a.dirtyNormal=this.dirtyNormal;a._aabbVer=this._aabbVer+1;a._enabled=this._enabled;a._enabledInHierarchy=!1},clone:function(){var a=new pc.GraphNode;this._cloneInternal(a);return a},
find:function(a,b){var c=[],d=this._children.length,f,e;if(a instanceof Function)for(f=0;f<d;f++)a(this._children[f])&&c.push(this._children[f]),e=this._children[f].find(a),e.length&&(c=c.concat(e));else for(this[a]&&(f=this[a]instanceof Function?this[a]():this[a],f===b&&c.push(this)),f=0;f<d;++f)e=this._children[f].find(a,b),e.length&&(c=c.concat(e));return c},findOne:function(a,b){var c,d=this._children.length,f;if(a instanceof Function){if(f=a(this))return this;for(c=0;c<d;c++)if(f=this._children[c].findOne(a))return this._children[c]}else{if(this[a]&&
(c=this[a]instanceof Function?this[a]():this[a],c===b))return this;for(c=0;c<d;c++)if(f=this._children[c].findOne(a,b),null!==f)return f}return null},findByTag:function(){var a=this.tags._processArguments(arguments);return this._findByTag(a)},_findByTag:function(a){var b=[],c,d=this._children.length,f;for(c=0;c<d;c++)this._children[c].tags._has(a)&&b.push(this._children[c]),f=this._children[c]._findByTag(a),f.length&&(b=b.concat(f));return b},findByName:function(a){if(this.name===a)return this;for(var b=
0;b<this._children.length;b++){var c=this._children[b].findByName(a);if(null!==c)return c}return null},findByPath:function(a){a=a.split("/");for(var b=this,c=null,d=0,f=a.length;d<f&&b;d++){for(var e=a[d],c=null,b=b._children,k=0,l=b.length;k<l;k++)if(b[k].name==e){c=b[k];break}b=c}return c},getPath:function(){var a=this._parent;if(a){for(var b=this.name;a&&a._parent;)b=pc.string.format("{0}/{1}",a.name,b),a=a._parent;return b}return""},getRoot:function(){var a=this._parent;if(!a)return this;for(;a._parent;)a=
a._parent;return a},getParent:function(){return this._parent},isDescendantOf:function(a){for(var b=this._parent;b;){if(b===a)return!0;b=b._parent}return!1},isAncestorOf:function(a){return a.isDescendantOf(this)},getChildren:function(){return this._children},getEulerAngles:function(){this.getWorldTransform().getEulerAngles(this.eulerAngles);return this.eulerAngles},getLocalEulerAngles:function(){this.localRotation.getEulerAngles(this.localEulerAngles);return this.localEulerAngles},getLocalPosition:function(){return this.localPosition},
getLocalRotation:function(){return this.localRotation},getLocalScale:function(){return this.localScale},getLocalTransform:function(){this.dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this.dirtyLocal=!1,this.dirtyNormal=this.dirtyWorld=!0,this._aabbVer++);return this.localTransform},getName:function(){return this.name},getPosition:function(){this.getWorldTransform().getTranslation(this.position);return this.position},getRotation:function(){this.rotation.setFromMat4(this.getWorldTransform());
return this.rotation},getWorldTransform:function(){var a=[];return function(){var b=this;for(a.length=0;null!==b;)a.push(b),b=b._parent;for(b=a.length-1;0<=b;b--)a[b].sync();return this.worldTransform}}(),reparent:function(a,b){var c=this._parent;c&&c.removeChild(this);a&&(0<=b?a.insertChild(this,b):a.addChild(this))},setLocalEulerAngles:function(a,b,c){a instanceof pc.Vec3?this.localRotation.setFromEulerAngles(a.data[0],a.data[1],a.data[2]):this.localRotation.setFromEulerAngles(a,b,c);this.dirtyLocal=
!0},setLocalPosition:function(a,b,c){a instanceof pc.Vec3?this.localPosition.copy(a):this.localPosition.set(a,b,c);this.dirtyLocal=!0},setLocalRotation:function(a,b,c,d){a instanceof pc.Quat?this.localRotation.copy(a):this.localRotation.set(a,b,c,d);this.dirtyLocal=!0},setLocalScale:function(a,b,c){a instanceof pc.Vec3?this.localScale.copy(a):this.localScale.set(a,b,c);this.dirtyLocal=!0},setName:function(a){this.name=a},setPosition:function(){var a=new pc.Vec3,b=new pc.Mat4;return function(c,d,f){c instanceof
pc.Vec3?a.copy(c):a.set(c,d,f);null===this._parent?this.localPosition.copy(a):(b.copy(this._parent.getWorldTransform()).invert(),b.transformPoint(a,this.localPosition));this.dirtyLocal=!0}}(),setRotation:function(){var a=new pc.Quat,b=new pc.Quat;return function(c,d,f,e){c instanceof pc.Quat?a.copy(c):a.set(c,d,f,e);null===this._parent?this.localRotation.copy(a):(c=this._parent.getRotation(),b.copy(c).invert(),this.localRotation.copy(b).mul(a));this.dirtyLocal=!0}}(),setEulerAngles:function(){var a=
new pc.Quat;return function(b,c,d){b instanceof pc.Vec3?this.localRotation.setFromEulerAngles(b.data[0],b.data[1],b.data[2]):this.localRotation.setFromEulerAngles(b,c,d);null!==this._parent&&(b=this._parent.getRotation(),a.copy(b).invert(),this.localRotation.mul2(a,this.localRotation));this.dirtyLocal=!0}}(),addChild:function(a){if(null!==a._parent)throw Error("GraphNode is already parented");this._children.push(a);this._onInsertChild(a)},addChildAndSaveTransform:function(a){var b=a.getPosition(),
c=a.getRotation(),d=a._parent;d&&d.removeChild(a);void 0===this.tmpMat4&&(this.tmpMat4=new pc.Mat4,this.tmpQuat=new pc.Quat);a.setPosition(this.tmpMat4.copy(this.worldTransform).invert().transformPoint(b));a.setRotation(this.tmpQuat.copy(this.getRotation()).invert().mul(c));this._children.push(a);this._onInsertChild(a)},insertChild:function(a,b){if(null!==a._parent)throw Error("GraphNode is already parented");this._children.splice(b,0,a);this._onInsertChild(a)},_onInsertChild:function(a){a._parent=
this;var b=a._enabled&&this.enabled;a._enabledInHierarchy!==b&&(a._enabledInHierarchy=b,a._notifyHierarchyStateChanged(a,b));a.dirtyWorld=!0;a.dirtyNormal=!0;a._aabbVer++;a.fire&&a.fire("insert",this)},removeChild:function(a){var b,c=this._children.length;for(b=0;b<c;++b)if(this._children[b]===a){this._children.splice(b,1);a._parent=null;break}},addLabel:function(a){this._labels[a]=!0},getLabels:function(){return Object.keys(this._labels)},hasLabel:function(a){return!!this._labels[a]},removeLabel:function(a){delete this._labels[a]},
findByLabel:function(a,b){var c,d=this._children.length;b=b||[];this.hasLabel(a)&&b.push(this);for(c=0;c<d;++c)b=this._children[c].findByLabel(a,b);return b},sync:function(){this.dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this.dirtyLocal=!1,this.dirtyNormal=this.dirtyWorld=!0,this._aabbVer++);if(this.dirtyWorld){null===this._parent?this.worldTransform.copy(this.localTransform):this.worldTransform.mul2(this._parent.worldTransform,this.localTransform);
this.dirtyWorld=!1;for(var a,b=0,c=this._children.length;b<c;b++)a=this._children[b],a.dirtyWorld=!0,a.dirtyNormal=!0,a._aabbVer++}},syncHierarchy:function(){var a=function(){if(this._enabled){this.sync();for(var b=this._children,c=0,d=b.length;c<d;c++)a.call(b[c])}};return a}(),lookAt:function(){var a=new pc.Mat4,b=new pc.Vec3,c=new pc.Vec3,d=new pc.Quat;return function(f,e,k,l,p,h){if(f instanceof pc.Vec3)b.copy(f),e instanceof pc.Vec3?c.copy(e):c.copy(pc.Vec3.UP);else{if(void 0===k)return;b.set(f,
e,k);void 0!==l?c.set(l,p,h):c.copy(pc.Vec3.UP)}a.setLookAt(this.getPosition(),b,c);d.setFromMat4(a);this.setRotation(d)}}(),translate:function(){var a=new pc.Vec3;return function(b,c,d){b instanceof pc.Vec3?a.copy(b):a.set(b,c,d);a.add(this.getPosition());this.setPosition(a)}}(),translateLocal:function(){var a=new pc.Vec3;return function(b,c,d){b instanceof pc.Vec3?a.copy(b):a.set(b,c,d);this.localRotation.transformVector(a,a);this.localPosition.add(a);this.dirtyLocal=!0}}(),rotate:function(){var a=
new pc.Quat,b=new pc.Quat;return function(c,d,f){c instanceof pc.Vec3?a.setFromEulerAngles(c.data[0],c.data[1],c.data[2]):a.setFromEulerAngles(c,d,f);null===this._parent?this.localRotation.mul2(a,this.localRotation):(c=this.getRotation(),d=this._parent.getRotation(),b.copy(d).invert(),a.mul2(b,a),this.localRotation.mul2(a,c));this.dirtyLocal=!0}}(),rotateLocal:function(){var a=new pc.Quat;return function(b,c,d){b instanceof pc.Vec3?a.setFromEulerAngles(b.data[0],b.data[1],b.data[2]):a.setFromEulerAngles(b,
c,d);this.localRotation.mul(a);this.dirtyLocal=!0}}()});return{GraphNode:e}}());pc.extend(pc,function(){var e=new pc.Vec3,a=new pc.Vec3,b=function(){this._projection=pc.PROJECTION_PERSPECTIVE;this._nearClip=.1;this._farClip=1E4;this._fov=45;this._orthoHeight=10;this._aspect=16/9;this.frustumCulling=this._horizontalFov=!1;this.cullingMask=4294967295;this._renderDepthRequests=0;this._projMatDirty=!0;this._projMat=new pc.Mat4;this._viewMat=new pc.Mat4;this._viewProjMat=new pc.Mat4;this.vrDisplay=null;this._rect={x:0,y:0,width:1,height:1};this.frustum=new pc.Frustum(this._projMat,
this._viewMat);this._depthTarget=this.renderTarget=null;this._clearOptions={color:[.5,.5,.5,1],depth:1,stencil:0,flags:pc.CLEARFLAG_COLOR|pc.CLEARFLAG_DEPTH|pc.CLEARFLAG_STENCIL};this._node=null};b.prototype={clone:function(){var a=new pc.Camera;a.projection=this._projection;a.nearClip=this._nearClip;a.farClip=this._farClip;a.fov=this._fov;a.aspectRatio=this._aspect;a.renderTarget=this.renderTarget;a.setClearOptions(this.getClearOptions());a.frustumCulling=this.frustumCulling;a.cullingMask=this.cullingMask;
return a},worldToScreen:function(a,b,f,e){void 0===e&&(e=new pc.Vec3);var c=this.getProjectionMatrix(),d=this._node.getWorldTransform();this._viewMat.copy(d).invert();this._viewProjMat.mul2(c,this._viewMat);this._viewProjMat.transformPoint(a,e);a=a.data;c=this._viewProjMat.data;a=a[0]*c[3]+a[1]*c[7]+a[2]*c[11]+1*c[15];e.x=.5*(e.x/a+1)*b;e.y=.5*(1-e.y/a)*f;return e},screenToWorld:function(b,d,f,g,k,l){void 0===l&&(l=new pc.Vec3);var c=this.getProjectionMatrix(),h=this._node.getWorldTransform();this._viewMat.copy(h).invert();
this._viewProjMat.mul2(c,this._viewMat);c=this._viewProjMat.clone().invert();this._projection===pc.PROJECTION_PERSPECTIVE?(a.set(b/g*2-1,(k-d)/k*2-1,1),b=c.transformPoint(a),b.scale(1/(a.x*c.data[3]+a.y*c.data[7]+a.z*c.data[11]+c.data[15])),f/=this._farClip,l.lerp(this._node.getPosition(),b,f)):(e.set(b/g*2-1,(k-d)/k*2-1,(this._farClip-f)/(this._farClip-this._nearClip)*2-1),c.transformPoint(e,l));return l},getClearOptions:function(){return this._clearOptions},getProjectionMatrix:function(){if(this._projMatDirty){if(this._projection===
pc.PROJECTION_PERSPECTIVE)this._projMat.setPerspective(this._fov,this._aspect,this._nearClip,this._farClip,this._horizontalFov);else{var a=this._orthoHeight,b=a*this._aspect;this._projMat.setOrtho(-b,b,-a,a,this._nearClip,this._farClip)}this._projMatDirty=!1}return this._projMat},getRect:function(){return this._rect},setClearOptions:function(a){this._clearOptions.color[0]=a.color[0];this._clearOptions.color[1]=a.color[1];this._clearOptions.color[2]=a.color[2];this._clearOptions.color[3]=a.color[3];
this._clearOptions.depth=a.depth;this._clearOptions.stencil=a.stencil;this._clearOptions.flags=a.flags},setRect:function(a,b,f,e){this._rect.x=a;this._rect.y=b;this._rect.width=f;this._rect.height=e},requestDepthMap:function(){this._renderDepthRequests++},releaseDepthMap:function(){this._renderDepthRequests--}};Object.defineProperty(b.prototype,"aspectRatio",{get:function(){return this._aspect},set:function(a){this._aspect!==a&&(this._aspect=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,
"projection",{get:function(){return this._projection},set:function(a){this._projection!==a&&(this._projection=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,"nearClip",{get:function(){return this._nearClip},set:function(a){this._nearClip!==a&&(this._nearClip=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,"farClip",{get:function(){return this._farClip},set:function(a){this._farClip!==a&&(this._farClip=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,"fov",
{get:function(){return this._fov},set:function(a){this._fov!==a&&(this._fov=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,"horizontalFov",{get:function(){return this._horizontalFov},set:function(a){this._horizontalFov!==a&&(this._horizontalFov=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,"orthoHeight",{get:function(){return this._orthoHeight},set:function(a){this._orthoHeight!==a&&(this._orthoHeight=a,this._projMatDirty=!0)}});Object.defineProperty(b.prototype,"clearColor",
{get:function(){return this._clearOptions.color},set:function(a){this._clearOptions.color[0]=a[0];this._clearOptions.color[1]=a[1];this._clearOptions.color[2]=a[2];this._clearOptions.color[3]=a[3]}});Object.defineProperty(b.prototype,"clearDepth",{get:function(){return this._clearOptions.depth},set:function(a){this._clearOptions.depth=a}});Object.defineProperty(b.prototype,"clearStencil",{get:function(){return this._clearOptions.stencil},set:function(a){this._clearOptions.stencil=a}});Object.defineProperty(b.prototype,
"clearFlags",{get:function(){return this._clearOptions.flags},set:function(a){this._clearOptions.flags=a}});return{Camera:b}}());pc.extend(pc,function(){var e=new pc.Vec3,a=new pc.Vec3,b=new pc.Vec3,c={r:0,g:1,b:2,a:3},d=function(){this._type=pc.LIGHTTYPE_DIRECTIONAL;this._color=new pc.Color(.8,.8,.8);this._intensity=1;this._enabled=this._castShadows=!1;this._mask=1;this.isStatic=!1;this.key=0;this.bakeDir=!0;this.attenuationEnd=this.attenuationStart=10;this._falloffMode=0;this._shadowType=pc.SHADOW_PCF3;this._vsmBlurSize=11;this.vsmBlurMode=pc.BLUR_GAUSSIAN;this.vsmBias=.0025;this._cookie=null;this.cookieIntensity=1;this._cookieFalloff=
!0;this._cookieChannel="rgb";this._cookieOffset=this._cookieTransform=null;this._cookieOffsetSet=this._cookieTransformSet=!1;this._innerConeAngle=40;this._outerConeAngle=45;this._finalColor=new pc.Vec3(.8,.8,.8);var a=Math.pow(this._finalColor.data[0],2.2);this._linearFinalColor=new pc.Vec3(a,a,a);this._position=new pc.Vec3(0,0,0);this._direction=new pc.Vec3(0,0,0);this._innerConeAngleCos=Math.cos(this._innerConeAngle*Math.PI/180);this._outerConeAngleCos=Math.cos(this._outerConeAngle*Math.PI/180);
this._shadowCamera=null;this._shadowMatrix=new pc.Mat4;this.shadowDistance=40;this._shadowResolution=1024;this.shadowBias=-5E-4;this._normalOffsetBias=0;this.shadowUpdateMode=pc.SHADOWUPDATE_REALTIME;this._node=this._scene=null;this._rendererParams=[];this._isVsm=!1;this._isPcf=!0;this._isCachedShadowMap=this._cacheShadowMap=!1};d.prototype={clone:function(){var a=new pc.Light;a.type=this._type;a.setColor(this._color);a.intensity=this._intensity;a.castShadows=this.castShadows;a.enabled=this._enabled;
a.attenuationStart=this.attenuationStart;a.attenuationEnd=this.attenuationEnd;a.falloffMode=this._falloffMode;a.shadowType=this._shadowType;a.vsmBlurSize=this._vsmBlurSize;a.vsmBlurMode=this.vsmBlurMode;a.vsmBias=this.vsmBias;a.shadowUpdateMode=this.shadowUpdateMode;a.mask=this._mask;a.innerConeAngle=this._innerConeAngle;a.outerConeAngle=this._outerConeAngle;a.shadowBias=this.shadowBias;a.normalOffsetBias=this._normalOffsetBias;a.shadowResolution=this._shadowResolution;a.shadowDistance=this.shadowDistance;
return a},getColor:function(){return this._color},getBoundingSphere:function(c){if(this._type===pc.LIGHTTYPE_SPOT){var d=this.attenuationEnd,f=this._outerConeAngle,l=Math.cos(f*pc.math.DEG_TO_RAD),p=this._node;e.copy(p.up);e.scale(.5*-d*l);e.add(p.getPosition());c.center=e;a.copy(p.up);a.scale(-d);b.copy(p.right);b.scale(Math.sin(f*pc.math.DEG_TO_RAD)*d);a.add(b);c.radius=.5*a.length()}else this._type===pc.LIGHTTYPE_POINT&&(c.center=this._node.getPosition(),c.radius=this.attenuationEnd)},getBoundingBox:function(a){if(this._type===
pc.LIGHTTYPE_SPOT){var b=this.attenuationEnd,c=this._node,d=Math.abs(Math.sin(this._outerConeAngle*pc.math.DEG_TO_RAD)*b);a.center.set(0,.5*-b,0);a.halfExtents.set(d,.5*b,d);a.setFromTransformedAabb(a,c.getWorldTransform())}else this._type===pc.LIGHTTYPE_POINT&&(a.center.copy(this._node.getPosition()),a.halfExtents.set(this.attenuationEnd,this.attenuationEnd,this.attenuationEnd))},setColor:function(){var a,b,c;1===arguments.length?(a=arguments[0].r,b=arguments[0].g,c=arguments[0].b):3===arguments.length&&
(a=arguments[0],b=arguments[1],c=arguments[2]);this._color.set(a,b,c);var d=this._intensity;this._finalColor.set(a*d,b*d,c*d);for(a=0;3>a;a++)this._linearFinalColor.data[a]=1<=d?Math.pow(this._finalColor.data[a]/d,2.2)*d:Math.pow(this._finalColor.data[a],2.2)},_destroyShadowMap:function(){if(this._shadowCamera){if(!this._isCachedShadowMap){var a=this._shadowCamera.renderTarget,b;if(a)if(a.length)for(b=0;b<a.length;b++)a[b].colorBuffer&&a[b].colorBuffer.destroy(),a[b].destroy();else a.colorBuffer&&
a.colorBuffer.destroy(),a.destroy()}this._shadowCubeMap=this._shadowCamera=this._shadowCamera.renderTarget=null;this.shadowUpdateMode===pc.SHADOWUPDATE_NONE&&(this.shadowUpdateMode=pc.SHADOWUPDATE_THISFRAME)}},updateShadow:function(){this.shadowUpdateMode!==pc.SHADOWUPDATE_REALTIME&&(this.shadowUpdateMode=pc.SHADOWUPDATE_THISFRAME)},updateKey:function(){var a=this._type<<29|(this._castShadows?1:0)<<28|this._shadowType<<25|this._falloffMode<<23|(0!==this._normalOffsetBias?1:0)<<22|(this._cookie?1:
0)<<21|(this._cookieFalloff?1:0)<<20|c[this._cookieChannel.charAt(0)]<<18|(this._cookieTransform?1:0)<<12;3===this._cookieChannel.length&&(a|=c[this._cookieChannel.charAt(1)]<<16,a|=c[this._cookieChannel.charAt(2)]<<14);this.key=a}};Object.defineProperty(d.prototype,"enabled",{get:function(){return this._type},set:function(a){this._type!==a&&(this._enabled=a,null!==this._scene&&(this._scene.updateShaders=!0))}});Object.defineProperty(d.prototype,"type",{get:function(){return this._type},set:function(a){this._type!==
a&&(this._type=a,this._destroyShadowMap(),null!==this._scene&&(this._scene.updateShaders=!0),this.updateKey(),a=this._shadowType,this._shadowType=null,this.shadowType=a)}});Object.defineProperty(d.prototype,"mask",{get:function(){return this._mask},set:function(a){this._mask!==a&&(this._mask=a,null!==this._scene&&(this._scene.updateShaders=!0))}});Object.defineProperty(d.prototype,"shadowType",{get:function(){return this._shadowType},set:function(a){if(this._shadowType!==a){var b=pc.Application.getApplication().graphicsDevice;
this._type===pc.LIGHTTYPE_POINT&&(a=pc.SHADOW_PCF3);a!==pc.SHADOW_PCF5||b.webgl2||(a=pc.SHADOW_PCF3);a!==pc.SHADOW_VSM32||b.extTextureFloatRenderable||(a=pc.SHADOW_VSM16);a!==pc.SHADOW_VSM16||b.extTextureHalfFloatRenderable||(a=pc.SHADOW_VSM8);this._isVsm=a>=pc.SHADOW_VSM8&&a<=pc.SHADOW_VSM32;this._isPcf=a===pc.SHADOW_PCF5||a===pc.SHADOW_PCF3;this._shadowType=a;this._destroyShadowMap();null!==this._scene&&(this._scene.updateShaders=!0);this.updateKey()}}});Object.defineProperty(d.prototype,"castShadows",
{get:function(){return this._castShadows&&this._mask!==pc.MASK_LIGHTMAP&&0!==this._mask},set:function(a){this._castShadows!==a&&(this._castShadows=a,null!==this._scene&&(this._scene.updateShaders=!0),this.updateKey())}});Object.defineProperty(d.prototype,"shadowResolution",{get:function(){return this._shadowResolution},set:function(a){if(this._shadowResolution!==a){var b=pc.Application.getApplication().graphicsDevice;this._shadowResolution=a=this._type===pc.LIGHTTYPE_POINT?Math.min(a,b.maxCubeMapSize):
Math.min(a,b.maxTextureSize)}}});Object.defineProperty(d.prototype,"vsmBlurSize",{get:function(){return this._vsmBlurSize},set:function(a){this._vsmBlurSize!==a&&(0===a%2&&a++,this._vsmBlurSize=a)}});Object.defineProperty(d.prototype,"normalOffsetBias",{get:function(){return this._normalOffsetBias},set:function(a){if(this._normalOffsetBias!==a){if(!this._normalOffsetBias&&a||this._normalOffsetBias&&!a)null!==this._scene&&(this._scene.updateShaders=!0),this.updateKey();this._normalOffsetBias=a}}});
Object.defineProperty(d.prototype,"falloffMode",{get:function(){return this._falloffMode},set:function(a){this._falloffMode!==a&&(this._falloffMode=a,null!==this._scene&&(this._scene.updateShaders=!0),this.updateKey())}});Object.defineProperty(d.prototype,"innerConeAngle",{get:function(){return this._innerConeAngle},set:function(a){this._innerConeAngle!==a&&(this._innerConeAngle=a,this._innerConeAngleCos=Math.cos(a*Math.PI/180))}});Object.defineProperty(d.prototype,"outerConeAngle",{get:function(){return this._outerConeAngle},
set:function(a){this._outerConeAngle!==a&&(this._outerConeAngle=a,this._outerConeAngleCos=Math.cos(a*Math.PI/180))}});Object.defineProperty(d.prototype,"intensity",{get:function(){return this._intensity},set:function(a){if(this._intensity!==a){this._intensity=a;var b=this._color.data;a=this._intensity;this._finalColor.set(b[0]*a,b[1]*a,b[2]*a);for(b=0;3>b;b++)this._linearFinalColor.data[b]=1<=a?Math.pow(this._finalColor.data[b]/a,2.2)*a:Math.pow(this._finalColor.data[b],2.2)}}});Object.defineProperty(d.prototype,
"cookie",{get:function(){return this._cookie},set:function(a){this._cookie!==a&&(this._cookie=a,null!==this._scene&&(this._scene.updateShaders=!0),this.updateKey())}});Object.defineProperty(d.prototype,"cookieFalloff",{get:function(){return this._cookieFalloff},set:function(a){this._cookieFalloff!==a&&(this._cookieFalloff=a,null!==this._scene&&(this._scene.updateShaders=!0),this.updateKey())}});Object.defineProperty(d.prototype,"cookieChannel",{get:function(){return this._cookieChannel},set:function(a){if(this._cookieChannel!==
a){if(3>a.length)for(var b=a.charAt(a.length-1),c=3-a.length,d=0;d<c;d++)a+=b;this._cookieChannel=a;null!==this._scene&&(this._scene.updateShaders=!0);this.updateKey()}}});Object.defineProperty(d.prototype,"cookieTransform",{get:function(){return this._cookieTransform},set:function(a){this._cookieTransform!==a&&(!(!this._cookieTransformSet&&!this._cookieOffsetSet)!==!(!a&&!this._cookieOffsetSet)&&null!==this._scene&&(this._scene.updateShaders=!0),this._cookieTransform=a,this._cookieTransformSet=!!a,
a&&!this._cookieOffset&&(this.cookieOffset=new pc.Vec2,this._cookieOffsetSet=!1),this.updateKey())}});Object.defineProperty(d.prototype,"cookieOffset",{get:function(){return this._cookieOffset},set:function(a){if(this._cookieOffset!==a){var b=!(!this._cookieTransformSet&&!a);!(!this._cookieTransformSet&&!this._cookieOffsetSet)!==b&&null!==this._scene&&(this._scene.updateShaders=!0);b&&!a&&this._cookieOffset?this._cookieOffset.set(0,0):this._cookieOffset=a;this._cookieOffsetSet=!!a;a&&!this._cookieTransform&&
(this.cookieTransform=new pc.Vec4(1,1,0,0),this._cookieTransformSet=!1);this.updateKey()}}});return{Light:d}}());pc.extend(pc,function(){var e=0,a=function(){this.name="Untitled";this.id=e++;this._shader=null;this.variants={};this.parameters={};this.alphaTest=0;this.blend=this.alphaToCoverage=!1;this.blendSrc=pc.BLENDMODE_ONE;this.blendDst=pc.BLENDMODE_ZERO;this.blendEquation=pc.BLENDEQUATION_ADD;this.separateAlphaBlend=!1;this.blendSrcAlpha=pc.BLENDMODE_ONE;this.blendDstAlpha=pc.BLENDMODE_ZERO;this.blendAlphaEquation=pc.BLENDEQUATION_ADD;this.cull=pc.CULLFACE_BACK;this.depthWrite=this.depthTest=!0;this.stencilBack=
this.stencilFront=null;this.alphaWrite=this.blueWrite=this.greenWrite=this.redWrite=!0;this.meshInstances=[]};Object.defineProperty(a.prototype,"shader",{get:function(){return this._shader},set:function(a){this.setShader(a)}});Object.defineProperty(a.prototype,"blendType",{get:function(){return this.blend||this.blendSrc!==pc.BLENDMODE_ONE||this.blendDst!==pc.BLENDMODE_ZERO||this.blendEquation!==pc.BLENDEQUATION_ADD?this.blend&&this.blendSrc===pc.BLENDMODE_SRC_ALPHA&&this.blendDst===pc.BLENDMODE_ONE_MINUS_SRC_ALPHA&&
this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_NORMAL:this.blend&&this.blendSrc===pc.BLENDMODE_ONE&&this.blendDst===pc.BLENDMODE_ONE&&this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_ADDITIVE:this.blend&&this.blendSrc===pc.BLENDMODE_SRC_ALPHA&&this.blendDst===pc.BLENDMODE_ONE&&this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_ADDITIVEALPHA:this.blend&&this.blendSrc===pc.BLENDMODE_DST_COLOR&&this.blendDst===pc.BLENDMODE_SRC_COLOR&&this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_MULTIPLICATIVE2X:
this.blend&&this.blendSrc===pc.BLENDMODE_ONE_MINUS_DST_COLOR&&this.blendDst===pc.BLENDMODE_ONE&&this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_SCREEN:this.blend&&this.blendSrc===pc.BLENDMODE_ONE&&this.blendDst===pc.BLENDMODE_ONE&&this.blendEquation===pc.BLENDEQUATION_MIN?pc.BLEND_MIN:this.blend&&this.blendSrc===pc.BLENDMODE_ONE&&this.blendDst===pc.BLENDMODE_ONE&&this.blendEquation===pc.BLENDEQUATION_MAX?pc.BLEND_MAX:this.blend&&this.blendSrc===pc.BLENDMODE_DST_COLOR&&this.blendDst===pc.BLENDMODE_ZERO&&
this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_MULTIPLICATIVE:this.blend&&this.blendSrc===pc.BLENDMODE_ONE&&this.blendDst===pc.BLENDMODE_ONE_MINUS_SRC_ALPHA&&this.blendEquation===pc.BLENDEQUATION_ADD?pc.BLEND_PREMULTIPLIED:pc.BLEND_NORMAL:pc.BLEND_NONE},set:function(a){switch(a){case pc.BLEND_NONE:this.blend=!1;this.blendSrc=pc.BLENDMODE_ONE;this.blendDst=pc.BLENDMODE_ZERO;this.blendEquation=pc.BLENDEQUATION_ADD;break;case pc.BLEND_NORMAL:this.blend=!0;this.blendSrc=pc.BLENDMODE_SRC_ALPHA;this.blendDst=
pc.BLENDMODE_ONE_MINUS_SRC_ALPHA;this.blendEquation=pc.BLENDEQUATION_ADD;break;case pc.BLEND_PREMULTIPLIED:this.blend=!0;this.blendSrc=pc.BLENDMODE_ONE;this.blendDst=pc.BLENDMODE_ONE_MINUS_SRC_ALPHA;this.blendEquation=pc.BLENDEQUATION_ADD;break;case pc.BLEND_ADDITIVE:this.blend=!0;this.blendDst=this.blendSrc=pc.BLENDMODE_ONE;this.blendEquation=pc.BLENDEQUATION_ADD;break;case pc.BLEND_ADDITIVEALPHA:this.blend=!0;this.blendSrc=pc.BLENDMODE_SRC_ALPHA;this.blendDst=pc.BLENDMODE_ONE;this.blendEquation=
pc.BLENDEQUATION_ADD;break;case pc.BLEND_MULTIPLICATIVE2X:this.blend=!0;this.blendSrc=pc.BLENDMODE_DST_COLOR;this.blendDst=pc.BLENDMODE_SRC_COLOR;this.blendEquation=pc.BLENDEQUATION_ADD;break;case pc.BLEND_SCREEN:this.blend=!0;this.blendSrc=pc.BLENDMODE_ONE_MINUS_DST_COLOR;this.blendDst=pc.BLENDMODE_ONE;this.blendEquation=pc.BLENDEQUATION_ADD;break;case pc.BLEND_MULTIPLICATIVE:this.blend=!0;this.blendSrc=pc.BLENDMODE_DST_COLOR;this.blendDst=pc.BLENDMODE_ZERO;this.blendEquation=pc.BLENDEQUATION_ADD;
break;case pc.BLEND_MIN:this.blend=!0;this.blendDst=this.blendSrc=pc.BLENDMODE_ONE;this.blendEquation=pc.BLENDEQUATION_MIN;break;case pc.BLEND_MAX:this.blend=!0,this.blendDst=this.blendSrc=pc.BLENDMODE_ONE,this.blendEquation=pc.BLENDEQUATION_MAX}this._updateMeshInstanceKeys()}});a.prototype._cloneInternal=function(a){a.name=this.name;a.id=e++;a.variants={};a.shader=this.shader;a.parameters={};for(var b in this.parameters)this.parameters.hasOwnProperty(b)&&(a.parameters[b]={scopeId:null,data:this.parameters[b].data});
a.alphaTest=this.alphaTest;a.alphaToCoverage=this.alphaToCoverage;a.blend=this.blend;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.separateAlphaBlend=this.separateAlphaBlend;a.blendSrcAlpha=this.blendSrcAlpha;a.blendDstAlpha=this.blendDstAlpha;a.blendAlphaEquation=this.blendAlphaEquation;a.cull=this.cull;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;this.stencilFront&&(a.stencilFront=this.stencilFront.clone());this.stencilBack&&(a.stencilBack=this.stencilFront===
this.stencilBack?a.stencilFront:this.stencilBack.clone());a.redWrite=this.redWrite;a.greenWrite=this.greenWrite;a.blueWrite=this.blueWrite;a.alphaWrite=this.alphaWrite;a.meshInstances=[]};a.prototype.clone=function(){var a=new pc.Material;this._cloneInternal(a);return a};a.prototype._updateMeshInstanceKeys=function(){var a,b=this.meshInstances;for(a=0;a<b.length;a++)b[a].updateKey()};a.prototype.updateShader=function(a,b,f){};a.prototype.clearParameters=function(){this.parameters={}};a.prototype.getParameters=
function(){return this.parameters};a.prototype.clearVariants=function(){for(var a in this.variants)this.variants.hasOwnProperty(a)&&this.variants[a]._refCount--;this.variants={};for(var b,f=0;f<this.meshInstances.length;f++)for(a=this.meshInstances[f],b=0;b<a._shader.length;b++)a._shader[b]=null};a.prototype.getParameter=function(a){return this.parameters[a]};a.prototype.setParameter=function(a,b){var c;if(void 0===b&&"object"===typeof a){if(a.length){for(c=0;c<a.length;c++)this.setParameter(a[c]);
return}c=a.name;b=a.value}else c=a;var d=this.parameters[c];d?d.data=b:this.parameters[c]={scopeId:null,data:b}};a.prototype.deleteParameter=function(a){this.parameters[a]&&delete this.parameters[a]};a.prototype.setParameters=function(){for(var a in this.parameters){var b=this.parameters[a];b.scopeId.setValue(b.data)}};a.prototype.update=function(){throw Error("Not Implemented in base class");};a.prototype.init=function(a){throw Error("Not Implemented in base class");};a.prototype.getName=function(){return this.name};
a.prototype.setName=function(a){this.name=a};a.prototype.getShader=function(){return this.shader};a.prototype.setShader=function(a){this._shader&&this._shader._refCount--;(this._shader=a)&&a._refCount++};a.prototype.destroy=function(){this.shader&&(this.shader._refCount--,1>this.shader._refCount&&this.shader.destroy());var a,b;for(b in this.variants)this.variants.hasOwnProperty(b)&&(a=this.variants[b],a!==this.shader&&(a._refCount--,1>a._refCount&&a.destroy()));this.variants={};this.shader=null;for(var f=
0;f<this.meshInstances.length;f++){a=this.meshInstances[f];for(b=0;b<a._shader.length;b++)a._shader[b]=null;a._material=null;this!==pc.Scene.defaultMaterial&&(a.material=pc.Scene.defaultMaterial)}};var b=function(a){this.func=void 0===a.func?pc.FUNC_ALWAYS:a.func;this.ref=a.ref||0;this.readMask=void 0===a.readMask?255:a.readMask;this.writeMask=void 0===a.writeMask?255:a.writeMask;this.fail=a.fail||pc.STENCILOP_KEEP;this.zfail=a.zfail||pc.STENCILOP_KEEP;this.zpass=a.zpass||pc.STENCILOP_KEEP};b.prototype.clone=
function(){return new pc.StencilParameters({func:this.func,ref:this.ref,readMask:this.readMask,writeMask:this.writeMask,fail:this.fail,zfail:this.zfail,zpass:this.zpass})};return{Material:a,StencilParameters:b}}());pc.extend(pc,function(){var e;e=pc.inherits(function(){this.color=new pc.Color(1,1,1,1);this.colorMap=null;this.vertexColors=!1;this.update()},pc.Material);pc.extend(e.prototype,{clone:function(){var a=new pc.BasicMaterial;pc.Material.prototype._cloneInternal.call(this,a);a.color.copy(this.color);a.colorMap=this.colorMap;a.vertexColors=this.vertexColors;a.update();return a},update:function(){this.clearParameters();this.setParameter("uColor",this.color.data);this.colorMap&&this.setParameter("texture_diffuseMap",
this.colorMap)},updateShader:function(a){var b={skin:!!this.meshInstances[0].skinInstance,vertexColors:this.vertexColors,diffuseMap:this.colorMap};this.shader=a.getProgramLibrary().getProgram("basic",b)}});return{BasicMaterial:e}}());pc.extend(pc,function(){var e;e=pc.inherits(function(){},pc.Material);pc.extend(e.prototype,{clone:function(){var a=new pc.DepthMaterial;pc.Material.prototype._cloneInternal.call(this,a);a.update();return a},update:function(){},updateShader:function(a){var b={skin:!!this.meshInstances[0].skinInstance};this.shader=a.getProgramLibrary().getProgram("depth",b)}});return{DepthMaterial:e}}());pc.extend(pc,function(){new pc.Vec3;new pc.Vec3;new pc.BoundingBox;var e=function(){this.reset();this.update()},a=[],b=[],c=[],d=[],f={},g=function(b,d,g,k){var l="_"+d+"Map",h=l+"Tiling",m=l+"Offset",p=l.substring(1)+"Transform",n=l+"Uv",q=l+"Channel",r=l+"VertexColor";b[l]=null;b[h]=new pc.Vec2(1,1);b[m]=new pc.Vec2(0,0);b[p]=null;b[n]=g;0<k&&(b[q]=1<k?"rgb":"g");b[r]=!1;pc._matTex2D||(pc._matTex2D=[]);pc._matTex2D[d]=k;Object.defineProperty(e.prototype,l.substring(1),{get:function(){return this[l]},
set:function(a){var b=this[l];!!b^!!a&&(this.dirtyShader=!0);b&&a&&(b.rgbm!==a.rgbm||b.fixCubemapSeams!==a.fixCubemapSeams||b.format!==a.format)&&(this.dirtyShader=!0);this[l]=a}});b=h.substring(1);d=m.substring(1);Object.defineProperty(e.prototype,b,{get:function(){return this[h]},set:function(a){this.dirtyShader=!0;this[h]=a}});f[b]=function(a,b,c){a=a._updateMapTransform(c?a[p]:null,b,a[m]);return{name:"texture_"+p,value:a.data}};Object.defineProperty(e.prototype,d,{get:function(){return this[m]},
set:function(a){this.dirtyShader=!0;this[m]=a}});f[d]=function(a,b,c){a=a._updateMapTransform(c?a[p]:null,a[h],b);return{name:"texture_"+p,value:a.data}};Object.defineProperty(e.prototype,n.substring(1),{get:function(){return this[n]},set:function(a){this[n]!==a&&(this.dirtyShader=!0);this[n]=a}});Object.defineProperty(e.prototype,q.substring(1),{get:function(){return this[q]},set:function(a){this[q]!==a&&(this.dirtyShader=!0);this[q]=a}});Object.defineProperty(e.prototype,r.substring(1),{get:function(){return this[r]},
set:function(a){this.dirtyShader=!0;this[r]=a}});a.push(l.substring(1));a.push(h.substring(1));a.push(m.substring(1));a.push(n.substring(1));a.push(q.substring(1));a.push(r.substring(1));c.push(p)},k=[],l=function(b,c,g,l){var h="_"+c,m=c+"Uniform",p=c+"Intensity",n="_"+p;b[h]=g;b[m]=new Float32Array(3);Object.defineProperty(e.prototype,c,{get:function(){this.dirtyShader=this.dirtyColor=!0;return this[h]},set:function(a){var b=this[h];(0===b.data[0]&&0===b.data[1]&&0===b.data[2]||1===b.data[0]&&1===
b.data[1]&&1===b.data[2])^(0===a.data[0]&&0===a.data[1]&&0===a.data[2]||1===a.data[0]&&1===a.data[1]&&1===a.data[2])&&(this.dirtyShader=!0);this.dirtyColor=!0;this[h]=a}});a.push(c);d.push(m);k.push(c);f[c]=function(a,b,d){d=d?a[m]:new Float32Array(3);var f=!1;a.useGammaTonemap&&(f=(a._scene||pc.Application.getApplication().scene).gammaCorrection);for(var e=0;3>e;e++)d[e]=f?Math.pow(b.data[e],2.2):b.data[e],l&&(d[e]*=a[n]);return{name:"material_"+c,value:d}};l&&(b[n]=1,Object.defineProperty(e.prototype,
p,{get:function(){return this[n]},set:function(a){var b=this[n];(0===b||1===b)^(0===a||1===a)&&(this.dirtyShader=!0);this.dirtyColor=!0;this[n]=a}}),a.push(p),f[p]=function(a,b,d){b=d?a[m]:new Float32Array(3);d=!1;a.useGammaTonemap&&(d=(a._scene||pc.Application.getApplication().scene).gammaCorrection);for(var f=0;3>f;f++)b[f]=d?Math.pow(a[h].data[f],2.2):a[h].data[f],b[f]*=a[n];return{name:"material_"+c,value:b}})},p=function(b,c,d,g){var k="_"+c;b[k]=d;Object.defineProperty(e.prototype,c,{get:function(){return this[k]},
set:function(a){var b=this[k];(0===b||1===b)^(0===a||1===a)&&(this.dirtyShader=!0);this[k]=a}});a.push(c);f[c]=void 0!==g?g:function(a,b,d){return{name:"material_"+c,value:b}}},h=function(b,c,d){var g="_"+c;b[g]=null;Object.defineProperty(e.prototype,c,{get:function(){return this[g]},set:function(a){!!this[g]^!!a&&(this.dirtyShader=!0);this[g]=a}});a.push(c);f[c]=d},m=function(b){this._chunks=null;Object.defineProperty(e.prototype,"chunks",{get:function(){this.dirtyShader=!0;return this._chunks},
set:function(a){this.dirtyShader=!0;this._chunks=a}});a.push("chunks")},q=function(b,c,d){var f="_"+c;b[f]=d;Object.defineProperty(e.prototype,c,{get:function(){return this[f]},set:function(a){this[f]!==a&&(this.dirtyShader=!0);this[f]=a}});a.push(c)},n=function(){};n.prototype.copy=function(a){for(var b in a)a.hasOwnProperty(b)&&"copy"!==b&&(this[b]=a[b])};e=pc.inherits(e,pc.Material);pc.extend(e.prototype,{reset:function(){this.blendType=pc.BLEND_NONE;var f;for(f=0;f<a.length;f++){var e=b[f];this[a[f]]=
e?e.clone?e.clone():e:e}for(f=0;f<c.length;f++)this[c[f]]=null;for(f=0;f<d.length;f++)this[d[f]]=new Float32Array(3);this._chunks=new n;this.cubeMapMinUniform=new Float32Array(3);this.cubeMapMaxUniform=new Float32Array(3)},clone:function(){var b=new pc.StandardMaterial;pc.Material.prototype._cloneInternal.call(this,b);for(var c,d=0;d<a.length;d++)c=a[d],void 0!==this[c]&&(this[c]&&this[c].copy?b[c]?b[c].copy(this[c]):b[c]=this[c].clone():b[c]=this[c]);b.shader||b.update();return b},init:function(a){this.reset();
this.name=a.name;a.chunks&&this.chunks.copy(a.chunks);for(var b=0;b<a.parameters.length;b++){var c=a.parameters[b];if("vec3"===c.type)this[c.name]=new pc.Color(c.data[0],c.data[1],c.data[2]);else if("vec2"===c.type)this[c.name]=new pc.Vec2(c.data[0],c.data[1]);else if("texture"===c.type){var d=c.name;c=c.data?c.data instanceof pc.Texture?c.data:null:null;this[d]=c}else if("cubemap"===c.type)d=c.name,c=c.data&&c.data instanceof pc.Texture?c.data:null,this[d]=c;else if("bumpMapFactor"===c.name)this.bumpiness=
c.data;else if("boundingbox"===c.type){var d=c.name,f;f=c;c=f.data&&f.data.center?new pc.Vec3(f.data.center[0],f.data.center[1],f.data.center[2]):new pc.Vec3(0,0,0);f=f.data&&f.data.halfExtents?new pc.Vec3(f.data.halfExtents[0],f.data.halfExtents[1],f.data.halfExtents[2]):new pc.Vec3(.5,.5,.5);c=new pc.BoundingBox(c,f);this[d]=c}else this[c.name]=c.data}this.update()},_updateMapTransform:function(a,b,c){a=a||new pc.Vec4;a.set(b.x,b.y,c.x,c.y);return 1===a.x&&1===a.y&&0===a.z&&0===a.w?null:a},_collectLights:function(a,
b,c,d,f){var e,g;for(g=0;g<b.length;g++)e=b[g],e._enabled&&e._mask&d&&e._type===a&&(a===pc.LIGHTTYPE_DIRECTIONAL||!e.isStatic)&&c.push(e);if(f)for(g=0;g<f.length;g++)e=f[g],e._type===a&&c.push(e)},_setParameter:function(a,b){this.setParameter(a,b);this._propsSet.push(a)},_clearParameters:function(){for(var a=this._propsSet,b=0;b<a.length;b++)delete this.parameters[a[b]];this._propsSet=[]},_updateMap:function(a){a+="Map";if(this[a]){this._setParameter("texture_"+a,this[a]);var b=a+"Transform";this[b]=
this._updateMapTransform(this[b],this[a+"Tiling"],this[a+"Offset"]);this[b]&&this._setParameter("texture_"+b,this[b].data)}},getUniform:function(a,b,c){return(a=f[a])?a(this,b,c):null},update:function(){this._clearParameters();this._setParameter("material_ambient",this.ambientUniform);this.diffuseMap&&!this.diffuseMapTint||this._setParameter("material_diffuse",this.diffuseUniform);this.useMetalness?(!this.metalnessMap||1>this.metalness)&&this._setParameter("material_metalness",this.metalness):this.specularMap&&
!this.specularMapTint||this._setParameter("material_specular",this.specularUniform);this._setParameter(this.getUniform("shininess",this.shininess,!0));this.emissiveMap&&!this.emissiveMapTint||this._setParameter("material_emissive",this.emissiveUniform);this.emissiveMap&&this._setParameter("material_emissiveIntensity",this.emissiveIntensity);0<this.refraction&&(this._setParameter("material_refraction",this.refraction),this._setParameter("material_refractionIndex",this.refractionIndex));this._setParameter("material_opacity",
this.opacity);this.occludeSpecular&&this._setParameter("material_occludeSpecularIntensity",this.occludeSpecularIntensity);this.cubeMapProjection===pc.CUBEPROJ_BOX&&this._setParameter(this.getUniform("cubeMapProjectionBox",this.cubeMapProjectionBox,!0));for(var a in pc._matTex2D)this._updateMap(a);this.ambientSH&&this._setParameter("ambientSH[0]",this.ambientSH);this.normalMap&&this._setParameter("material_bumpiness",this.bumpiness);this.heightMap&&this._setParameter(this.getUniform("heightMapFactor",
this.heightMapFactor,!0));this.cubeMap&&this._setParameter("texture_cubeMap",this.cubeMap);this.prefilteredCubeMap128&&this._setParameter("texture_prefilteredCubeMap128",this.prefilteredCubeMap128);this.prefilteredCubeMap64&&this._setParameter("texture_prefilteredCubeMap64",this.prefilteredCubeMap64);this.prefilteredCubeMap32&&this._setParameter("texture_prefilteredCubeMap32",this.prefilteredCubeMap32);this.prefilteredCubeMap16&&this._setParameter("texture_prefilteredCubeMap16",this.prefilteredCubeMap16);
this.prefilteredCubeMap8&&this._setParameter("texture_prefilteredCubeMap8",this.prefilteredCubeMap8);this.prefilteredCubeMap4&&this._setParameter("texture_prefilteredCubeMap4",this.prefilteredCubeMap4);this.sphereMap&&this._setParameter("texture_sphereMap",this.sphereMap);this.dpAtlas&&this._setParameter("texture_sphereMap",this.dpAtlas);this._setParameter("material_reflectivity",this.reflectivity);if(this.dirtyShader||!this._scene)this.shader=null,this.clearVariants();this._processColor()},_processColor:function(){if(this.dirtyColor&&
(this._scene||!this.useGammaTonemap)){var a=!1;this.useGammaTonemap&&(a=this._scene.gammaCorrection);for(var b=0;b<k.length;b++)for(var c=this["_"+k[b]],d=this[k[b]+"Uniform"],f=0;3>f;f++)d[f]=a?Math.pow(c.data[f],2.2):c.data[f];for(f=0;3>f;f++)this.emissiveUniform[f]*=this.emissiveIntensity;this.dirtyColor=!1}},_getMapTransformID:function(a,b){if(!a)return 0;this._mapXForms[b]||(this._mapXForms[b]=[]);var c,d,f;for(c=0;c<this._mapXForms[b].length;c++){f=!0;for(d=0;d<a.data.length;d++)if(this._mapXForms[b][c][d]!=
a.data[d]){f=!1;break}if(f)return c+1}c=this._mapXForms[b].length;this._mapXForms[b][c]=[];for(d=0;d<a.data.length;d++)this._mapXForms[b][c][d]=a.data[d];return c+1},updateShader:function(a,b,c,d,f){this._scene||(this._scene=b,this._processColor());var e=b._lights;this._mapXForms=[];var g=a.useTexCubeLod,k=!a.extTextureLod,l,h,m,p,n,q;this.useSkybox&&(l=b._skyboxPrefiltered[0],h=b._skyboxPrefiltered[1],m=b._skyboxPrefiltered[2],p=b._skyboxPrefiltered[3],n=b._skyboxPrefiltered[4],q=b._skyboxPrefiltered[5]);
var r=this.prefilteredCubeMap128||l;h=this.prefilteredCubeMap64||h;m=this.prefilteredCubeMap32||m;p=this.prefilteredCubeMap16||p;n=this.prefilteredCubeMap8||n;q=this.prefilteredCubeMap4||q;if(r){var u=r&&h&&m&&p&&n&&q;k&&u?(r.dpAtlas||(r.dpAtlas=pc.generateDpAtlas(a,[r,h,m,p,n,q]),r.sh=pc.shFromCubemap(p)),this.dpAtlas=r.dpAtlas,this.ambientSH=r.sh,this._setParameter("ambientSH[0]",this.ambientSH),this._setParameter("texture_sphereMap",this.dpAtlas)):g?6>r._levels.length?u?this._setParameter("texture_prefilteredCubeMap128",
r):console.log("Can't use prefiltered cubemap: "+u+", "+g+", "+r._levels):this._setParameter("texture_prefilteredCubeMap128",r):u?(this._setParameter("texture_prefilteredCubeMap128",r),this._setParameter("texture_prefilteredCubeMap64",h),this._setParameter("texture_prefilteredCubeMap32",m),this._setParameter("texture_prefilteredCubeMap16",p),this._setParameter("texture_prefilteredCubeMap8",n),this._setParameter("texture_prefilteredCubeMap4",q)):console.log("Can't use prefiltered cubemap: "+u+", "+
g+", "+r._levels)}k=!1;(h=(h=(this.useMetalness?!0:!!this.specularMap)||!!this.sphereMap||!!this.cubeMap||!!this.dpAtlas)||(this.useMetalness?!0:!(0===this.specular.data[0]&&0===this.specular.data[1]&&0===this.specular.data[2])))&&this.specularMapTint&&!this.useMetalness&&(k=1!==this.specular.data[0]||1!==this.specular.data[1]||1!==this.specular.data[2]);q=(r?r.rgbm:!1)||(this.cubeMap?this.cubeMap.rgbm:!1)||(this.sphereMap?this.sphereMap.rgbm:!1)||(this.dpAtlas?this.dpAtlas.rgbm:!1);m=(r?r.rgbm||
r.format===pc.PIXELFORMAT_RGBA32F:!1)||(this.cubeMap?this.cubeMap.rgbm||this.cubeMap.format===pc.PIXELFORMAT_RGBA32F:!1)||(this.sphereMap?this.sphereMap.rgbm||this.sphereMap.format===pc.PIXELFORMAT_RGBA32F:!1)||(this.dpAtlas?this.dpAtlas.rgbm||this.dpAtlas.format===pc.PIXELFORMAT_RGBA32F:!1);n=(n=(1!==this.emissive.data[0]||1!==this.emissive.data[1]||1!==this.emissive.data[2]||1!==this.emissiveIntensity)&&this.emissiveMapTint)?3:1!==this.emissiveIntensity?1:0;b={fog:this.useFog?b.fog:"none",gamma:this.useGammaTonemap?
b.gammaCorrection:pc.GAMMA_NONE,toneMap:this.useGammaTonemap?b.toneMapping:-1,blendMapsWithColors:!0,modulateAmbient:this.ambientTint,diffuseTint:(1!==this.diffuse.data[0]||1!==this.diffuse.data[1]||1!==this.diffuse.data[2])&&this.diffuseMapTint,specularTint:k,metalnessTint:this.useMetalness&&1>this.metalness,glossTint:!0,emissiveTint:n,opacityTint:1!==this.opacity&&this.blendType!==pc.BLEND_NONE,alphaTest:0<this.alphaTest,alphaToCoverage:this.alphaToCoverage,needsNormalFloat:this.normalizeNormalMap,
sphereMap:!!this.sphereMap,cubeMap:!!this.cubeMap,dpAtlas:!!this.dpAtlas,ambientSH:!!this.ambientSH,useSpecular:h,rgbmReflection:q,hdrReflection:m,fixSeams:r?r.fixCubemapSeams:this.cubeMap?this.cubeMap.fixCubemapSeams:!1,prefilteredCubemap:!!r,emissiveFormat:this.emissiveMap?this.emissiveMap.rgbm?1:this.emissiveMap.format===pc.PIXELFORMAT_RGBA32F?2:0:null,lightMapFormat:this.lightMap?this.lightMap.rgbm?1:this.lightMap.format===pc.PIXELFORMAT_RGBA32F?2:0:null,useRgbm:q||(this.emissiveMap?this.emissiveMap.rgbm:
0)||(this.lightMap?this.lightMap.rgbm:0),specularAA:this.specularAntialias,conserveEnergy:this.conserveEnergy,occludeSpecular:this.occludeSpecular,occludeSpecularFloat:1!==this.occludeSpecularIntensity,occludeDirect:this.occludeDirect,shadingModel:this.shadingModel,fresnelModel:this.fresnelModel,packedNormal:this.normalMap?this.normalMap.format===pc.PIXELFORMAT_DXT5:!1,forceFragmentPrecision:this.forceFragmentPrecision,fastTbn:this.fastTbn,cubeMapProjection:this.cubeMapProjection,chunks:this.chunks,
customFragmentShader:this.customFragmentShader,refraction:!!this.refraction,useMetalness:this.useMetalness,blendType:this.blendType,skyboxIntensity:r===l&&r&&1!==b.skyboxIntensity,forceUv1:this.forceUv1,useTexCubeLod:g,msdf:!!this.msdfMap};f===pc.SHADER_FORWARDHDR&&(b.gamma&&(b.gamma=pc.GAMMA_SRGBHDR),b.toneMap=pc.TONEMAP_LINEAR);l=g=f=!1;c&&(b.noShadow=0!==(c&pc.SHADERDEF_NOSHADOW),b.screenSpace=0!==(c&pc.SHADERDEF_SCREENSPACE),b.skin=0!==(c&pc.SHADERDEF_SKIN),b.useInstancing=0!==(c&pc.SHADERDEF_INSTANCING),
0!==(c&pc.SHADERDEF_LM)&&(b.lightMapFormat=1,b.lightMap=!0,b.lightMapChannel="rgb",b.lightMapUv=1,b.lightMapTransform=0,b.lightMapWithoutAmbient=!this.lightMap,b.useRgbm=!0,0!==(c&pc.SHADERDEF_DIRLM)&&(b.dirLightMap=!0)),f=0!==(c&pc.SHADERDEF_UV0),g=0!==(c&pc.SHADERDEF_UV1),l=0!==(c&pc.SHADERDEF_VCOLOR));for(var v in pc._matTex2D)if("opacity"!==v||this.blendType!==pc.BLEND_NONE||0!==this.alphaTest||this.alphaToCoverage)r=v+"Map",k=r+"VertexColor","height"!==v&&this[k]?l&&(r+="Channel",b[k]=this[k],
b[r]=this[r],b.vertexColors=!0):this[r]&&(k=r+"Uv",h=!0,0!==this[k]||f||(h=!1),1!==this[k]||g||(h=!1),h&&(b[r]=!!this[r],h=r+"Transform",r+="Channel",b[h]=this._getMapTransformID(this[h],this[k]),b[r]=this[r],b[k]=this[k]));b.aoMapUv=b.aoMapUv||this.aoUvSet;this._mapXForms=null;this.useLighting?(v=[],f=c?c>>16:1,this._collectLights(pc.LIGHTTYPE_DIRECTIONAL,e,v,f),this._collectLights(pc.LIGHTTYPE_POINT,e,v,f,d),this._collectLights(pc.LIGHTTYPE_SPOT,e,v,f,d),b.lights=v):b.lights=[];0===b.lights.length&&
(b.noShadow=!1);this.shader=a.getProgramLibrary().getProgram("standard",b);c||(this.clearVariants(),this.variants[0]=this.shader);this.dirtyShader=!1}});(function(c){c.dirtyShader=!0;c.dirtyColor=!0;c._scene=null;l(c,"ambient",new pc.Color(.7,.7,.7));l(c,"diffuse",new pc.Color(1,1,1));l(c,"specular",new pc.Color(0,0,0));l(c,"emissive",new pc.Color(0,0,0),!0);p(c,"shininess",25,function(a,b){return{name:"material_shininess",value:a.shadingModel===pc.SPECULAR_PHONG?Math.pow(2,.11*b):.01*b}});p(c,"heightMapFactor",
1,function(a,b){return{name:"material_heightMapFactor",value:.025*b}});p(c,"opacity",1);p(c,"alphaTest",0);p(c,"bumpiness",1);p(c,"reflectivity",1);p(c,"occludeSpecularIntensity",1);p(c,"refraction",0);p(c,"refractionIndex",1/1.5);p(c,"metalness",1);p(c,"aoUvSet",0,null);h(c,"ambientSH",function(a,b,c){return{name:"ambientSH[0]",value:b}});h(c,"cubeMapProjectionBox",function(a,b,c){var d=c?a.cubeMapMinUniform:new Float32Array(3);a=c?a.cubeMapMaxUniform:new Float32Array(3);d[0]=b.center.x-b.halfExtents.x;
d[1]=b.center.y-b.halfExtents.y;d[2]=b.center.z-b.halfExtents.z;a[0]=b.center.x+b.halfExtents.x;a[1]=b.center.y+b.halfExtents.y;a[2]=b.center.z+b.halfExtents.z;return[{name:"envBoxMin",value:d},{name:"envBoxMax",value:a}]});m(c);q(c,"ambientTint",!1);q(c,"diffuseMapTint",!1);q(c,"specularMapTint",!1);q(c,"emissiveMapTint",!1);q(c,"fastTbn",!1);q(c,"specularAntialias",!1);q(c,"useMetalness",!1);q(c,"occludeDirect",!1);q(c,"normalizeNormalMap",!0);q(c,"conserveEnergy",!0);q(c,"occludeSpecular",pc.SPECOCC_AO);
q(c,"shadingModel",pc.SPECULAR_BLINN);q(c,"fresnelModel",pc.FRESNEL_NONE);q(c,"cubeMapProjection",pc.CUBEPROJ_NONE);q(c,"customFragmentShader",null);q(c,"forceFragmentPrecision",null);q(c,"useFog",!0);q(c,"useLighting",!0);q(c,"useGammaTonemap",!0);q(c,"useSkybox",!0);q(c,"forceUv1",!1);g(c,"diffuse",0,3);g(c,"specular",0,3);g(c,"emissive",0,3);g(c,"normal",0,-1);g(c,"metalness",0,1);g(c,"gloss",0,1);g(c,"opacity",0,1);g(c,"height",0,1);g(c,"ao",0,1);g(c,"light",1,3);g(c,"msdf",0,3);h(c,"cubeMap");
h(c,"sphereMap");h(c,"dpAtlas");h(c,"prefilteredCubeMap128");h(c,"prefilteredCubeMap64");h(c,"prefilteredCubeMap32");h(c,"prefilteredCubeMap16");h(c,"prefilteredCubeMap8");h(c,"prefilteredCubeMap4");for(var d=0;d<a.length;d++)b[d]=c[a[d]];c._propsSet=[]})(e.prototype);return{StandardMaterial:e}}());pc.extend(pc,function(){function e(a,b,c,d){return(a&15)<<27|(b===pc.BLEND_NONE?1:0)<<26|(c?1:0)<<25|(d&33554431)<<0}var a=0,b=function(a,b,c){this._key=[0,0];this._shader=[null,null,null];this.isStatic=!1;this._staticSource=this._staticLightList=null;this.node=a;this._mesh=b;b._refCount++;this.material=c;this._shaderDefs=65536;this._shaderDefs|=b.vertexBuffer.format.hasUv0?pc.SHADERDEF_UV0:0;this._shaderDefs|=b.vertexBuffer.format.hasUv1?pc.SHADERDEF_UV1:0;this._shaderDefs|=b.vertexBuffer.format.hasColor?
pc.SHADERDEF_VCOLOR:0;this.visible=!0;this.layer=pc.LAYER_WORLD;this.renderStyle=pc.RENDERSTYLE_SOLID;this.castShadow=!1;this._receiveShadow=!0;this._screenSpace=!1;this._updateAabb=this.pick=this.cull=this.drawToDepth=!0;this.updateKey();this.instancingData=this._skinInstance=null;this.aabb=new pc.BoundingBox;this._boneAabb=null;this._aabbVer=-1;this.parameters={}};Object.defineProperty(b.prototype,"mesh",{get:function(){return this._mesh},set:function(a){this._mesh&&this._mesh._refCount--;(this._mesh=
a)&&a._refCount++}});Object.defineProperty(b.prototype,"aabb",{get:function(){if(!this._updateAabb)return this._aabb;if(this.skinInstance){var a=this.mesh.skin.boneNames.length,b;if(!this.mesh.boneAabb){this.mesh.boneAabb=[];this.mesh.boneUsed=[];var c=this.mesh.vertexBuffer.format.elements,d=this.mesh.vertexBuffer.numVertices,e=this.mesh.vertexBuffer.format.size,h,m,q,n,r;for(b=0;b<c.length;b++)c[b].name===pc.SEMANTIC_POSITION?h=c[b].offset:c[b].name===pc.SEMANTIC_BLENDINDICES?m=c[b].offset:c[b].name===
pc.SEMANTIC_BLENDWEIGHT&&(q=c[b].offset);var c=new Uint8Array(this.mesh.vertexBuffer.storage),u=new Float32Array(this.mesh.vertexBuffer.storage);h/=4;var v=q/4,B=e/4,z,t,w,y,A;q=[];var x=[],C=this.mesh.boneUsed;for(b=0;b<a;b++)q[b]=new pc.Vec3(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),x[b]=new pc.Vec3(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(n=0;n<d;n++)for(r=0;4>r;r++)0<u[n*B+v+r]&&(b=c[n*e+m+r],w=u[n*B+h],y=u[n*B+h+1],A=u[n*B+h+2],z=x[b],t=q[b],t.x>w&&(t.x=w),t.y>y&&
(t.y=y),t.z>A&&(t.z=A),z.x<w&&(z.x=w),z.y<y&&(z.y=y),z.z<A&&(z.z=A),C[b]=!0);for(b=0;b<a;b++)d=new pc.BoundingBox,d.setMinMax(q[b],x[b]),this.mesh.boneAabb.push(d)}if(!this._boneAabb)for(this._boneAabb=[],b=0;b<this.mesh.boneAabb.length;b++)this._boneAabb[b]=new pc.BoundingBox;C=this.mesh.boneUsed;for(b=0;b<this.mesh.boneAabb.length;b++)C[b]&&(this._boneAabb[b].setFromTransformedAabb(this.mesh.boneAabb[b],this.skinInstance.matrices[b]),this._boneAabb[b].center.add(this.skinInstance.rootNode.getPosition()));
a=!0;for(b=0;b<this.mesh.boneAabb.length;b++)C[b]&&(a?(this._aabb.center.copy(this._boneAabb[b].center),this._aabb.halfExtents.copy(this._boneAabb[b].halfExtents),a=!1):this._aabb.add(this._boneAabb[b]))}else this.node._aabbVer!==this._aabbVer&&(this._aabb.setFromTransformedAabb(this.mesh.aabb,this.node.getWorldTransform()),this._aabbVer=this.node._aabbVer);return this._aabb},set:function(a){this._aabb=a}});Object.defineProperty(b.prototype,"material",{get:function(){return this._material},set:function(a){var b;
for(b=0;b<this._shader.length;b++)this._shader[b]=null;if(this._material){var c=this._material.meshInstances;b=c.indexOf(this);-1!==b&&c.splice(b,1)}if(this._material=a)this._material.meshInstances.push(this),this.updateKey()}});Object.defineProperty(b.prototype,"layer",{get:function(){return this._layer},set:function(a){this._layer=a;this.updateKey()}});Object.defineProperty(b.prototype,"receiveShadow",{get:function(){return this._receiveShadow},set:function(a){this._shaderDefs=(this._receiveShadow=
a)?this._shaderDefs&~pc.SHADERDEF_NOSHADOW:this._shaderDefs|pc.SHADERDEF_NOSHADOW;this._shader[pc.SHADER_FORWARD]=null;this._shader[pc.SHADER_FORWARDHDR]=null}});Object.defineProperty(b.prototype,"skinInstance",{get:function(){return this._skinInstance},set:function(a){this._shaderDefs=(this._skinInstance=a)?this._shaderDefs|pc.SHADERDEF_SKIN:this._shaderDefs&~pc.SHADERDEF_SKIN;for(a=0;a<this._shader.length;a++)this._shader[a]=null}});Object.defineProperty(b.prototype,"screenSpace",{get:function(){return this._screenSpace},
set:function(a){this._shaderDefs=(this._screenSpace=a)?this._shaderDefs|pc.SHADERDEF_SCREENSPACE:this._shaderDefs&~pc.SHADERDEF_SCREENSPACE;this._shader[pc.SHADER_FORWARD]=null}});Object.defineProperty(b.prototype,"key",{get:function(){return this._key[pc.SORTKEY_FORWARD]},set:function(a){this._key[pc.SORTKEY_FORWARD]=a}});Object.defineProperty(b.prototype,"mask",{get:function(){return this._shaderDefs>>16},set:function(a){this._shaderDefs=this._shaderDefs&65535|a<<16;this._shader[pc.SHADER_FORWARD]=
null;this._shader[pc.SHADER_FORWARDHDR]=null}});pc.extend(b.prototype,{syncAabb:function(){},updateKey:function(){var a=this.material;this._key[pc.SORTKEY_FORWARD]=e(this.layer,a.alphaToCoverage||a.alphaTest?pc.BLEND_NORMAL:a.blendType,!1,a.id)},setParameter:pc.Material.prototype.setParameter,setParameters:pc.Material.prototype.setParameters,deleteParameter:pc.Material.prototype.deleteParameter,getParameter:pc.Material.prototype.getParameter,getParameters:pc.Material.prototype.getParameters,clearParameters:pc.Material.prototype.clearParameters});
var c=function(a,b,c){this._key=[];this._key[pc.SORTKEY_FORWARD]=e(a,b,!0,0);this.command=c};Object.defineProperty(c.prototype,"key",{get:function(){return this._key[pc.SORTKEY_FORWARD]},set:function(a){this._key[pc.SORTKEY_FORWARD]=a}});var d=function(a,b,c){this.buffer=new Float32Array(a*(c||16));this.count=a;this.offset=0;this.usage=b?pc.BUFFER_DYNAMIC:pc.BUFFER_STATIC;this._buffer=null};d.prototype={update:function(){this._buffer&&this._buffer.setData(this.buffer)}};return{Command:c,Mesh:function(){this._refCount=
0;this.id=a++;this.vertexBuffer=null;this.indexBuffer=[null];this.primitive=[{type:0,base:0,count:0}];this.skin=null;this.aabb=new pc.BoundingBox;this.boneAabb=null},MeshInstance:b,InstancingData:d,_getDrawcallSortKey:e}}());pc.extend(pc,function(){var e=function(a,b){this.skin=a;this.rootNode=b;this._dirty=!0;this.bones=[];var c=a.inverseBindPose.length,d=a.device;if(d.supportsBoneTextures){var f;f=256<c?64:64<c?32:16<c?16:8;this.boneTexture=new pc.Texture(d,{width:f,height:f,format:pc.PIXELFORMAT_RGBA32F,mipmaps:!1,minFilter:pc.FILTER_NEAREST,magFilter:pc.FILTER_NEAREST});this.matrixPalette=this.boneTexture.lock()}else this.matrixPalette=new Float32Array(16*c);this.matrices=[];for(d=0;d<c;d++)this.matrices[d]=new pc.Mat4};
e.prototype={updateMatrices:function(){for(var a=this.rootNode.getPosition(),b=this.bones.length-1;0<=b;b--)this.matrices[b].mul2(this.bones[b].getWorldTransform(),this.skin.inverseBindPose[b]),this.matrices[b].data[12]-=a.x,this.matrices[b].data[13]-=a.y,this.matrices[b].data[14]-=a.z},updateMatrixPalette:function(){for(var a,b=this.matrixPalette,c,d=this.bones.length-1;0<=d;d--)a=this.matrices[d].data,c=16*d,b[c]=a[0],b[c+1]=a[1],b[c+2]=a[2],b[c+3]=a[3],b[c+4]=a[4],b[c+5]=a[5],b[c+6]=a[6],b[c+7]=
a[7],b[c+8]=a[8],b[c+9]=a[9],b[c+10]=a[10],b[c+11]=a[11],b[c+12]=a[12],b[c+13]=a[13],b[c+14]=a[14],b[c+15]=a[15];this.skin.device.supportsBoneTextures&&(this.boneTexture.lock(),this.boneTexture.unlock())}};return{Skin:function(a,b,c){this.device=a;this.inverseBindPose=b;this.boneNames=c},SkinInstance:e}}());pc.extend(pc,function(){function e(){this.index=0;this.boneIndices=[0,0,0,0]}function a(){this.indexCount=this.indexStart=this.vertexCount=this.vertexStart=this.partition=0;this.boneIndices=[];this.vertices=[];this.indices=[];this.indexMap={}}function b(a){var b=a.vertices,c=a.skins,d=a.meshes,e=a.meshInstances;for(a=0;a<d.length;a++)d[a].vertices=b[d[a].vertices],void 0!==d[a].skin&&(d[a].skin=c[d[a].skin]);for(a=0;a<e.length;a++)e[a].mesh=d[e[a].mesh]}function c(a){var b=a.vertices,c=a.skins,d=
a.meshes,e=a.meshInstances;for(a=0;a<d.length;a++)d[a].vertices=b.indexOf(d[a].vertices),void 0!==d[a].skin&&(d[a].skin=c.indexOf(d[a].skin));for(a=0;a<e.length;a++)e[a].mesh=d.indexOf(e[a].mesh)}a.prototype={addVertex:function(a,b,c){if(void 0!==this.indexMap[b])c=this.indexMap[b],this.indices.push(c);else{for(var d=0;4>d;d++)0!==c.blendWeight.data[4*b+d]&&(a.boneIndices[d]=this.getBoneRemap(c.blendIndices.data[4*a.index+d]));c=this.vertices.length;this.indices.push(c);this.vertices.push(a);this.indexMap[b]=
c}},addPrimitive:function(a,b,c,e){var d,f,g=[],k=0,q=a.length;for(d=0;d<q;d++)for(var n=a[d].index,r=0;4>r;r++)if(0<c.blendWeight.data[4*n+r]){var u=c.blendIndices.data[4*n+r],v=!0;for(f=0;f<k;f++)if(g[f]==u){v=!1;break}v&&(g[k]=u,f=this.getBoneRemap(u),k+=-1===f?1:0)}if(this.boneIndices.length+k>e)return!1;for(d=0;d<k;d++)this.boneIndices.push(g[d]);for(d=0;d<q;d++)this.addVertex(a[d],b[d],c);return!0},getBoneRemap:function(a){for(var b=0;b<this.boneIndices.length;b++)if(this.boneIndices[b]===a)return b;
return-1}};return{partitionSkin:function(d,f,g){var k,l,p,h;b(d);var m=d.vertices,q=d.skins,n,r=d.meshes,u=d.meshInstances,v=function(a){var b=new e;b.index=a;return b};for(k=q.length-1;0<=k;k--)if(q[k].boneNames.length>g){var B=q.splice(k,1)[0],z=[];for(l=0;l<r.length;l++)r[l].skin===B&&z.push(r[l]);for(l=0;l<z.length;l++)h=r.indexOf(z[l]),-1!==h&&r.splice(h,1);if(0===z.length)throw Error("partitionSkin: There should be at least one mesh that references a skin");var t=z[0].vertices;for(l=1;l<z.length;l++)if(z[l].vertices!==
t)throw Error("partitionSkin: All meshes that share a skin should also share the same vertex buffer");var w=[],y=[];p=[];var A=0;for(l=0;l<z.length;l++){n=z[l];for(var x=n.indices,C=n.base;C<n.base+n.count;){h=x[C++];y[0]=v(h);p[0]=h;h=x[C++];y[1]=v(h);p[1]=h;h=x[C++];y[2]=v(h);p[2]=h;for(var I=!1,M=A;M<w.length;M++)if(h=w[M],h.addPrimitive(y,p,t,g)){I=!0;break}I||(h=new a,h.originalMesh=n,h.addPrimitive(y,p,t,g),w.push(h))}A=w.length}n=[];z=[];for(l=0;l<w.length;l++)if(h=w[l],h.vertices.length&&
h.indices.length){y=n.length;p=h.vertices.length;A=z.length;x=h.indices.length;h.partition=l;h.vertexStart=y;h.vertexCount=p;h.indexStart=A;h.indexCount=x;C=0;for(I=y;C<p;)n[I++]=h.vertices[C++];C=0;for(I=A;C<x;)z[I++]=h.indices[C++]+y}y=[];for(l=0;l<w.length;l++){h=w[l];A=[];x=[];for(p=0;p<h.boneIndices.length;p++)A.push(B.inverseBindMatrices[h.boneIndices[p]]),x.push(B.boneNames[h.boneIndices[p]]);h={inverseBindMatrices:A,boneNames:x};y.push(h);q.push(h)}var K,B={};for(K in t)B[K]={components:t[K].components,
data:[],type:t[K].type};for(K in t)if("blendIndices"===K)for(h=B[K].data,l=0;l<n.length;l++)p=n[l].boneIndices,h.push(p[0],p[1],p[2],p[3]);else for(l=t[K],A=l.data,x=l.components,l=0;l<n.length;l++)for(h=n[l].index,p=0;p<x;p++)B[K].data.push(A[h*x+p]);m[m.indexOf(t)]=B;for(l=0;l<w.length;l++)for(h=w[l],n={aabb:{min:[0,0,0],max:[0,0,0]},vertices:B,skin:y[l],indices:z.splice(0,h.indexCount),type:"triangles",base:0,count:h.indexCount},r.push(n),p=u.length-1;0<=p;p--)u[p].mesh===h.originalMesh&&(u.push({mesh:n,
node:u[p].node}),f&&f.push({material:f[p].material,path:f[p].path}));for(l=0;l<w.length;l++)for(h=w[l],p=u.length-1;0<=p;p--)u[p].mesh===h.originalMesh&&(u.splice(p,1),f&&f.splice(p,1))}c(d)}}}());pc.extend(pc,function(){var e=function(){this.graph=null;this.meshInstances=[];this.skinInstances=[];this.cameras=[];this.lights=[];this._shadersVersion=0};e.prototype={getGraph:function(){return this.graph},setGraph:function(a){this.graph=a},getCameras:function(){return this.cameras},setCameras:function(a){this.cameras=a},getLights:function(){return this.lights},setLights:function(a){this.lights=a},getMaterials:function(){var a,b=[];for(a=0;a<this.meshInstances.length;a++){var c=this.meshInstances[a];
-1===b.indexOf(c.material)&&b.push(c.material)}return b},clone:function(){var a,b,c=[],d=[],f=function(a){var b=a.clone();c.push(a);d.push(b);for(var e=0;e<a._children.length;e++)b.addChild(f(a._children[e]));return b},e=f(this.graph),k=[],l=[];for(a=0;a<this.skinInstances.length;a++){var p=this.skinInstances[a].skin,h=new pc.SkinInstance(p,e),m=[];for(b=0;b<p.boneNames.length;b++){var q=e.findByName(p.boneNames[b]);m.push(q)}h.bones=m;l.push(h)}for(a=0;a<this.meshInstances.length;a++)b=this.meshInstances[a],
p=c.indexOf(b.node),p=new pc.MeshInstance(d[p],b.mesh,b.material),b.skinInstance&&(b=this.skinInstances.indexOf(b.skinInstance),p.skinInstance=l[b]),k.push(p);a=new pc.Model;a.graph=e;a.meshInstances=k;a.skinInstances=l;a.getGraph().syncHierarchy();return a},destroy:function(){for(var a=this.meshInstances,b,c,d,f,e,k=0;k<a.length;k++){b=a[k];if(c=b.mesh)if(c._refCount--,1>c._refCount){c.vertexBuffer&&(e=e||c.vertexBuffer.device,c.vertexBuffer.destroy(),c.vertexBuffer=null);for(f=0;f<c.indexBuffer.length;f++)e=
e||c.indexBuffer.device,(d=c.indexBuffer[f])&&d.destroy();c.indexBuffer.length=0}(c=b.skinInstance)&&(c=c.boneTexture)&&c.destroy();b.skinInstance=null;b.material=null}if(e)e.onVertexBufferDeleted()},generateWireframe:function(){var a,b,c,d,f,e,k,l,p,h,m=[];for(a=0;a<this.meshInstances.length;a++)e=this.meshInstances[a].mesh,-1===m.indexOf(e)&&m.push(e);var q=[[0,1],[1,2],[2,0]];for(a=0;a<m.length;a++){e=m[a];k=e.primitive[pc.RENDERSTYLE_SOLID].base;l=e.primitive[pc.RENDERSTYLE_SOLID].count;p=e.indexBuffer[pc.RENDERSTYLE_SOLID];
h=new Uint16Array(p.lock());var n={},r=[];for(b=k;b<k+l;b+=3)for(c=0;3>c;c++){d=h[b+q[c][0]];f=h[b+q[c][1]];var u=d>f?f<<16|d:d<<16|f;void 0===n[u]&&(n[u]=0,r.push(d,f))}p.unlock();b=new pc.IndexBuffer(p.device,pc.INDEXFORMAT_UINT16,r.length);c=new Uint16Array(b.lock());c.set(r);b.unlock();e.primitive[pc.RENDERSTYLE_WIREFRAME]={type:pc.PRIMITIVE_LINES,base:0,count:r.length,indexed:!0};e.indexBuffer[pc.RENDERSTYLE_WIREFRAME]=b}}};return{Model:e}}());pc.extend(pc,function(){function e(a,b){return a-b*Math.floor(a/b)}function a(a,b){V[a]=void 0!==ca[a]&&null!==ca[a]?ca[a]:b}function b(a,b){for(var c=a.length/3,d=Array(4*c),f=0;f<c;f++)d[4*f]=a[3*f],d[4*f+1]=a[3*f+1],d[4*f+2]=a[3*f+2],d[4*f+3]=(255*b[3*f]<<16|255*b[3*f+1]<<8|255*b[3*f+2])/16777216;return d}function c(a,b){var c,d,f=b.length,e=a.length/f;for(c=0;c<e;c++)for(d=0;d<f;d++)b[d]=Math.max(b[d],Math.abs(a[c*f+d]))}function d(a,b,d){for(var f=new Float32Array(b.length),e=0;e<b.length;e++)f[e]=
b[e]-a[e];c(f,d);a=d.length;var g=f.length/a;for(b=0;b<g;b++)for(e=0;e<a;e++)f[b*a+e]/=d[e],f[b*a+e]*=.5,f[b*a+e]+=.5;return f}function f(a,b){b.data[0]=a.data[0];b.data[1]=a.data[1];b.data[2]=a.data[2];b.data[3]=a.data[4];b.data[4]=a.data[5];b.data[5]=a.data[6];b.data[6]=a.data[8];b.data[7]=a.data[9];b.data[8]=a.data[10]}var g=[[-1,-1],[1,-1],[1,1],[-1,1]],k=function(a,b,c,d,f,e,g){f||(f=pc.PIXELFORMAT_RGBA32F);var k=pc.FILTER_NEAREST;g&&f===pc.PIXELFORMAT_R8_G8_B8_A8&&(k=pc.FILTER_LINEAR);a=new pc.Texture(a,
{width:b,height:c,format:f,cubemap:!1,mipmaps:!1,minFilter:k,magFilter:k,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE});b=a.lock();if(f===pc.PIXELFORMAT_R8_G8_B8_A8){f=new Uint8Array(d.length);for(c=0;c<d.length;c++)f[c]=d[c]*e*255;d=f}b.set(d);a.unlock();return a},l=new pc.Curve([0,0,1,0]),p=new pc.Curve([0,1,1,1]),h=new pc.CurveSet([0,0,1,0],[0,0,1,0],[0,0,1,0]),m=new pc.CurveSet([0,1,1,1],[0,1,1,1],[0,1,1,1]),q=2,n=new pc.Vec3,r=new pc.Vec3,u=new pc.Vec3,v=new pc.Vec3,B=
new pc.Vec3,z=new pc.Vec3,t=new pc.Vec3,w=new pc.Vec3,y=new pc.Vec3,A=new pc.Mat4,x=new pc.Mat3,C=new pc.Mat3,I=1,M,K=new pc.Mat4,H=new pc.Vec3,F=new pc.Vec3,D=new pc.Vec3;new pc.Vec3;var O=new pc.Vec3,U=new pc.Vec3,V,ca,ba=function(b,c){this.graphicsDevice=b;this.precision=32;this._addTimeTime=0;if(!ba.DEFAULT_PARAM_TEXTURE){var d=new Float32Array(1024),f,e,g,n;for(e=0;16>e;e++)for(f=0;16>f;f++)g=f+1-8.5,n=e+1-8.5,n=Math.max(Math.min(1-Math.max(Math.min(Math.sqrt(g*g+n*n)/16,1),0)-.5,1),0),g=16*
e+f,d[4*g]=1,d[4*g+1]=1,d[4*g+2]=1,d[4*g+3]=n;ba.DEFAULT_PARAM_TEXTURE=k(b,16,16,d,pc.PIXELFORMAT_R8_G8_B8_A8,1,!0);ba.DEFAULT_PARAM_TEXTURE.minFilter=pc.FILTER_LINEAR;ba.DEFAULT_PARAM_TEXTURE.magFilter=pc.FILTER_LINEAR}V=this;ca=c;a("numParticles",1);this.numParticles>b.maxTextureSize&&(console.warn("WARNING: can't create more than "+b.maxTextureSize+" particles on this device."),this.numParticles=b.maxTextureSize);a("rate",1);a("rate2",this.rate);a("lifetime",50);a("emitterExtents",new pc.Vec3(0,
0,0));a("emitterRadius",0);a("emitterShape",pc.EMITTERSHAPE_BOX);a("initialVelocity",1);a("wrap",!1);a("localSpace",!1);a("wrapBounds",null);a("colorMap",ba.DEFAULT_PARAM_TEXTURE);a("normalMap",null);a("loop",!0);a("preWarm",!1);a("sort",pc.PARTICLESORT_NONE);a("mode",pc.PARTICLEMODE_GPU);a("scene",null);a("lighting",!1);a("halfLambert",!1);a("intensity",1);a("stretch",0);a("alignToMotion",!1);a("depthSoftening",0);a("mesh",null);a("depthWrite",!1);a("noFog",!1);a("blendType",pc.BLEND_NORMAL);a("node",
null);a("startAngle",0);a("startAngle2",this.startAngle);a("animTilesX",1);a("animTilesY",1);a("animNumFrames",1);a("animSpeed",1);a("animLoop",!0);this.frameRandom=new pc.Vec3(0,0,0);a("colorGraph",m);a("colorGraph2",this.colorGraph);a("scaleGraph",p);a("scaleGraph2",this.scaleGraph);a("alphaGraph",p);a("alphaGraph2",this.alphaGraph);a("localVelocityGraph",h);a("localVelocityGraph2",this.localVelocityGraph);a("velocityGraph",h);a("velocityGraph2",this.velocityGraph);a("rotationSpeedGraph",l);a("rotationSpeedGraph2",
this.rotationSpeedGraph);this.constantParticleTexIN=b.scope.resolve("particleTexIN");this.constantParticleTexOUT=b.scope.resolve("particleTexOUT");this.constantEmitterPos=b.scope.resolve("emitterPos");this.constantEmitterScale=b.scope.resolve("emitterScale");this.constantSpawnBounds=b.scope.resolve("spawnBounds");this.constantSpawnBoundsSphere=b.scope.resolve("spawnBoundsSphere");this.constantInitialVelocity=b.scope.resolve("initialVelocity");this.constantFrameRandom=b.scope.resolve("frameRandom");
this.constantDelta=b.scope.resolve("delta");this.constantRate=b.scope.resolve("rate");this.constantRateDiv=b.scope.resolve("rateDiv");this.constantLifetime=b.scope.resolve("lifetime");this.constantLightCube=b.scope.resolve("lightCube[0]");this.constantGraphSampleSize=b.scope.resolve("graphSampleSize");this.constantGraphNumSamples=b.scope.resolve("graphNumSamples");this.constantInternalTex0=b.scope.resolve("internalTex0");this.constantInternalTex1=b.scope.resolve("internalTex1");this.constantInternalTex2=
b.scope.resolve("internalTex2");this.constantEmitterMatrix=b.scope.resolve("emitterMatrix");this.constantNumParticles=b.scope.resolve("numParticles");this.constantNumParticlesPot=b.scope.resolve("numParticlesPot");this.constantLocalVelocityDivMult=b.scope.resolve("localVelocityDivMult");this.constantVelocityDivMult=b.scope.resolve("velocityDivMult");this.constantRotSpeedDivMult=b.scope.resolve("rotSpeedDivMult");this.constantSeed=b.scope.resolve("seed");this.constantStartAngle=b.scope.resolve("startAngle");
this.constantStartAngle2=b.scope.resolve("startAngle2");this.constantOutBoundsMul=b.scope.resolve("outBoundsMul");this.constantOutBoundsAdd=b.scope.resolve("outBoundsAdd");this.constantInBoundsSize=b.scope.resolve("inBoundsSize");this.constantInBoundsCenter=b.scope.resolve("inBoundsCenter");this.constantMaxVel=b.scope.resolve("maxVel");this.lightCube=new Float32Array(18);this.lightCubeDir=Array(6);this.lightCubeDir[0]=new pc.Vec3(-1,0,0);this.lightCubeDir[1]=new pc.Vec3(1,0,0);this.lightCubeDir[2]=
new pc.Vec3(0,-1,0);this.lightCubeDir[3]=new pc.Vec3(0,1,0);this.lightCubeDir[4]=new pc.Vec3(0,0,-1);this.lightCubeDir[5]=new pc.Vec3(0,0,1);this.animParams=new pc.Vec4;this.camera=this.particleDistance=this.vbOld=this.vbToSort=this.internalTex3=this.internalTex2=this.internalTex1=this.internalTex0=null;this.swapTex=!1;this.useMesh=!0;this.useCpu=!1;this.pack8=!0;this.localBounds=new pc.BoundingBox;this.worldBoundsNoTrail=new pc.BoundingBox;this.worldBoundsTrail=[new pc.BoundingBox,new pc.BoundingBox];
this.worldBounds=new pc.BoundingBox;this.worldBoundsSize=new pc.Vec3;this.prevWorldBoundsSize=new pc.Vec3;this.prevWorldBoundsCenter=new pc.Vec3;this.worldBoundsMul=new pc.Vec3;this.worldBoundsAdd=new pc.Vec3;this.timeToSwitchBounds=0;this.shaderParticleUpdateOnStop=this.shaderParticleUpdateNoRespawn=this.shaderParticleUpdateRespawn=null;this.numParticleIndices=this.numParticleVerts=0;this.meshInstance=this.material=null;this.seed=0;this.fixedTimeStep=1/60;this.maxSubSteps=10;this.simTimeTotal=this.simTime=
0;this.beenReset=!1;this.rebuild()};ba.prototype={onChangeCamera:function(){0<this.depthSoftening&&this.camera&&this.camera.requestDepthMap();this.regenShader();this.resetMaterial()},calculateBoundsMad:function(){this.worldBoundsMul.x=1/this.worldBoundsSize.x;this.worldBoundsMul.y=1/this.worldBoundsSize.y;this.worldBoundsMul.z=1/this.worldBoundsSize.z;this.worldBoundsAdd.copy(this.worldBounds.center).mul(this.worldBoundsMul).scale(-1);this.worldBoundsAdd.x+=.5;this.worldBoundsAdd.y+=.5;this.worldBoundsAdd.z+=
.5},calculateWorldBounds:function(){if(this.node){this.node.getPosition();this.prevWorldBoundsSize.copy(this.worldBoundsSize);this.prevWorldBoundsCenter.copy(this.worldBounds.center);this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,this.node.getWorldTransform());this.worldBoundsTrail[0].add(this.worldBoundsNoTrail);var a=this.simTimeTotal;if(a>this.timeToSwitchBounds){var b=this.worldBoundsTrail[0];this.worldBoundsTrail[0]=this.worldBoundsTrail[1];this.worldBoundsTrail[1]=b;this.worldBoundsTrail[0].copy(this.worldBoundsNoTrail);
this.timeToSwitchBounds=a+this.lifetime}this.worldBounds.copy(this.worldBoundsTrail[0]);this.worldBounds.add(this.worldBoundsTrail[1]);this.worldBoundsSize.copy(this.worldBounds.halfExtents).scale(2);this.meshInstance.mesh.aabb=this.worldBounds;this.meshInstance._aabbVer=1-this.meshInstance._aabbVer;this.pack8&&this.calculateBoundsMad()}},calculateLocalBounds:function(){var a=Number.MAX_VALUE,b=Number.MAX_VALUE,c=Number.MAX_VALUE,d=-Number.MAX_VALUE,f=-Number.MAX_VALUE,e=-Number.MAX_VALUE,g=0,k=this.lifetime/
this.precision,l=[this.qVelocity,this.qVelocity2,this.qLocalVelocity,this.qLocalVelocity2],h=[0,0,0,0],m=[0,0,0,0],p=[0,0,0,0],n,q,r,u,t,v;for(n=0;n<this.precision+1;n++){r=Math.min(n,this.precision-1);for(q=0;4>q;q++)u=l[q][3*r]*k+h[q],t=l[q][3*r+1]*k+m[q],v=l[q][3*r+2]*k+p[q],a>u&&(a=u),b>t&&(b=t),c>v&&(c=v),d<u&&(d=u),f<t&&(f=t),e<v&&(e=v),h[q]=u,m[q]=t,p[q]=v;g=Math.max(g,this.qScale[r])}this.emitterShape===pc.EMITTERSHAPE_BOX?(u=.5*this.emitterExtents.x,t=.5*this.emitterExtents.y,v=.5*this.emitterExtents.z):
v=t=u=this.emitterRadius;d<u&&(d=u);f<t&&(f=t);e<v&&(e=v);u=-u;t=-t;v=-v;a>u&&(a=u);b>t&&(b=t);c>v&&(c=v);O.x=a-g;O.y=b-g;O.z=c-g;U.x=d+g;U.y=f+g;U.z=e+g;this.localBounds.setMinMax(O,U)},rebuild:function(){var a,b=this.graphicsDevice;null===this.colorMap&&(this.colorMap=ba.DEFAULT_PARAM_TEXTURE);this.spawnBounds=this.emitterShape===pc.EMITTERSHAPE_BOX?this.emitterExtents:this.emitterRadius;this.useCpu=this.useCpu||this.sort>pc.PARTICLESORT_NONE||1>=b.maxVertexTextures||64>b.fragmentUniformsCount||
b.forceCpuParticles||!b.extTextureFloat;this.vertexBuffer=void 0;this.pack8=(this.pack8||!b.extTextureFloatRenderable)&&!this.useCpu;q=this.useCpu||this.pack8?4:2;this.useMesh=!1;this.mesh&&(65535<this.numParticles*this.mesh.vertexBuffer.numVertices?console.warn("WARNING: particle system can't render mesh particles because numParticles * numVertices is more than 65k. Reverting to quad particles."):this.useMesh=!0);this.numParticlesPot=pc.math.nextPowerOfTwo(this.numParticles);this.rebuildGraphs();
this.calculateLocalBounds();this.node&&(this.worldBounds.setFromTransformedAabb(this.localBounds,this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBounds),this.worldBoundsTrail[1].copy(this.worldBounds),this.worldBoundsSize.copy(this.worldBounds.halfExtents).scale(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.pack8&&this.calculateBoundsMad());this.vbToSort=Array(this.numParticles);this.particleDistance=new Float32Array(this.numParticles);
this.frameRandom.x=Math.random();this.frameRandom.y=Math.random();this.frameRandom.z=Math.random();this.particleTex=new Float32Array(this.numParticlesPot*q*4);var c=null===this.node||this.localSpace?pc.Vec3.ZERO:this.node.getPosition();this.emitterShape===pc.EMITTERSHAPE_BOX&&(null===this.node?K.setTRS(pc.Vec3.ZERO,pc.Quat.IDENTITY,this.spawnBounds):K.setTRS(pc.Vec3.ZERO,this.node.getRotation(),D.copy(this.spawnBounds).mul(this.node.localScale)));for(a=0;a<this.numParticles;a++)this.calcSpawnPosition(c,
a),this.useCpu&&(this.particleTex[4*a+3+8*this.numParticlesPot]=1);this.particleTexStart=new Float32Array(this.numParticlesPot*q*4);for(a=0;a<this.particleTexStart.length;a++)this.particleTexStart[a]=this.particleTex[a];this.useCpu||(this.pack8?(this.particleTexIN=k(b,this.numParticlesPot,q,this.particleTex,pc.PIXELFORMAT_R8_G8_B8_A8,1,!1),this.particleTexOUT=k(b,this.numParticlesPot,q,this.particleTex,pc.PIXELFORMAT_R8_G8_B8_A8,1,!1),this.particleTexStart=k(b,this.numParticlesPot,q,this.particleTexStart,
pc.PIXELFORMAT_R8_G8_B8_A8,1,!1)):(this.particleTexIN=k(b,this.numParticlesPot,q,this.particleTex),this.particleTexOUT=k(b,this.numParticlesPot,q,this.particleTex),this.particleTexStart=k(b,this.numParticlesPot,q,this.particleTexStart)),this.rtParticleTexIN=new pc.RenderTarget(b,this.particleTexIN,{depth:!1}),this.rtParticleTexOUT=new pc.RenderTarget(b,this.particleTexOUT,{depth:!1}),this.swapTex=!1);a=pc.shaderChunks;var c=a.particleUpdaterInitPS+(this.pack8?a.particleInputRgba8PS+a.particleOutputRgba8PS:
a.particleInputFloatPS+a.particleOutputFloatPS)+(this.emitterShape===pc.EMITTERSHAPE_BOX?a.particleUpdaterAABBPS:a.particleUpdaterSpherePS)+a.particleUpdaterStartPS,d=c+a.particleUpdaterNoRespawnPS+a.particleUpdaterEndPS,f=c+a.particleUpdaterOnStopPS+a.particleUpdaterEndPS;this.shaderParticleUpdateRespawn=a.createShaderFromCode(b,a.fullscreenQuadVS,c+a.particleUpdaterRespawnPS+a.particleUpdaterEndPS,"fsQuad0"+this.emitterShape+""+this.pack8);this.shaderParticleUpdateNoRespawn=a.createShaderFromCode(b,
a.fullscreenQuadVS,d,"fsQuad1"+this.emitterShape+""+this.pack8);this.shaderParticleUpdateOnStop=a.createShaderFromCode(b,a.fullscreenQuadVS,f,"fsQuad2"+this.emitterShape+""+this.pack8);this.numParticleVerts=this.useMesh?this.mesh.vertexBuffer.numVertices:4;this.numParticleIndices=this.useMesh?this.mesh.indexBuffer[0].numIndices:6;this._allocate(this.numParticles);b=new pc.Mesh;b.vertexBuffer=this.vertexBuffer;b.indexBuffer[0]=this.indexBuffer;b.primitive[0].type=pc.PRIMITIVE_TRIANGLES;b.primitive[0].base=
0;b.primitive[0].count=this.numParticles*this.numParticleIndices;b.primitive[0].indexed=!0;this.material=new pc.Material;this.material.cullMode=pc.CULLFACE_NONE;this.material.alphaWrite=!1;this.material.blend=!0;this.material.blendType=this.blendType;this.material.depthWrite=this.depthWrite;this.material.emitter=this;this.regenShader();this.resetMaterial();this.meshInstance=new pc.MeshInstance(this.node,b,this.material);this.meshInstance.updateKey();this.meshInstance.drawToDepth=!1;this.meshInstance.cull=
!0;this.meshInstance.aabb=this.worldBounds;this.meshInstance._updateAabb=!1;this._initializeTextures();this.addTime(0);this.preWarm&&this.prewarm(this.lifetime);this.resetTime()},_isAnimated:function(){return 1<=this.animNumFrames&&(1<this.animTilesX||1<this.animTilesY)&&(this.colorMap&&this.colorMap!==ba.DEFAULT_PARAM_TEXTURE||this.normalMap)},calcSpawnPosition:function(a,b){var c=Math.random(),d=Math.random(),f=Math.random(),e=Math.random();this.useCpu&&(this.particleTex[4*b+0+8*this.numParticlesPot]=
c,this.particleTex[4*b+1+8*this.numParticlesPot]=d,this.particleTex[4*b+2+8*this.numParticlesPot]=f);H.data[0]=c-.5;H.data[1]=d-.5;H.data[2]=f-.5;this.emitterShape===pc.EMITTERSHAPE_BOX?F.copy(a).add(K.transformPoint(H)):(H.normalize(),F.copy(a).add(H.scale(e*this.spawnBounds)));if(this.pack8){var g=(F.data[0]-this.worldBounds.center.data[0])/this.worldBoundsSize.data[0]+.5,e=(F.data[1]-this.worldBounds.center.data[1])/this.worldBoundsSize.data[1]+.5,f=(F.data[2]-this.worldBounds.center.data[2])/
this.worldBoundsSize.data[2]+.5,d=pc.math.lerp(this.startAngle*pc.math.DEG_TO_RAD,this.startAngle2*pc.math.DEG_TO_RAD,c),d=d%(2*Math.PI)/(2*Math.PI),g=encodeFloatRG(g);this.particleTex[4*b]=g[0];this.particleTex[4*b+1]=g[1];e=encodeFloatRG(e);this.particleTex[4*b+2]=e[0];this.particleTex[4*b+3]=e[1];f=encodeFloatRG(f);this.particleTex[4*b+0+4*this.numParticlesPot]=f[0];this.particleTex[4*b+1+4*this.numParticlesPot]=f[1];d=encodeFloatRG(d);this.particleTex[4*b+2+4*this.numParticlesPot]=d[0];this.particleTex[4*
b+3+4*this.numParticlesPot]=d[1];this.particleTex[4*b+3+8*this.numParticlesPot]=1;c=pc.math.lerp(this.rate,this.rate2,c);d=Math.max(this.lifetime,(this.numParticles-1)*Math.max(this.rate,this.rate2));c=encodeFloatRGBA((-c*b+d)/(d+(this.lifetime+1)));this.particleTex[4*b+0+12*this.numParticlesPot]=c[0];this.particleTex[4*b+1+12*this.numParticlesPot]=c[1];this.particleTex[4*b+2+12*this.numParticlesPot]=c[2];this.particleTex[4*b+3+12*this.numParticlesPot]=c[3]}else this.particleTex[4*b]=F.data[0],this.particleTex[4*
b+1]=F.data[1],this.particleTex[4*b+2]=F.data[2],this.particleTex[4*b+3]=pc.math.lerp(this.startAngle*pc.math.DEG_TO_RAD,this.startAngle2*pc.math.DEG_TO_RAD,c),c=pc.math.lerp(this.rate,this.rate2,c),this.particleTex[4*b+3+4*this.numParticlesPot]=-c*b},rebuildGraphs:function(){var a=this.precision,f=this.graphicsDevice,e;this.qLocalVelocity=this.localVelocityGraph.quantize(a);this.qVelocity=this.velocityGraph.quantize(a);this.qColor=this.colorGraph.quantize(a);this.qRotSpeed=this.rotationSpeedGraph.quantize(a);
this.qScale=this.scaleGraph.quantize(a);this.qAlpha=this.alphaGraph.quantize(a);this.qLocalVelocity2=this.localVelocityGraph2.quantize(a);this.qVelocity2=this.velocityGraph2.quantize(a);this.qColor2=this.colorGraph2.quantize(a);this.qRotSpeed2=this.rotationSpeedGraph2.quantize(a);this.qScale2=this.scaleGraph2.quantize(a);this.qAlpha2=this.alphaGraph2.quantize(a);for(e=0;e<a;e++)this.qRotSpeed[e]*=pc.math.DEG_TO_RAD,this.qRotSpeed2[e]*=pc.math.DEG_TO_RAD;this.localVelocityUMax=new pc.Vec3(0,0,0);this.velocityUMax=
new pc.Vec3(0,0,0);this.colorUMax=new pc.Vec3(0,0,0);this.rotSpeedUMax=[0];this.scaleUMax=[0];this.alphaUMax=[0];this.qLocalVelocityDiv=d(this.qLocalVelocity,this.qLocalVelocity2,this.localVelocityUMax.data);this.qVelocityDiv=d(this.qVelocity,this.qVelocity2,this.velocityUMax.data);this.qColorDiv=d(this.qColor,this.qColor2,this.colorUMax.data);this.qRotSpeedDiv=d(this.qRotSpeed,this.qRotSpeed2,this.rotSpeedUMax);this.qScaleDiv=d(this.qScale,this.qScale2,this.scaleUMax);this.qAlphaDiv=d(this.qAlpha,
this.qAlpha2,this.alphaUMax);if(this.pack8){var g=[0,0,0];c(this.qVelocity,g);var l=[0,0,0];c(this.qVelocity2,l);e=[0,0,0];c(this.qLocalVelocity,e);var h=[0,0,0];c(this.qLocalVelocity2,h);var m=Math.max(g[0],l[0]),m=Math.max(m,g[1]),m=Math.max(m,l[1]),m=Math.max(m,g[2]),m=Math.max(m,l[2]),g=Math.max(e[0],h[0]),g=Math.max(g,e[1]),g=Math.max(g,h[1]),g=Math.max(g,e[2]),g=Math.max(g,h[2]);this.maxVel=m+g}if(!this.useCpu){this.internalTex0=k(f,a,1,b(this.qLocalVelocity,this.qLocalVelocityDiv));this.internalTex1=
k(f,a,1,b(this.qVelocity,this.qVelocityDiv));e=this.qRotSpeed;for(var h=this.qScale,m=this.qScaleDiv,g=this.qRotSpeedDiv,l=this.qAlphaDiv,p=Array(4*e.length),n=0;n<e.length;n++)p[4*n]=e[n],p[4*n+1]=h[n],p[4*n+2]=0,p[4*n+3]=(255*m[n]<<16|255*g[n]<<8|255*l[n])/16777216;this.internalTex2=k(f,a,1,p)}e=this.qColor;h=this.qAlpha;m=Array(4*h.length);for(g=0;g<h.length;g++)m[4*g]=e[3*g],m[4*g+1]=e[3*g+1],m[4*g+2]=e[3*g+2],m[4*g+3]=h[g];this.internalTex3=k(f,a,1,m,pc.PIXELFORMAT_R8_G8_B8_A8,1,!0)},_initializeTextures:function(){this.colorMap&&
(this.material.setParameter("colorMap",this.colorMap),this.lighting&&this.normalMap&&this.material.setParameter("normalMap",this.normalMap))},regenShader:function(){var a=this.graphicsDevice.getProgramLibrary(),b=null!==this.normalMap;this.normalOption=0;this.lighting&&(this.normalOption=b?2:1);this.material.updateShader=function(){this.emitter.scene&&this.emitter.camera!=this.emitter.scene._activeCamera&&(this.emitter.camera=this.emitter.scene._activeCamera,this.emitter.onChangeCamera());var b=a.getProgram("particle",
{useCpu:this.emitter.useCpu,normal:this.emitter.normalOption,halflambert:this.emitter.halfLambert,stretch:this.emitter.stretch,alignToMotion:this.emitter.alignToMotion,soft:this.emitter.depthSoftening,mesh:this.emitter.useMesh,gamma:this.emitter.scene?this.emitter.scene.gammaCorrection:0,toneMap:this.emitter.scene?this.emitter.scene.toneMapping:0,fog:this.emitter.scene&&!this.emitter.noFog?this.emitter.scene.fog:"none",wrap:this.emitter.wrap&&this.emitter.wrapBounds,localSpace:this.emitter.localSpace,
blend:this.blendType,animTex:this.emitter._isAnimated(),animTexLoop:this.emitter.animLoop,pack8:this.emitter.pack8});this.setShader(b)};this.material.updateShader()},resetMaterial:function(){var a=this.material;a.setParameter("stretch",this.stretch);this._isAnimated()&&a.setParameter("animTexParams",this.animParams.data);a.setParameter("colorMult",this.intensity);this.useCpu||(a.setParameter("internalTex0",this.internalTex0),a.setParameter("internalTex1",this.internalTex1),a.setParameter("internalTex2",
this.internalTex2));a.setParameter("internalTex3",this.internalTex3);a.setParameter("numParticles",this.numParticles);a.setParameter("numParticlesPot",this.numParticlesPot);a.setParameter("lifetime",this.lifetime);a.setParameter("rate",this.rate);a.setParameter("rateDiv",this.rate2-this.rate);a.setParameter("seed",this.seed);a.setParameter("scaleDivMult",this.scaleUMax[0]);a.setParameter("alphaDivMult",this.alphaUMax[0]);a.setParameter("graphNumSamples",this.precision);a.setParameter("graphSampleSize",
1/this.precision);a.setParameter("emitterScale",pc.Vec3.ONE.data);this.pack8&&(a.setParameter("inBoundsSize",this.worldBoundsSize.data),a.setParameter("inBoundsCenter",this.worldBounds.center.data),a.setParameter("maxVel",this.maxVel));this.wrap&&this.wrapBounds&&a.setParameter("wrapBounds",this.wrapBounds.data);this.colorMap&&a.setParameter("colorMap",this.colorMap);this.lighting&&this.normalMap&&a.setParameter("normalMap",this.normalMap);0<this.depthSoftening&&a.setParameter("softening",1/(this.depthSoftening*
this.depthSoftening*100));0<this.stretch&&(a.cull=pc.CULLFACE_NONE)},_allocate:function(a){var b=a*this.numParticleVerts,c=a*this.numParticleIndices,d;if(void 0===this.vertexBuffer||this.vertexBuffer.getNumVertices()!==b){d=this.useCpu?[{semantic:pc.SEMANTIC_ATTR0,components:4,type:pc.ELEMENTTYPE_FLOAT32},{semantic:pc.SEMANTIC_ATTR1,components:4,type:pc.ELEMENTTYPE_FLOAT32},{semantic:pc.SEMANTIC_ATTR2,components:4,type:pc.ELEMENTTYPE_FLOAT32},{semantic:pc.SEMANTIC_ATTR3,components:2,type:pc.ELEMENTTYPE_FLOAT32}]:
[{semantic:pc.SEMANTIC_ATTR0,components:4,type:pc.ELEMENTTYPE_FLOAT32}];d=new pc.VertexFormat(this.graphicsDevice,d);this.vertexBuffer=new pc.VertexBuffer(this.graphicsDevice,d,b,pc.BUFFER_DYNAMIC);this.indexBuffer=new pc.IndexBuffer(this.graphicsDevice,pc.INDEXFORMAT_UINT16,c);d=new Float32Array(this.vertexBuffer.lock());var f,e;this.useMesh&&(f=new Float32Array(this.mesh.vertexBuffer.lock()),e=f.length/this.mesh.vertexBuffer.numVertices);for(var k,c=0;c<b;c++){k=Math.floor(c/this.numParticleVerts);
if(this.useMesh){var l=c%this.numParticleVerts;d[4*c]=f[l*e];d[4*c+1]=f[l*e+1];d[4*c+2]=f[l*e+2]}else l=c%4,d[4*c]=g[l][0],d[4*c+1]=g[l][1],d[4*c+2]=0;d[4*c+3]=k}this.useCpu&&(this.vbCPU=new Float32Array(d),this.vbOld=new Float32Array(this.vbCPU.length));this.vertexBuffer.unlock();this.useMesh&&this.mesh.vertexBuffer.unlock();b=0;e=new Uint16Array(this.indexBuffer.lock());this.useMesh&&(f=new Uint16Array(this.mesh.indexBuffer[0].lock()));for(c=0;c<a;c++)if(this.useMesh)for(d=0;d<this.numParticleIndices;d++)e[c*
this.numParticleIndices+d]=f[d]+c*this.numParticleVerts;else d=4*c,e[b++]=d,e[b++]=d+1,e[b++]=d+2,e[b++]=d,e[b++]=d+2,e[b++]=d+3;this.indexBuffer.unlock();this.useMesh&&this.mesh.indexBuffer[0].unlock()}},reset:function(){this.beenReset=!0;this.seed=Math.random();this.material.setParameter("seed",this.seed);if(this.useCpu)for(var a=0;a<this.particleTexStart.length;a++)this.particleTex[a]=this.particleTexStart[a];else this._initializeTextures();this.resetTime();a=this.loop;this.loop=!0;this.addTime(0);
this.loop=a;this.preWarm&&this.prewarm(this.lifetime)},prewarm:function(a){var b=Math.min(Math.floor(a/this.lifetime*this.precision),this.precision);a/=b;for(var c=0;c<b;c++)this.addTime(a)},resetTime:function(){var a=Math.max(this.rate,this.rate2)*this.numParticles+this.lifetime;this.endTime=Date.now()+1E3*a},onEnableDepth:function(){0<this.depthSoftening&&this.camera&&this.camera.requestDepthMap()},onDisableDepth:function(){0<this.depthSoftening&&this.camera&&this.camera.releaseDepthMap()},finishFrame:function(){this.useCpu&&
this.vertexBuffer.unlock()},addTime:function(a,b){var c,d,g=this.graphicsDevice;this.simTimeTotal+=a;this.calculateWorldBounds();this._isAnimated()&&(c=this.animParams,c.x=1/this.animTilesX,c.y=1/this.animTilesY,c.z=this.animNumFrames*this.animSpeed,c.w=this.animNumFrames-1);if(this.lighting){if(!this.scene){console.error("There is no scene defined for lighting particles");return}for(c=0;6>c;c++)this.lightCube[3*c]=this.scene.ambientLight.data[0],this.lightCube[3*c+1]=this.scene.ambientLight.data[1],
this.lightCube[3*c+2]=this.scene.ambientLight.data[2];d=this.scene._globalLights;for(c=0;c<d.length;c++)for(var k=0;6>k;k++){var l=Math.max(this.lightCubeDir[k].dot(d[c]._direction),0)*d[c]._intensity;this.lightCube[3*k]+=d[c]._color.data[0]*l;this.lightCube[3*k+1]+=d[c]._color.data[1]*l;this.lightCube[3*k+2]+=d[c]._color.data[2]*l}this.constantLightCube.setValue(this.lightCube)}this.scene&&this.camera!=this.scene._activeCamera&&(this.camera=this.scene._activeCamera,this.onChangeCamera());this.emitterShape===
pc.EMITTERSHAPE_BOX&&(null===this.meshInstance.node?K.setTRS(pc.Vec3.ZERO,pc.Quat.IDENTITY,this.emitterExtents):K.setTRS(pc.Vec3.ZERO,this.meshInstance.node.getRotation(),D.copy(this.emitterExtents).mul(this.meshInstance.node.localScale)));c=null===this.meshInstance.node?pc.Vec3.ONE.data:this.meshInstance.node.localScale.data;this.material.setParameter("emitterScale",c);this.localSpace&&this.meshInstance.node&&this.material.setParameter("emitterPos",this.meshInstance.node.getPosition().data);if(this.useCpu){g=
new Float32Array(this.vertexBuffer.lock());if(this.meshInstance.node){c=this.meshInstance.node.worldTransform;for(d=0;12>d;d++)A.data[d]=c.data[d];M=this.meshInstance.node.localScale;I=Math.max(Math.max(M.x,M.y),M.z)}d=null===this.meshInstance.node||this.localSpace?pc.Vec3.ZERO:this.meshInstance.node.getPosition();var l=this.camera?this.camera._node.getPosition():pc.Vec3.ZERO,h,m,p,q,F,N,O,X,Q,L=this.precision-1;for(c=0;c<this.numParticles;c++){var G=Math.floor(this.vbCPU[c*this.numParticleVerts*
4+3]),U=this.particleTex[4*G+0+8*this.numParticlesPot];B.data[0]=U;B.data[1]=this.particleTex[4*G+1+8*this.numParticlesPot];B.data[2]=this.particleTex[4*G+2+8*this.numParticlesPot];var R=this.rate+(this.rate2-this.rate)*U,V=this.lifetime,T=this.particleTex[4*G+3+4*this.numParticlesPot]+a,ba=Math.max(Math.min(T/V,1),0),W=0,k=0,ca=0<T&&T<V;ca?(k=ba*L,p=Math.floor(k),q=Math.ceil(k),k%=1,h=this.qRotSpeed[p],m=this.qRotSpeed[q],F=h+(m-h)*k,h=this.qRotSpeed2[p],m=this.qRotSpeed2[q],N=h+(m-h)*k,h=this.qScale[p],
m=this.qScale[q],W=h+(m-h)*k,h=this.qScale2[p],m=this.qScale2[q],O=h+(m-h)*k,h=this.qAlpha[p],m=this.qAlpha[q],X=h+(m-h)*k,h=this.qAlpha2[p],m=this.qAlpha2[q],Q=h+(m-h)*k,p*=3,q*=3,h=this.qLocalVelocity[p],m=this.qLocalVelocity[q],r.data[0]=h+(m-h)*k,h=this.qLocalVelocity[p+1],m=this.qLocalVelocity[q+1],r.data[1]=h+(m-h)*k,h=this.qLocalVelocity[p+2],m=this.qLocalVelocity[q+2],r.data[2]=h+(m-h)*k,h=this.qLocalVelocity2[p],m=this.qLocalVelocity2[q],v.data[0]=h+(m-h)*k,h=this.qLocalVelocity2[p+1],m=
this.qLocalVelocity2[q+1],v.data[1]=h+(m-h)*k,h=this.qLocalVelocity2[p+2],m=this.qLocalVelocity2[q+2],v.data[2]=h+(m-h)*k,h=this.qVelocity[p],m=this.qVelocity[q],n.data[0]=h+(m-h)*k,h=this.qVelocity[p+1],m=this.qVelocity[q+1],n.data[1]=h+(m-h)*k,h=this.qVelocity[p+2],m=this.qVelocity[q+2],n.data[2]=h+(m-h)*k,h=this.qVelocity2[p],m=this.qVelocity2[q],u.data[0]=h+(m-h)*k,h=this.qVelocity2[p+1],m=this.qVelocity2[q+1],u.data[1]=h+(m-h)*k,h=this.qVelocity2[p+2],m=this.qVelocity2[q+2],u.data[2]=h+(m-h)*
k,r.data[0]+=(v.data[0]-r.data[0])*B.data[0],r.data[1]+=(v.data[1]-r.data[1])*B.data[1],r.data[2]+=(v.data[2]-r.data[2])*B.data[2],0<this.initialVelocity&&(this.emitterShape===pc.EMITTERSHAPE_SPHERE?(H.copy(B).scale(2).sub(pc.Vec3.ONE).normalize(),r.add(H.scale(this.initialVelocity))):r.add(pc.Vec3.FORWARD.scale(this.initialVelocity))),n.data[0]+=(u.data[0]-n.data[0])*B.data[0],n.data[1]+=(u.data[1]-n.data[1])*B.data[1],n.data[2]+=(u.data[2]-n.data[2])*B.data[2],F+=(N-F)*B.data[1],W=(W+1E4*U%1*(O-
W))*I,k=1E3*U%1*(Q-X),this.meshInstance.node&&A.transformPoint(r,r),r.add(n.mul(M)),y.copy(r),z.data[0]=this.particleTex[4*G],z.data[1]=this.particleTex[4*G+1],z.data[2]=this.particleTex[4*G+2],t.copy(z).add(r.scale(a)),w.copy(t),this.particleTex[4*G]=w.data[0],this.particleTex[4*G+1]=w.data[1],this.particleTex[4*G+2]=w.data[2],this.particleTex[4*G+3]+=F*a,this.wrap&&this.wrapBounds&&(w.sub(d),w.data[0]=e(w.data[0],this.wrapBounds.data[0])-.5*this.wrapBounds.data[0],w.data[1]=e(w.data[1],this.wrapBounds.data[1])-
.5*this.wrapBounds.data[1],w.data[2]=e(w.data[2],this.wrapBounds.data[2])-.5*this.wrapBounds.data[2],w.add(d)),0<this.sort&&(1===this.sort?(D.copy(w).sub(l),this.particleDistance[G]=-(D.data[0]*D.data[0]+D.data[1]*D.data[1]+D.data[2]*D.data[2])):2===this.sort?this.particleDistance[G]=T:3===this.sort&&(this.particleDistance[G]=-T))):this.calcSpawnPosition(d,G);b?0>T&&(this.particleTex[4*G+3+8*this.numParticlesPot]=-1):(T>=V&&(T-=Math.max(V,(this.numParticles-1)*R),this.particleTex[4*G+3+8*this.numParticlesPot]=
this.loop?1:-1),0>T&&this.loop&&(this.particleTex[4*G+3+8*this.numParticlesPot]=1));0>this.particleTex[4*G+3+8*this.numParticlesPot]&&(ca=!1);this.particleTex[4*G+3+4*this.numParticlesPot]=T;for(F=0;F<this.numParticleVerts;F++)U=this.vbCPU[c*this.numParticleVerts*4+4*F],R=this.vbCPU[c*this.numParticleVerts*4+4*F+1],V=this.vbCPU[c*this.numParticleVerts*4+4*F+2],ca||(U=R=V=0),T=c*this.numParticleVerts*14+14*F,g[T]=w.data[0],g[T+1]=w.data[1],g[T+2]=w.data[2],g[T+3]=ba,g[T+4]=this.alignToMotion?0:this.particleTex[4*
G+3],g[T+5]=W,g[T+6]=k,g[T+7]=y.data[0],g[T+8]=U,g[T+9]=R,g[T+10]=V,g[T+11]=y.data[1],g[T+12]=y.data[2]}if(this.sort>pc.PARTICLESORT_NONE&&this.camera){for(c=0;c<this.numParticles;c++)this.vbToSort[c]=[c,Math.floor(this.vbCPU[c*this.numParticleVerts*4+3])];for(c=0;c<this.vbCPU.length;c++)this.vbOld[c]=this.vbCPU[c];var ja=this.particleDistance;this.vbToSort.sort(function(a,b){return ja[a[1]]-ja[b[1]]});for(c=0;c<this.numParticles;c++)for(g=this.vbToSort[c][0],l=0;l<this.numParticleVerts;l++)for(d=
0;4>d;d++)this.vbCPU[c*this.numParticleVerts*4+4*l+d]=this.vbOld[g*this.numParticleVerts*4+4*l+d]}}else g.setBlending(!1),g.setColorWrite(!0,!0,!0,!0),g.setCullMode(pc.CULLFACE_NONE),g.setDepthTest(!1),g.setDepthWrite(!1),this.frameRandom.x=Math.random(),this.frameRandom.y=Math.random(),this.frameRandom.z=Math.random(),this.constantGraphSampleSize.setValue(1/this.precision),this.constantGraphNumSamples.setValue(this.precision),this.constantNumParticles.setValue(this.numParticles),this.constantNumParticlesPot.setValue(this.numParticlesPot),
this.constantInternalTex0.setValue(this.internalTex0),this.constantInternalTex1.setValue(this.internalTex1),this.constantInternalTex2.setValue(this.internalTex2),this.pack8&&(this.constantOutBoundsMul.setValue(this.worldBoundsMul.data),this.constantOutBoundsAdd.setValue(this.worldBoundsAdd.data),this.constantInBoundsSize.setValue(this.prevWorldBoundsSize.data),this.constantInBoundsCenter.setValue(this.prevWorldBoundsCenter.data),d=this.maxVel*Math.max(Math.max(c[0],c[1]),c[2]),d=Math.max(d,1),this.constantMaxVel.setValue(d)),
d=null===this.meshInstance.node||this.localSpace?pc.Vec3.ZERO.data:this.meshInstance.node.getPosition().data,l=null===this.meshInstance.node?pc.Mat4.IDENTITY:this.meshInstance.node.getWorldTransform(),this.emitterShape===pc.EMITTERSHAPE_BOX?(f(K,x),this.constantSpawnBounds.setValue(x.data)):this.constantSpawnBoundsSphere.setValue(this.emitterRadius),this.constantInitialVelocity.setValue(this.initialVelocity),f(l,C),this.constantEmitterPos.setValue(d),this.constantFrameRandom.setValue(this.frameRandom.data),
this.constantDelta.setValue(a),this.constantRate.setValue(this.rate),this.constantRateDiv.setValue(this.rate2-this.rate),this.constantStartAngle.setValue(this.startAngle*pc.math.DEG_TO_RAD),this.constantStartAngle2.setValue(this.startAngle2*pc.math.DEG_TO_RAD),this.constantSeed.setValue(this.seed),this.constantLifetime.setValue(this.lifetime),this.constantEmitterScale.setValue(c),this.constantEmitterMatrix.setValue(C.data),this.constantLocalVelocityDivMult.setValue(this.localVelocityUMax.data),this.constantVelocityDivMult.setValue(this.velocityUMax.data),
this.constantRotSpeedDivMult.setValue(this.rotSpeedUMax[0]),c=this.swapTex?this.particleTexOUT:this.particleTexIN,c=this.beenReset?this.particleTexStart:c,d=this.swapTex?this.particleTexIN:this.particleTexOUT,this.constantParticleTexIN.setValue(c),b?pc.drawQuadWithShader(g,this.swapTex?this.rtParticleTexIN:this.rtParticleTexOUT,this.shaderParticleUpdateOnStop):pc.drawQuadWithShader(g,this.swapTex?this.rtParticleTexIN:this.rtParticleTexOUT,this.loop?this.shaderParticleUpdateRespawn:this.shaderParticleUpdateNoRespawn),
this.constantParticleTexOUT.setValue(d),this.material.setParameter("particleTexOUT",c),this.material.setParameter("particleTexIN",d),this.beenReset=!1,this.swapTex=!this.swapTex,g.setDepthTest(!0),g.setDepthWrite(!0);if(!this.loop&&Date.now()>this.endTime){if(this.onFinished)this.onFinished();this.meshInstance.visible=!1}},destroy:function(){this.particleTexIN&&this.particleTexIN.destroy();this.particleTexOUT&&this.particleTexOUT.destroy();!this.useCpu&&this.particleTexStart&&this.particleTexStart.destroy();
this.rtParticleTexIN&&this.rtParticleTexIN.destroy();this.rtParticleTexOUT&&this.rtParticleTexOUT.destroy();this.shaderParticleUpdateOnStop=this.shaderParticleUpdateNoRespawn=this.shaderParticleUpdateRespawn=this.rtParticleTexOUT=this.rtParticleTexIN=this.particleTexStart=this.particleTexOUT=this.particleTexIN=null}};return{ParticleEmitter:ba}}());function frac(e){return e-Math.floor(e)}
function encodeFloatRGBA(e){var a=frac(e),b=frac(255*e),c=frac(65025*e);e=frac(160581375*e);a-=b/255;b-=c/255;return[a,b,c-e/255,e-e/255]}function encodeFloatRG(e){var a=frac(e);e=frac(255*e);return[a-e/255,e-e/255]};pc.extend(pc,function(){function e(a,c){return c.key-a.key}var a=function(a,c,d){this.device=a;this.library=a.getProgramLibrary();this.pickColor=new Float32Array(4);this.scene=null;this.drawCalls=[];this.clearOptions={color:[1,1,1,1],depth:1,flags:pc.CLEARFLAG_COLOR|pc.CLEARFLAG_DEPTH};this.resize(c,d);this._ignoreOpacityFor=null};a.prototype.getSelection=function(a,c,d,f){var b=this.device;"object"===typeof a?(f=a,a=f.x,c=f.y,d=f.width,f=f.height):c=this._pickBufferTarget.height-(c+(f||1));d=d||
1;f=f||1;var e=b.renderTarget;b.setRenderTarget(this._pickBufferTarget);b.updateBegin();var l=new Uint8Array(4*d*f);b.readPixels(a,c,d,f,l);b.updateEnd();b.setRenderTarget(e);a=[];for(c=0;c<d*f;c++)b=l[4*c+0]<<16|l[4*c+1]<<8|l[4*c+2],16777215!==b&&(b=this.drawCalls[b],-1===a.indexOf(b)&&a.push(b));return a};a.prototype.prepare=function(a,c){var b=this.device;this.scene=c;var f=b.renderTarget;b.setRenderTarget(this._pickBufferTarget);b.updateBegin();b.setViewport(0,0,this._pickBufferTarget.width,this._pickBufferTarget.height);
b.setScissor(0,0,this._pickBufferTarget.width,this._pickBufferTarget.height);b.clear(this.clearOptions);var g,k,l,p,h,m=b.scope,q=m.resolve("matrix_model"),n=m.resolve("texture_poseMap"),r=m.resolve("texture_poseMapSize"),u=m.resolve("skinPosOffset"),v=m.resolve("matrix_pose[0]"),B=m.resolve("uColor");g=m.resolve("matrix_projection");k=m.resolve("matrix_viewProjection");var z=m.resolve("texture_opacityMap"),m=m.resolve("alpha_ref");p=a._node.getWorldTransform();l=a.getProjectionMatrix();p=p.clone().invert();
h=new pc.Mat4;h.mul2(l,p);g.setValue(l.data);k.setValue(h.data);this.drawCalls=c.drawCalls.slice(0);this.drawCalls.sort(e);for(g=0;g<this.drawCalls.length;g++)if(this.drawCalls[g].command)this.drawCalls[g].command();else if(this.drawCalls[g].pick){l=this.drawCalls[g];k=l.mesh;p=l.material;h=k.primitive[pc.RENDERSTYLE_SOLID].type;var t=p instanceof pc.StandardMaterial||p instanceof pc.BasicMaterial;h!==pc.PRIMITIVE_TRIANGLES&&h!==pc.PRIMITIVE_TRISTRIP&&h!==pc.PRIMITIVE_TRIFAN||!t||(b.setBlending(!1),
b.setCullMode(p.cull),b.setDepthWrite(p.depthWrite),b.setDepthTest(p.depthTest),q.setValue(l.node.worldTransform.data),l.skinInstance&&(u.setValue(l.node.getPosition().data),b.supportsBoneTextures?(n.setValue(l.skinInstance.boneTexture),r.setValue([l.skinInstance.boneTexture.width,l.skinInstance.boneTexture.height])):v.setValue(l.skinInstance.matrixPalette)),p.opacityMap&&(z.setValue(p.opacityMap),m.setValue(l===this._ignoreOpacityFor?0:p.alphaTest)),this.pickColor[0]=(g>>16&255)/255,this.pickColor[1]=
(g>>8&255)/255,this.pickColor[2]=(g&255)/255,this.pickColor[3]=1,B.setValue(this.pickColor),h=l._shader[pc.SHADER_PICK],h||(h=this.library.getProgram("pick",{skin:!!l.skinInstance,screenSpace:l.screenSpace,opacityMap:!!p.opacityMap,opacityChannel:p.opacityMap?p.opacityMapChannel||"r":null}),l._shader[pc.SHADER_PICK]=h),b.setShader(h),b.setVertexBuffer(k.vertexBuffer,0),b.setIndexBuffer(k.indexBuffer[pc.RENDERSTYLE_SOLID]),b.draw(k.primitive[pc.RENDERSTYLE_SOLID]))}b.setViewport(0,0,b.width,b.height);
b.setScissor(0,0,b.width,b.height);b.updateEnd();b.setRenderTarget(f)};a.prototype.resize=function(a,c){var b=new pc.Texture(this.device,{format:pc.PIXELFORMAT_R8_G8_B8_A8,width:a,height:c,mipmaps:!1,minFilter:pc.FILTER_NEAREST,magFilter:pc.FILTER_NEAREST});this._pickBufferTarget=new pc.RenderTarget(this.device,b,{depth:!0})};Object.defineProperty(a.prototype,"renderTarget",{get:function(){return this._pickBufferTarget}});Object.defineProperty(a.prototype,"width",{get:function(){return this._pickBufferTarget.width}});
Object.defineProperty(a.prototype,"height",{get:function(){return this._pickBufferTarget.height}});return{Picker:a}}());var primitiveUv1Padding=.0625,primitiveUv1PaddingScale=1-2*primitiveUv1Padding;
pc.calculateNormals=function(e,a){var b=a.length/3,c=e.length/3,d,f,g,k,l=new pc.Vec3,p=new pc.Vec3,h=new pc.Vec3,m=new pc.Vec3,q=new pc.Vec3,n=new pc.Vec3;new pc.Vec3;var r=[];for(k=0;k<e.length;k++)r[k]=0;for(k=0;k<b;k++)d=a[3*k],f=a[3*k+1],g=a[3*k+2],l.set(e[3*d],e[3*d+1],e[3*d+2]),p.set(e[3*f],e[3*f+1],e[3*f+2]),h.set(e[3*g],e[3*g+1],e[3*g+2]),m.sub2(p,l),q.sub2(h,l),n.cross(m,q).normalize(),r[3*d]+=n.x,r[3*d+1]+=n.y,r[3*d+2]+=n.z,r[3*f]+=n.x,r[3*f+1]+=n.y,r[3*f+2]+=n.z,r[3*g]+=n.x,r[3*g+1]+=
n.y,r[3*g+2]+=n.z;for(k=0;k<c;k++)b=r[3*k],d=r[3*k+1],f=r[3*k+2],b=1/Math.sqrt(b*b+d*d+f*f),r[3*k]*=b,r[3*k+1]*=b,r[3*k+2]*=b;return r};
pc.calculateTangents=function(e,a,b,c){var d=c.length/3,f=e.length/3,g,k,l,p,h,m,q,n,r,u,v,B,z,t,w=new pc.Vec3,y=new pc.Vec3,A=new pc.Vec3,x=new pc.Vec3,C=new pc.Vec3,I=new pc.Vec2,M=new pc.Vec2,K=new pc.Vec2,H,F=new Float32Array(3*f),D=new Float32Array(3*f),O=[];for(H=0;H<d;H++)g=c[3*H],k=c[3*H+1],l=c[3*H+2],A.set(e[3*g],e[3*g+1],e[3*g+2]),x.set(e[3*k],e[3*k+1],e[3*k+2]),C.set(e[3*l],e[3*l+1],e[3*l+2]),I.set(b[2*g],b[2*g+1]),M.set(b[2*k],b[2*k+1]),K.set(b[2*l],b[2*l+1]),p=x.x-A.x,h=C.x-A.x,m=x.y-
A.y,q=C.y-A.y,n=x.z-A.z,r=C.z-A.z,u=M.x-I.x,v=K.x-I.x,B=M.y-I.y,z=K.y-I.y,t=u*z-v*B,0==t?(w.set(0,1,0),y.set(1,0,0)):(t=1/t,w.set((z*p-B*h)*t,(z*m-B*q)*t,(z*n-B*r)*t),y.set((u*h-v*p)*t,(u*q-v*m)*t,(u*r-v*n)*t)),F[3*g+0]+=w.x,F[3*g+1]+=w.y,F[3*g+2]+=w.z,F[3*k+0]+=w.x,F[3*k+1]+=w.y,F[3*k+2]+=w.z,F[3*l+0]+=w.x,F[3*l+1]+=w.y,F[3*l+2]+=w.z,D[3*g+0]+=y.x,D[3*g+1]+=y.y,D[3*g+2]+=y.z,D[3*k+0]+=y.x,D[3*k+1]+=y.y,D[3*k+2]+=y.z,D[3*l+0]+=y.x,D[3*l+1]+=y.y,D[3*l+2]+=y.z;B=new pc.Vec3;z=new pc.Vec3;e=new pc.Vec3;
b=new pc.Vec3;for(H=0;H<f;H++)e.set(a[3*H],a[3*H+1],a[3*H+2]),B.set(F[3*H],F[3*H+1],F[3*H+2]),z.set(D[3*H],D[3*H+1],D[3*H+2]),c=e.dot(B),b.copy(e).scale(c),b.sub2(B,b).normalize(),O[4*H]=b.x,O[4*H+1]=b.y,O[4*H+2]=b.z,b.cross(e,B),O[4*H+3]=0>b.dot(z)?-1:1;return O};
pc.createMesh=function(e,a,b){var c=b&&void 0!==b.normals?b.normals:null,d=b&&void 0!==b.tangents?b.tangents:null,f=b&&void 0!==b.colors?b.colors:null,g=b&&void 0!==b.uvs?b.uvs:null,k=b&&void 0!==b.uvs1?b.uvs1:null,l=b&&void 0!==b.indices?b.indices:null,p=b&&void 0!==b.blendIndices?b.blendIndices:null,h=b&&void 0!==b.blendWeights?b.blendWeights:null;b=[{semantic:pc.SEMANTIC_POSITION,components:3,type:pc.ELEMENTTYPE_FLOAT32}];null!==c&&b.push({semantic:pc.SEMANTIC_NORMAL,components:3,type:pc.ELEMENTTYPE_FLOAT32});
null!==d&&b.push({semantic:pc.SEMANTIC_TANGENT,components:4,type:pc.ELEMENTTYPE_FLOAT32});null!==f&&b.push({semantic:pc.SEMANTIC_COLOR,components:4,type:pc.ELEMENTTYPE_UINT8,normalize:!0});null!==g&&b.push({semantic:pc.SEMANTIC_TEXCOORD0,components:2,type:pc.ELEMENTTYPE_FLOAT32});null!==k&&b.push({semantic:pc.SEMANTIC_TEXCOORD1,components:2,type:pc.ELEMENTTYPE_FLOAT32});null!==p&&b.push({semantic:pc.SEMANTIC_BLENDINDICES,components:2,type:pc.ELEMENTTYPE_UINT8});null!==h&&b.push({semantic:pc.SEMANTIC_BLENDWEIGHT,
components:2,type:pc.ELEMENTTYPE_FLOAT32});var m=new pc.VertexFormat(e,b);b=a.length/3;for(var m=new pc.VertexBuffer(e,m,b),q=new pc.VertexIterator(m),n=0;n<b;n++)q.element[pc.SEMANTIC_POSITION].set(a[3*n],a[3*n+1],a[3*n+2]),null!==c&&q.element[pc.SEMANTIC_NORMAL].set(c[3*n],c[3*n+1],c[3*n+2]),null!==d&&q.element[pc.SEMANTIC_TANGENT].set(d[4*n],d[4*n+1],d[4*n+2],d[4*n+3]),null!==f&&q.element[pc.SEMANTIC_COLOR].set(f[4*n],f[4*n+1],f[4*n+2],f[4*n+3]),null!==g&&q.element[pc.SEMANTIC_TEXCOORD0].set(g[2*
n],g[2*n+1]),null!==k&&q.element[pc.SEMANTIC_TEXCOORD1].set(k[2*n],k[2*n+1]),null!==p&&q.element[pc.SEMANTIC_BLENDINDICES].set(p[2*n],p[2*n+1]),null!==h&&q.element[pc.SEMANTIC_BLENDWEIGHT].set(h[2*n],h[2*n+1]),q.next();q.end();c=null;if(d=null!==l)c=new pc.IndexBuffer(e,pc.INDEXFORMAT_UINT16,l.length),(new Uint16Array(c.lock())).set(l),c.unlock();e=new pc.BoundingBox;e.compute(a);a=new pc.Mesh;a.vertexBuffer=m;a.indexBuffer[0]=c;a.primitive[0].type=pc.PRIMITIVE_TRIANGLES;a.primitive[0].base=0;a.primitive[0].count=
d?l.length:b;a.primitive[0].indexed=d;a.aabb=e;return a};
pc.createTorus=function(e,a){var b=a&&void 0!==a.tubeRadius?a.tubeRadius:.2,c=a&&void 0!==a.ringRadius?a.ringRadius:.3,d=a&&void 0!==a.segments?a.segments:30,f=a&&void 0!==a.sides?a.sides:20,g,k,l,p,h,m,q,n,r,u,v=[],B=[],z=[],t=[];for(g=0;g<=f;g++)for(k=0;k<=d;k++)l=Math.cos(2*Math.PI*k/d)*(c+b*Math.cos(2*Math.PI*g/f)),p=Math.sin(2*Math.PI*g/f)*b,h=Math.sin(2*Math.PI*k/d)*(c+b*Math.cos(2*Math.PI*g/f)),m=Math.cos(2*Math.PI*k/d)*Math.cos(2*Math.PI*g/f),q=Math.sin(2*Math.PI*g/f),n=Math.sin(2*Math.PI*
k/d)*Math.cos(2*Math.PI*g/f),r=g/f,u=1-k/d,v.push(l,p,h),B.push(m,q,n),z.push(r,u),g<f&&k<d&&(l=g*(d+1)+k,p=(g+1)*(d+1)+k,h=g*(d+1)+(k+1),m=(g+1)*(d+1)+(k+1),t.push(l,p,h),t.push(p,m,h));b={normals:B,uvs:z,indices:t};pc.precalculatedTangents&&(b.tangents=pc.calculateTangents(v,B,z,t));return pc.createMesh(e,v,b)};
pc._createConeData=function(e,a,b,c,d,f){var g,k,l,p,h,m=new pc.Vec3,q=new pc.Vec3;l=new pc.Vec3;var n,r=[],u=[],v=[],B=[],z=[],t;if(0<b)for(g=0;g<=c;g++)for(k=0;k<=d;k++)t=k/d*2*Math.PI-Math.PI,n=Math.sin(t),t=Math.cos(t),h=new pc.Vec3(n*e,-b/2,t*e),p=new pc.Vec3(n*a,b/2,t*a),m.lerp(h,p,g/c),q.sub2(p,h).normalize(),n=new pc.Vec3(t,0,-n),l.cross(n,q).normalize(),r.push(m.x,m.y,m.z),u.push(l.x,l.y,l.z),p=k/d,h=g/c,v.push(p,h),n=h,h=p,p=n,p/=3,p=p*primitiveUv1PaddingScale+primitiveUv1Padding,h=h*primitiveUv1PaddingScale+
primitiveUv1Padding,B.push(p,h),g<c&&k<d&&(n=g*(d+1)+k,t=g*(d+1)+(k+1),p=(g+1)*(d+1)+k,h=(g+1)*(d+1)+(k+1),z.push(n,t,p),z.push(t,h,p));if(f){e=Math.floor(d/2);g=b/2;for(b=0;b<=e;b++)for(t=b*Math.PI*.5/e,n=Math.sin(t),t=Math.cos(t),m=0;m<=d;m++)f=2*m*Math.PI/d-Math.PI/2,p=Math.sin(f),f=Math.cos(f),f*=n,k=t,l=p*n,p=1-m/d,h=1-b/e,r.push(f*a,k*a+g,l*a),u.push(f,k,l),v.push(p,h),p/=3,h/=3,p=p*primitiveUv1PaddingScale+primitiveUv1Padding,h=h*primitiveUv1PaddingScale+primitiveUv1Padding,p+=1/3,B.push(p,
h);q=(c+1)*(d+1);for(b=0;b<e;++b)for(m=0;m<d;++m)n=b*(d+1)+m,t=n+d+1,z.push(q+n+1,q+t,q+n),z.push(q+n+1,q+t+1,q+t);for(b=0;b<=e;b++)for(t=.5*Math.PI+b*Math.PI*.5/e,n=Math.sin(t),t=Math.cos(t),m=0;m<=d;m++)f=2*m*Math.PI/d-Math.PI/2,p=Math.sin(f),f=Math.cos(f),f*=n,k=t,l=p*n,p=1-m/d,h=1-b/e,r.push(f*a,k*a-g,l*a),u.push(f,k,l),v.push(p,h),p/=3,h/=3,p=p*primitiveUv1PaddingScale+primitiveUv1Padding,h=h*primitiveUv1PaddingScale+primitiveUv1Padding,p+=2/3,B.push(p,h);q=(c+1)*(d+1)+(d+1)*(e+1);for(b=0;b<
e;++b)for(m=0;m<d;++m)n=b*(d+1)+m,t=n+d+1,z.push(q+n+1,q+t,q+n),z.push(q+n+1,q+t+1,q+t)}else{q=(c+1)*(d+1);if(0<e)for(g=0;g<d;g++)t=g/d*2*Math.PI,f=Math.sin(t),k=-b/2,l=Math.cos(t),p=1-(f+1)/2,h=(l+1)/2,r.push(f*e,k,l*e),u.push(0,-1,0),v.push(p,h),p/=3,h/=3,p=p*primitiveUv1PaddingScale+primitiveUv1Padding,h=h*primitiveUv1PaddingScale+primitiveUv1Padding,p+=1/3,B.push(p,h),1<g&&z.push(q,q+g,q+g-1);q+=d;if(0<a)for(g=0;g<d;g++)t=g/d*2*Math.PI,f=Math.sin(t),k=b/2,l=Math.cos(t),p=1-(f+1)/2,h=(l+1)/2,r.push(f*
a,k,l*a),u.push(0,1,0),v.push(p,h),p/=3,h/=3,p=p*primitiveUv1PaddingScale+primitiveUv1Padding,h=h*primitiveUv1PaddingScale+primitiveUv1Padding,p+=2/3,B.push(p,h),1<g&&z.push(q,q+g-1,q+g)}return{positions:r,normals:u,uvs:v,uvs1:B,indices:z}};
pc.createCylinder=function(e,a){var b=a&&void 0!==a.baseRadius?a.baseRadius:.5,b=pc._createConeData(b,b,a&&void 0!==a.height?a.height:1,a&&void 0!==a.heightSegments?a.heightSegments:5,a&&void 0!==a.capSegments?a.capSegments:20,!1);pc.precalculatedTangents&&(b.tangents=pc.calculateTangents(b.positions,b.normals,b.uvs,b.indices));return pc.createMesh(e,b.positions,b)};
pc.createCapsule=function(e,a){var b=a&&void 0!==a.radius?a.radius:.3,b=pc._createConeData(b,b,(a&&void 0!==a.height?a.height:1)-2*b,a&&void 0!==a.heightSegments?a.heightSegments:1,a&&void 0!==a.sides?a.sides:20,!0);pc.precalculatedTangents&&(b.tangents=pc.calculateTangents(b.positions,b.normals,b.uvs,b.indices));return pc.createMesh(e,b.positions,b)};
pc.createCone=function(e,a){var b=pc._createConeData(a&&void 0!==a.baseRadius?a.baseRadius:.5,a&&void 0!==a.peakRadius?a.peakRadius:0,a&&void 0!==a.height?a.height:1,a&&void 0!==a.heightSegments?a.heightSegments:5,a&&void 0!==a.capSegments?a.capSegments:18,!1);pc.precalculatedTangents&&(b.tangents=pc.calculateTangents(b.positions,b.normals,b.uvs,b.indices));return pc.createMesh(e,b.positions,b)};
pc.createSphere=function(e,a){var b=a&&void 0!==a.radius?a.radius:.5,c=a&&void 0!==a.latitudeBands?a.latitudeBands:16,d=a&&void 0!==a.longitudeBands?a.longitudeBands:16,f,g,k,l,p,h,m,q,n,r=[],u=[],v=[],B=[];for(g=0;g<=c;g++)for(f=g*Math.PI/c,k=Math.sin(f),l=Math.cos(f),f=0;f<=d;f++)p=2*f*Math.PI/d-Math.PI/2,h=Math.sin(p),p=Math.cos(p),p*=k,m=l,h*=k,q=1-f/d,n=1-g/c,r.push(p*b,m*b,h*b),u.push(p,m,h),v.push(q,n);for(g=0;g<c;++g)for(f=0;f<d;++f)b=g*(d+1)+f,k=b+d+1,B.push(b+1,k,b),B.push(b+1,k+1,k);c=
{normals:u,uvs:v,uvs1:v,indices:B};pc.precalculatedTangents&&(c.tangents=pc.calculateTangents(r,u,v,B));return pc.createMesh(e,r,c)};
pc.createPlane=function(e,a){var b=a&&void 0!==a.halfExtents?a.halfExtents:new pc.Vec2(.5,.5),c=a&&void 0!==a.widthSegments?a.widthSegments:5,d=a&&void 0!==a.lengthSegments?a.lengthSegments:5,f,g,k,l,p,h,m=[],q=[],n=[],r=[];for(